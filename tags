!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
"	plugged/PIV/ftplugin/php.vim	/^    inoremap <buffer> " ""<LEFT>$/;"	m
$	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal \$$/;"	m
$	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! \$$/;"	m
$	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal! \$$/;"	m
'	plugged/PIV/ftplugin/php.vim	/^    inoremap <buffer> ' ''<LEFT>$/;"	m
'	plugged/PIV/ftplugin/php.vim	/^vnoremap <buffer> ' "zdi'<C-R>z'<ESC>$/;"	m
(	plugged/PIV/ftplugin/php.vim	/^        inoremap ( ()<LEFT>$/;"	m
(	plugged/PIV/ftplugin/php.vim	/^        inoremap <buffer> ( (  )<LEFT><LEFT>$/;"	m
(	plugged/PIV/ftplugin/php.vim	/^vnoremap <buffer> ( "zdi(<C-R>z)<ESC>$/;"	m
+	plugged/vim-expand-region/plugin/expand_region.vim	/^  nmap + <Plug>(expand_region_expand)$/;"	m
+	plugged/vim-expand-region/plugin/expand_region.vim	/^  vmap + <Plug>(expand_region_expand)$/;"	m
,	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map , <Plug>(easymotion-prev)$/;"	m
,	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal ,$/;"	m
/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/	plugged/vim-easymotion/t/smartsign_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/,,1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal \/,,1$/;"	m
/,<1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal \/,<1$/;"	m
0	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! 0$/;"	m
0	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal! 0$/;"	m
0	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal! 0$/;"	m
2,	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal 2,$/;"	m
3;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal 3;$/;"	m
4,	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal 4,$/;"	m
;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map ; <Plug>(easymotion-next)$/;"	m
;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal ;$/;"	m
<C-@><C-@>c	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>c :vert scs find c <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>d	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>d :vert scs find d <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>e	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>e :vert scs find e <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>f	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>f :vert scs find f <C-R>=expand("<cfile>")<CR><CR>	$/;"	m
<C-@><C-@>g	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>g :vert scs find g <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>i	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>i :vert scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>	$/;"	m
<C-@><C-@>s	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>s :vert scs find s <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>t	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>t :vert scs find t <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@>c	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@>c :scs find c <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>d	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@>d :scs find d <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>e	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@>e :scs find e <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>f	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@>f :scs find f <C-R>=expand("<cfile>")<CR><CR>	$/;"	m
<C-@>g	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@>g :scs find g <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>i	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@>i :scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>	$/;"	m
<C-@>s	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@>s :scs find s <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>t	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-@>t :scs find t <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-Down>	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  noremap <C-Down>  <C-W>j$/;"	m
<C-G>S	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-H>	plugged/PIV/ftplugin/php.vim	/^inoremap <buffer> <C-H> <ESC>:!phpm <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-H>	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  noremap <C-H> <C-W>h$/;"	m
<C-J>	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  noremap <C-J> <C-W>j$/;"	m
<C-K>	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  noremap <C-K> <C-W>k$/;"	m
<C-L>	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  noremap <C-L> <C-W>l$/;"	m
<C-Left>	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  noremap <C-Left>  <C-W>h$/;"	m
<C-Right>	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  noremap <C-Right> <C-W>l$/;"	m
<C-S-TAB>	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  noremap <C-S-TAB> :call <SID>CycleBuffer(0)<CR>:<BS>$/;"	m
<C-S-TAB>	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  noremap <C-S-TAB> <C-W>W$/;"	m
<C-S>	plugged/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-TAB>	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  noremap <C-TAB>   :call <SID>CycleBuffer(1)<CR>:<BS>$/;"	m
<C-TAB>	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  noremap <C-TAB>   <C-W>w$/;"	m
<C-Up>	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  noremap <C-Up>    <C-W>k$/;"	m
<C-\>c	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-\\>c :cs find c <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\>d	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-\\>d :cs find d <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\>e	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-\\>e :cs find e <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\>f	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-\\>f :cs find f <C-R>=expand("<cfile>")<CR><CR>	$/;"	m
<C-\>g	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-\\>g :cs find g <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\>i	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-\\>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>$/;"	m
<C-\>s	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-\\>s :cs find s <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\>t	plugged/cscope/plugin/cscope_maps.vim	/^    nmap <C-\\>t :cs find t <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<F7>	plugged/vimgdb_runtime/macros/gdb_mappings.vim	/^nmap <F7>  :call ToggleGDB()<cr>$/;"	m
<Leader><Leader>	plugged/vim-easymotion/plugin/EasyMotion.vim	/^            map <Leader><Leader> <Plug>(easymotion-prefix)$/;"	m
<Leader>B	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>B <Plug>(easymotion-B)$/;"	m
<Leader>E	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>E <Plug>(easymotion-E)$/;"	m
<Leader>W	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>W <Plug>(easymotion-W)$/;"	m
<Leader>b	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>b <Plug>(easymotion-iskeyword-b)$/;"	m
<Leader>b	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map <Leader>b <Plug>(easymotion-iskeyword-b)$/;"	m
<Leader>e	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>e <Plug>(easymotion-iskeyword-e)$/;"	m
<Leader>gE	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>gE <Plug>(easymotion-gE)$/;"	m
<Leader>ge	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>ge <Plug>(easymotion-iskeyword-ge)$/;"	m
<Leader>ih	plugged/hc/plugin/a.vim	/^imap <Leader>ih <ESC>:IHS<CR>$/;"	m
<Leader>ih	plugged/hc/plugin/a.vim	/^nmap <Leader>ih :IHS<CR>$/;"	m
<Leader>ihn	plugged/hc/plugin/a.vim	/^imap <Leader>ihn <ESC>:IHN<CR>$/;"	m
<Leader>ihn	plugged/hc/plugin/a.vim	/^nmap <Leader>ihn :IHN<CR>$/;"	m
<Leader>is	plugged/hc/plugin/a.vim	/^imap <Leader>is <ESC>:IHS<CR>:A<CR>$/;"	m
<Leader>is	plugged/hc/plugin/a.vim	/^nmap <Leader>is :IHS<CR>:A<CR>$/;"	m
<Leader>mbc	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  map <unique> <Leader>mbc <Plug>CMiniBufExplorer$/;"	m
<Leader>mbe	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  map <unique> <Leader>mbe <Plug>MiniBufExplorer$/;"	m
<Leader>mbt	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  map <unique> <Leader>mbt <Plug>TMiniBufExplorer$/;"	m
<Leader>mbu	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  map <unique> <Leader>mbu <Plug>UMiniBufExplorer$/;"	m
<Leader>w	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>w <Plug>(easymotion-iskeyword-w)$/;"	m
<Leader>w	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map <Leader>w <Plug>(easymotion-iskeyword-w)$/;"	m
<Plug>(easymotion-activate)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-activate) :<C-u>call EasyMotion#activate(0)<CR>$/;"	m
<Plug>(easymotion-dotrepeat)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-dotrepeat)$/;"	m
<Plug>(easymotion-next)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-next)$/;"	m
<Plug>(easymotion-overwin-f)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f) :<C-u>call EasyMotion#OverwinF(1)<CR>$/;"	m
<Plug>(easymotion-overwin-f2)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f2) :<C-u>call EasyMotion#OverwinF(2)<CR>$/;"	m
<Plug>(easymotion-overwin-line)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-line) :<C-u>call EasyMotion#overwin#line()<CR>$/;"	m
<Plug>(easymotion-overwin-w)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-w) :<C-u>call EasyMotion#overwin#w()<CR>$/;"	m
<Plug>(easymotion-prev)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-prev)$/;"	m
<Plug>(easymotion-repeat)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-repeat)$/;"	m
<Plug>(expand_region_expand)	plugged/vim-expand-region/plugin/expand_region.vim	/^nnoremap <silent> <Plug>(expand_region_expand)$/;"	m
<Plug>CMiniBufExplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>CMiniBufExplorer :call <SID>StopExplorer(1)<CR>:<BS>$/;"	m
<Plug>CSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>Csurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>ISurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>MiniBufExplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>MiniBufExplorer  :call <SID>StartExplorer(1, -1)<CR>:<BS>$/;"	m
<Plug>NERDTreeFocusToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeFocusToggle  :call <SID>NERDTreeFocusToggle()$/;"	m
<Plug>NERDTreeMirrorOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeMirrorOpen   :call <SID>NERDTreeMirrorOrCreate()$/;"	m
<Plug>NERDTreeMirrorToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeMirrorToggle :call <SID>NERDTreeMirrorToggle()$/;"	m
<Plug>NERDTreeSteppedClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeSteppedClose :call <SID>NERDTreeSteppedClose()$/;"	m
<Plug>NERDTreeSteppedOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeSteppedOpen  :call <SID>NERDTreeSteppedOpen()$/;"	m
<Plug>NERDTreeTabsClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsClose    :call <SID>NERDTreeCloseAllTabs()$/;"	m
<Plug>NERDTreeTabsFind	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsFind     :call <SID>NERDTreeFindFile()$/;"	m
<Plug>NERDTreeTabsOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsOpen     :call <SID>NERDTreeOpenAllTabs()$/;"	m
<Plug>NERDTreeTabsToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsToggle   :call <SID>NERDTreeToggleAllTabs()$/;"	m
<Plug>SuperTabBackward	plugged/supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabBackward <c-r>=SuperTab('p')<cr>$/;"	m
<Plug>SuperTabForward	plugged/supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabForward <c-r>=SuperTab('n')<cr>$/;"	m
<Plug>SurroundRepeat	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>TMiniBufExplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>TMiniBufExplorer :call <SID>ToggleExplorer()<CR>:<BS>$/;"	m
<Plug>ToggleBackground	plugged/vim-colors-solarized/autoload/togglebg.vim	/^inoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>a$/;"	m
<Plug>ToggleBackground	plugged/vim-colors-solarized/autoload/togglebg.vim	/^nnoremap <unique> <script> <Plug>ToggleBackground <SID>TogBG$/;"	m
<Plug>ToggleBackground	plugged/vim-colors-solarized/autoload/togglebg.vim	/^vnoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>gv$/;"	m
<Plug>UMiniBufExplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>UMiniBufExplorer :call <SID>AutoUpdate(-1)<CR>:<BS>$/;"	m
<Plug>VSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>YSsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<S-F7>	plugged/vimgdb_runtime/macros/gdb_mappings.vim	/^nmap <S-F7>  :call <SID>Toggle()<cr>$/;"	m
<SID>TogBG	plugged/vim-colors-solarized/autoload/togglebg.vim	/^noremap <SID>TogBG  :call <SID>TogBG()<CR>$/;"	m
<SID>xx	plugged/taglist.vim/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<c-x>	plugged/supertab/plugin/supertab.vim	/^  inoremap <silent> <c-x> <c-r>=<SID>ManualCompletionEnter()<cr>$/;"	m
<cr>	plugged/supertab/plugin/supertab.vim	/^      inoremap <silent> <cr> <c-r>=<SID>SelectCompletion(1)<cr>$/;"	m
<plug>NERDCommenterAltDelims	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <plug>NERDCommenterAltDelims :call <SID>SwitchToAlternativeDelimiters(1)<cr>$/;"	m
<plug>NERDCommenterInsert	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^inoremap <silent> <plug>NERDCommenterInsert <SPACE><BS><ESC>:call NERDComment('i', "insert")<CR>$/;"	m
<plug>PIVphpAlign	plugged/PIV/ftplugin/php.vim	/^vnoremap <silent> <plug>PIVphpAlign :call PhpAlign()<CR>$/;"	m
<plug>PIVphpDocRange	plugged/PIV/ftplugin/php.vim	/^vnoremap <silent> <plug>PIVphpDocRange :call PhpDocRange()<CR>$/;"	m
<plug>PIVphpDocSingle	plugged/PIV/ftplugin/php.vim	/^nnoremap <silent> <plug>PIVphpDocSingle :call PhpDocSingle()<CR>$/;"	m
A	plugged/hc/plugin/a.vim	/^comm! -nargs=? -bang A call AlternateFile("n<bang>", <f-args>)$/;"	c
AN	plugged/hc/plugin/a.vim	/^comm! -nargs=? -bang AN call NextAlternate("<bang>")$/;"	c
AS	plugged/hc/plugin/a.vim	/^comm! -nargs=? -bang AS call AlternateFile("h<bang>", <f-args>)$/;"	c
AT	plugged/hc/plugin/a.vim	/^comm! -nargs=? -bang AT call AlternateFile("t<bang>", <f-args>)$/;"	c
AV	plugged/hc/plugin/a.vim	/^comm! -nargs=? -bang AV call AlternateFile("v<bang>", <f-args>)$/;"	c
AcceptSelection	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:AcceptSelection(action)$/;"	f
AddAlternateExtensionMapping	plugged/hc/plugin/a.vim	/^function! <SID>AddAlternateExtensionMapping(extension, alternates)$/;"	f
AddFileInfo	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:AddFileInfo()$/;"	f
AddHeader	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:AddHeader()$/;"	f
AddLeftDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelim(delim, theLine)$/;"	f
AddLeftDelimAligned	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelimAligned(delim, theLine, alignIndx)$/;"	f
AddLine	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	plugged/vim-easymotion/t/easymotion_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	plugged/vim-easymotion/t/operator_pending_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	plugged/vim-easymotion/t/smartsign_spec.vim	/^function! AddLine(str)$/;"	f
AddRightDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelim(delim, theLine)$/;"	f
AddRightDelimAligned	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelimAligned(delim, theLine, alignIndx)$/;"	f
AddScopedTags	plugged/tagbar/autoload/tagbar.vim	/^function! s:AddScopedTags(tags, processedtags, parent, depth,$/;"	f
AddSeparators	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:AddSeparators()$/;"	f
AddToClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath, path) " {{{2$/;"	f
AddToFavDir	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:AddToFavDir()$/;"	f
AltMultipart	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AltMultipart()$/;"	f
AlternateFile	plugged/hc/plugin/a.vim	/^function! AlternateFile(splitWindow, ...)$/;"	f
AlternateOpenFileUnderCursor	plugged/hc/plugin/a.vim	/^function! AlternateOpenFileUnderCursor(splitWindow,...)$/;"	f
AlternateOpenNextFile	plugged/hc/plugin/a.vim	/^function! AlternateOpenNextFile(bang)$/;"	f
AppendCommentToLine	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AppendCommentToLine()$/;"	f
Args	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:Args() " {{{2$/;"	f
AutoClose	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:AutoClose() "{{{$/;"	f
AutoUpdate	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>AutoUpdate(delBufNum)$/;"	f
AutoUpdate	plugged/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force) abort$/;"	f
BaseTag.New	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.New(name) abort dict$/;"	f
BaseTag._getPrefix	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._getPrefix() abort dict$/;"	f
BaseTag._init	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._init(name) abort dict$/;"	f
BaseTag.closeFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.closeFold() abort dict$/;"	f
BaseTag.getClosedParentTline	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getClosedParentTline() abort dict$/;"	f
BaseTag.getPrototype	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getPrototype(short) abort dict$/;"	f
BaseTag.initFoldState	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.initFoldState() abort dict$/;"	f
BaseTag.isFoldable	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFoldable() abort dict$/;"	f
BaseTag.isFolded	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFolded() abort dict$/;"	f
BaseTag.isKindheader	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isKindheader() abort dict$/;"	f
BaseTag.isNormalTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isNormalTag() abort dict$/;"	f
BaseTag.isPseudoTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isPseudoTag() abort dict$/;"	f
BaseTag.openFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openFold() abort dict$/;"	f
BaseTag.openParents	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openParents() abort dict$/;"	f
BaseTag.setFolded	plugged/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.setFolded(folded) abort dict$/;"	f
Bookmark.AddBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
Bookmark.GetSelected	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
Bookmark.Write	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
Bookmark.compareTo	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
Bookmark.openInNewTab	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
Bookmark.validate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
BottomExplorerWindow	plugged/winmanager_23/plugin/winmanager.vim	/^	command -nargs=0 BottomExplorerWindow :silent call <SID>GotoExplorerWindow('$')$/;"	c
Breakpoint	plugged/vimgdb_runtime/macros/gdb_mappings.vim	/^function! s:Breakpoint(cmd)$/;"	f
BufEnterHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:BufEnterHook() abort " {{{2$/;"	f
BufReadHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:BufReadHandler()$/;"	f
BufReadPostHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:BufReadPostHook() abort " {{{2$/;"	f
BufWinEnterHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:BufWinEnterHandler()$/;"	f
BufWritePostHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:BufWritePostHook() abort " {{{2$/;"	f
BufferOrFileExists	plugged/hc/plugin/a.vim	/^function! <SID>BufferOrFileExists(fileName)$/;"	f
BuildBufferList	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>BuildBufferList(delBufNum, updateBufList)$/;"	f
BuildContextStack	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:BuildContextStack(namespaces, szCurrentScope)$/;"	f
BuildPrompt	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f
CMiniBufExplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  command! CMiniBufExplorer  call <SID>StopExplorer(1)$/;"	c
CacheErrors	plugged/syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(checker_names) abort " {{{2$/;"	f
CanCommentLine	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanCommentLine(forceNested, lineNum)$/;"	f
CanPlaceCursor	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanPlaceCursor(line, col)$/;"	f
CanSexyCommentLines	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanSexyCommentLines(topline, bottomline)$/;"	f
CanToggleCommentLine	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanToggleCommentLine(forceNested, lineNum)$/;"	f
CanUseOmnicompletion	plugged/omnicppcomplete-041/autoload/omni/cpp/maycomplete.vim	/^function! s:CanUseOmnicompletion()$/;"	f
Cancell	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:Cancell() " {{{$/;"	f
CaptureKeyMap	plugged/supertab/plugin/supertab.vim	/^function! s:CaptureKeyMap(key) " {{{$/;"	f
CaptureKeyPresses	plugged/supertab/plugin/supertab.vim	/^function! s:CaptureKeyPresses() " {{{$/;"	f
CheckAutocmdEnablePHPFold	plugged/PIV/plugin/phpfolding.vim	/^function! s:CheckAutocmdEnablePHPFold()$/;"	f
CheckExCtagsVersion	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
CheckFTCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
CheckForExCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
CheckMouseClick	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
ClassSep	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:ClassSep() " {{{2$/;"	f
Classname	plugged/python-syntax/test.py	/^class Classname$/;"	c
CleanUpHistory	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! <SID>CleanUpHistory()$/;"	f
ClearAllCtrlPCaches	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearCache	plugged/syntastic/plugin/syntastic.vim	/^function! s:ClearCache() abort " {{{2$/;"	f
ClearCtrlPCache	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
Close	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Close()$/;"	f
CloseFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
CloseIfOnlyNerdTreeLeft	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:CloseIfOnlyNerdTreeLeft()$/;"	f
ClosePreview	plugged/supertab/plugin/supertab.vim	/^function! s:ClosePreview() " {{{$/;"	f
CloseWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
CloseWindowsManager	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>CloseWindowsManager()$/;"	f
CommandLineCompletion	plugged/supertab/plugin/supertab.vim	/^function! s:CommandLineCompletion() " {{{$/;"	f
CommentBlock	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentBlock(top, bottom, lSide, rSide, forceNested )$/;"	f
CommentLines	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLines(forceNested, align, firstLine, lastLine)$/;"	f
CommentLinesMinimal	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesMinimal(firstLine, lastLine)$/;"	f
CommentLinesSexy	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesSexy(topline, bottomline)$/;"	f
CommentLinesToggle	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesToggle(forceNested, firstLine, lastLine)$/;"	f
CommentRegion	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested)$/;"	f
CompareByKind	plugged/tagbar/autoload/tagbar.vim	/^function! s:CompareByKind(tag1, tag2) abort$/;"	f
CompareByLine	plugged/tagbar/autoload/tagbar.vim	/^function! s:CompareByLine(tag1, tag2) abort$/;"	f
CompareMovements	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! CompareMovements(movement1, movement2, backward)$/;"	f
CompleteCheckerName	plugged/syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
CompleteFiletypes	plugged/syntastic/plugin/syntastic.vim	/^function! s:CompleteFiletypes(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
CompletionMode	plugged/supertab/plugin/supertab.vim	/^function! s:CompletionMode() " {{{$/;"	f
CompletionReset	plugged/supertab/plugin/supertab.vim	/^function! s:CompletionReset(char) " {{{$/;"	f
ComputeNoise	plugged/vim-ctrlspace/go/file_engine.go	/^func (item *FileItem) ComputeNoise() {$/;"	f
Context	plugged/vim-ctrlspace/go/file_engine.go	/^type Context struct {$/;"	t
ContextCompletion	plugged/supertab/plugin/supertab.vim	/^function! s:ContextCompletion() " {{{$/;"	f
ContextDiscover	plugged/supertab/plugin/supertab.vim	/^function! s:ContextDiscover() " {{{$/;"	f
ContextText	plugged/supertab/plugin/supertab.vim	/^function! s:ContextText() " {{{$/;"	f
ConvertLeadingSpacesToTabs	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingSpacesToTabs(line)$/;"	f
ConvertLeadingTabsToSpaces	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingTabsToSpaces(line)$/;"	f
ConvertLeadingWhiteSpace	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingWhiteSpace(line)$/;"	f
CorrectFocusOnStartup	plugged/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
CountNonESCedOccurances	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CountNonESCedOccurances(str, searchstr, escChar)$/;"	f
CreateAutocommands	plugged/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
CreateCoordKeyDict	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:CreateCoordKeyDict(groups, ...)$/;"	f
CreateDelimMapFromCms	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CreateDelimMapFromCms()$/;"	f
CreateMaps	plugged/PIV/ftplugin/php.vim	/^function! s:CreateMaps(target, combo)$/;"	f
CreateMaps	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function! s:CreateMaps(modes, target, desc, combo)$/;"	f
CreateNMap	plugged/PIV/ftplugin/php.vim	/^function! s:CreateNMap(target, combo)$/;"	f
CreateNewFile	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f
CreatePseudoTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:CreatePseudoTag(name, parent, scope, typeinfo, fileinfo) abort$/;"	f
CreateVMap	plugged/PIV/ftplugin/php.vim	/^function! s:CreateVMap(target, combo)$/;"	f
Creator.BufNamePrefix	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreateTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
Creator.CreateWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
Creator.New	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.ToggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
Creator._bindMappings	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
Creator._createTreeWin	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._isBufHidden	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
Creator._nextBufferName	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._removeTreeBufForTab	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
Creator._setCommonBufOptions	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
Creator.createWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
Creator.toggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
CtagsErrMsg	plugged/tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
CtrlP	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	plugged/ctrlp.vim/autoload/ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init(1)$/;"	c
CtrlPChange	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCurFile	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init(0, { 'mode': 'c' })$/;"	c
CtrlPCurWD	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init(0, { 'mode': '' })$/;"	c
CtrlPDir	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLine	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPLine$/;"	c
CtrlPMRUFiles	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init(2, { 'dir': <q-args> })$/;"	c
CtrlPMixed	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPQuickfix	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init(0, { 'mode': 'r' })$/;"	c
CtrlPTag	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
CursorPos	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	plugged/vim-easymotion/t/easymotion_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	plugged/vim-easymotion/t/operator_pending_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	plugged/vim-easymotion/t/smartsign_spec.vim	/^function! CursorPos()$/;"	f
CycleBuffer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>CycleBuffer(forward)$/;"	f
DEBUG	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>DEBUG(msg, level)$/;"	f
DESTDIR	plugged/delimitMate/Makefile	/^DESTDIR  =  $(HOME)\/.vim$/;"	m
DOC	plugged/delimitMate/Makefile	/^DOC      =  $(wildcard doc\/*.txt)$/;"	m
DeleteFile	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:DeleteFile() range$/;"	f
DelimitMateOff	plugged/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateOff call s:setup(0)$/;"	c
DelimitMateOn	plugged/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateOn call s:setup(1)$/;"	c
DelimitMateReload	plugged/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateReload call s:setup(1)$/;"	c
DelimitMateSwitch	plugged/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateSwitch call s:setup(2)$/;"	c
DelimitMateTest	plugged/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateTest call s:test()$/;"	c
DetectFiletype	plugged/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
DetermineExtension	plugged/hc/plugin/a.vim	/^function! DetermineExtension(path) $/;"	f
DisablePHPFolds	plugged/PIV/plugin/phpfolding.vim	/^command! DisablePHPFolds call <SID>DisablePHPFolds()$/;"	c
DisablePHPFolds	plugged/PIV/plugin/phpfolding.vim	/^function! s:DisablePHPFolds() " {{{$/;"	f
DisplayBuffers	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>DisplayBuffers(delBufNum)$/;"	f
DisplayError	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! <SID>DisplayError()$/;"	f
DisplayIncludeTree	plugged/omnicppcomplete-041/autoload/omni/cpp/includes.vim	/^function! s:DisplayIncludeTree(szFilePath, indent, ...)$/;"	f
DisplayTagsFile	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! <SID>DisplayTagsFile()$/;"	f
DoesBlockHaveDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveDelim(delim, top, bottom)$/;"	f
DoesBlockHaveMultipartDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveMultipartDelim(top, bottom)$/;"	f
DotPromptUser	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:DotPromptUser(groups) "{{{$/;"	f
DoubleClick	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function s:DoubleClick()$/;"	f
EMCommandLineMap	plugged/vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineMap$/;"	c
EMCommandLineNoreMap	plugged/vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineNoreMap$/;"	c
EMCommandLineUnMap	plugged/vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineUnMap$/;"	c
EasyMotion	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:EasyMotion(regexp, direction, visualmode, is_inclusive, ...) " {{{$/;"	f
EasyMotion#DotRepeat	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#DotRepeat() " {{{$/;"	f
EasyMotion#E	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#E(visualmode, direction) " {{{$/;"	f
EasyMotion#EK	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EK(visualmode, direction) " {{{$/;"	f
EasyMotion#EL	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EL(visualmode, direction) " {{{$/;"	f
EasyMotion#EW	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EW(visualmode, direction) " {{{$/;"	f
EasyMotion#Eol	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Eol(visualmode, direction) " {{{$/;"	f
EasyMotion#JK	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#JK(visualmode, direction) " {{{$/;"	f
EasyMotion#JumpToAnywhere	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#JumpToAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#LineAnywhere	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#LineAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#NextPrevious	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#NextPrevious(visualmode, direction) " {{{$/;"	f
EasyMotion#OverwinF	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#OverwinF(num_strokes) " {{{$/;"	f
EasyMotion#Repeat	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Repeat(visualmode) " {{{$/;"	f
EasyMotion#S	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#S(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#SL	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#SL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#Search	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Search(visualmode, direction, respect_direction) " {{{$/;"	f
EasyMotion#Sol	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Sol(visualmode, direction) " {{{$/;"	f
EasyMotion#T	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#T(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#TL	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#TL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#User	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#User(pattern, visualmode, direction, inclusive, ...) " {{{$/;"	f
EasyMotion#WB	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WB(visualmode, direction) " {{{$/;"	f
EasyMotion#WBK	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBK(visualmode, direction) " {{{$/;"	f
EasyMotion#WBL	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBL(visualmode, direction) " {{{$/;"	f
EasyMotion#WBW	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBW(visualmode, direction) " {{{$/;"	f
EasyMotion#activate	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#activate(is_visual) "{{{$/;"	f
EasyMotion#attach_active_autocmd	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#attach_active_autocmd() "{{{$/;"	f
EasyMotion#cmigemo#getMigemoPattern	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#getMigemoPattern(input) "{{{$/;"	f
EasyMotion#cmigemo#system	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#system(...) "{{{$/;"	f
EasyMotion#command_line#GetInput	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#GetInput(num_strokes, prev, direction) "{{{$/;"	f
EasyMotion#command_line#cmap	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cmap(args)$/;"	f
EasyMotion#command_line#cnoremap	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cnoremap(args)$/;"	f
EasyMotion#command_line#cunmap	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cunmap(lhs)$/;"	f
EasyMotion#go	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#go(...) abort$/;"	f
EasyMotion#helper#VarReset	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#VarReset(var, ...) "{{{$/;"	f
EasyMotion#helper#get_char_by_coord	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#get_char_by_coord(coord) "{{{$/;"	f
EasyMotion#helper#include_multibyte_char	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#include_multibyte_char(str) "{{{$/;"	f
EasyMotion#helper#is_folded	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_folded(line) "{{{$/;"	f
EasyMotion#helper#is_greater_coords	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_greater_coords(coords1, coords2) "{{{$/;"	f
EasyMotion#helper#load_migemo_dict	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#load_migemo_dict() "{{{$/;"	f
EasyMotion#helper#mode	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#mode(flag) "{{{$/;"	f
EasyMotion#helper#should_case_sensitive	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#should_case_sensitive(input, is_search) "{{{$/;"	f
EasyMotion#helper#silent_feedkeys	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#silent_feedkeys(expr, name, ...) "{{{$/;"	f
EasyMotion#helper#strchars	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^    function! EasyMotion#helper#strchars(str)$/;"	f
EasyMotion#helper#vcol	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#vcol(expr) abort$/;"	f
EasyMotion#highlight#InitHL	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#InitHL(group, colors) " {{{$/;"	f
EasyMotion#highlight#add_color_group	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_color_group(new_groups) "{{{$/;"	f
EasyMotion#highlight#add_highlight	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_highlight(re, group) "{{{$/;"	f
EasyMotion#highlight#add_pos_highlight	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_pos_highlight(line_num, col_num, group) "{{{$/;"	f
EasyMotion#highlight#attach_autocmd	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#attach_autocmd() "{{{$/;"	f
EasyMotion#highlight#capture	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#capture(hlname) "{{{$/;"	f
EasyMotion#highlight#delete_highlight	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#delete_highlight(...) "{{{$/;"	f
EasyMotion#highlight#init	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#init() "{{{$/;"	f
EasyMotion#highlight#load	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#load()$/;"	f
EasyMotion#highlight#turn_off	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#turn_off(hl) "{{{$/;"	f
EasyMotion#highlight#turn_on	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#turn_on(hl) "{{{$/;"	f
EasyMotion#init	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#init()$/;"	f
EasyMotion#is_active	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#is_active() "{{{$/;"	f
EasyMotion#migemo#cp932#load_dict	plugged/vim-easymotion/autoload/EasyMotion/migemo/cp932.vim	/^function! EasyMotion#migemo#cp932#load_dict()$/;"	f
EasyMotion#migemo#eucjp#load_dict	plugged/vim-easymotion/autoload/EasyMotion/migemo/eucjp.vim	/^function! EasyMotion#migemo#eucjp#load_dict()$/;"	f
EasyMotion#migemo#utf8#load_dict	plugged/vim-easymotion/autoload/EasyMotion/migemo/utf8.vim	/^function! EasyMotion#migemo#utf8#load_dict()$/;"	f
EasyMotion#overwin#line	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#line() abort$/;"	f
EasyMotion#overwin#move	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#move(pattern) abort$/;"	f
EasyMotion#overwin#w	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#w() abort$/;"	f
EasyMotion#reset	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#reset()$/;"	f
EasyMotion#sticky_table#jp	plugged/vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#jp = {$/;"	v
EasyMotion#sticky_table#us	plugged/vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#us = {$/;"	v
EasyMotionInitHL	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^augroup EasyMotionInitHL$/;"	a
EditClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath() " {{{2$/;"	f
EditConfig	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditConfig() " {{{2$/;"	f
EditDir	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:EditDir(...)$/;"	f
EditDir	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>EditDir(event)$/;"	f
EditEntry	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:EditEntry(movefirst,editcmd)$/;"	f
EditNextVisibleExplorer	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>EditNextVisibleExplorer(grpn, memn, dir, editcmd)$/;"	f
EnableByDefault	plugged/python-syntax/syntax/python.vim	/^function! s:EnableByDefault(name)$/;"	f
EnableFastPHPFolds	plugged/PIV/plugin/phpfolding.vim	/^command! EnableFastPHPFolds call <SID>EnableFastPHPFolds()$/;"	c
EnableFastPHPFolds	plugged/PIV/plugin/phpfolding.vim	/^function! s:EnableFastPHPFolds() " {{{$/;"	f
EnableLongestEnhancement	plugged/supertab/plugin/supertab.vim	/^function! s:EnableLongestEnhancement() " {{{$/;"	f
EnableNoCompleteAfterReset	plugged/supertab/plugin/supertab.vim	/^function! s:EnableNoCompleteAfterReset() " {{{$/;"	f
EnablePHPFolds	plugged/PIV/plugin/phpfolding.vim	/^command! -nargs=* EnablePHPFolds call <SID>EnablePHPFolds(<f-args>)$/;"	c
EnablePHPFolds	plugged/PIV/plugin/phpfolding.vim	/^function! s:EnablePHPFolds(...) " {{{$/;"	f
Enabled	plugged/python-syntax/syntax/python.vim	/^function! s:Enabled(name)$/;"	f
EnumerateFilesByExtension	plugged/hc/plugin/a.vim	/^function! EnumerateFilesByExtension(path, baseName, extension)$/;"	f
EnumerateFilesByExtensionInPath	plugged/hc/plugin/a.vim	/^function! EnumerateFilesByExtensionInPath(baseName, extension, pathList, relPathBase)$/;"	f
EqualFilePaths	plugged/hc/plugin/a.vim	/^function! <SID>EqualFilePaths(path1, path2)$/;"	f
Errors	plugged/syntastic/plugin/syntastic.vim	/^command! -bar Errors              call SyntasticErrors()$/;"	c
Esc	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Esc(str)$/;"	f
EscapeCtagsCmd	plugged/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
EscapeFilename	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:EscapeFilename(name)$/;"	f
Event.New	plugged/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
ExecuteCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
ExecuteCtagsOnFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
ExpandAlternatePath	plugged/hc/plugin/a.vim	/^function! <SID>ExpandAlternatePath(pathSpec, sfPath) $/;"	f
ExpandMap	plugged/supertab/plugin/supertab.vim	/^function! s:ExpandMap(map) " {{{$/;"	f
Explore	plugged/winmanager_23/plugin/winfileexplorer.vim	/^		command -n=? -complete=dir Explore :call s:StartExplorer(0, '<a>')$/;"	c
ExploreInCurrentWindow	plugged/winmanager_23/plugin/winfileexplorer.vim	/^		command -n=? -complete=dir ExploreInCurrentWindow :call <SID>EditDir()$/;"	c
ExtendTagItemToPopupItem	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:ExtendTagItemToPopupItem(tagItem, szTypeName)$/;"	f
ExtraMappings	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:ExtraMappings() "{{{$/;"	f
ExtractFileDate	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:ExtractFileDate(line)$/;"	f
ExtractFileName	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:ExtractFileName(line)$/;"	f
ExtractFileSize	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:ExtractFileSize(line)$/;"	f
ExtractFullFileName	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:ExtractFullFileName(line)$/;"	f
ExtractScopeFromTypeInfo	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! s:ExtractScopeFromTypeInfo(szTypeInfo)$/;"	f
ExtractTypeInfoFromDecl	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:ExtractTypeInfoFromDecl(tokens)$/;"	f
F	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map F <Plug>(easymotion-F)$/;"	m
F/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map F\/ <Plug>(easymotion-Fn)$/;"	m
FH	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal FH$/;"	m
FILENAME	plugged/delimitMate/Makefile	/^FILENAME =  $(NAME)-$(VERSION)$/;"	m
Faa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Faa$/;"	m
Fb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Fb$/;"	m
Fba	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Fba$/;"	m
Fha	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Fha$/;"	m
FileDateCmp	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:FileDateCmp(line1, line2, direction)$/;"	f
FileExplorer_IsValid	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! FileExplorer_IsValid()$/;"	f
FileExplorer_Start	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! FileExplorer_Start()$/;"	f
FileExplorer_WrapUp	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! FileExplorer_WrapUp()$/;"	f
FileInfo.New	plugged/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.New(fname, ftype, typeinfo) abort dict$/;"	f
FileInfo.clearOldFolds	plugged/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.clearOldFolds() abort dict$/;"	f
FileInfo.closeKindFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.closeKindFold(kind) abort dict$/;"	f
FileInfo.openKindFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.openKindFold(kind) abort dict$/;"	f
FileInfo.reset	plugged/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.reset() abort dict$/;"	f
FileInfo.sortTags	plugged/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.sortTags() abort dict$/;"	f
FileItem	plugged/vim-ctrlspace/go/file_engine.go	/^type FileItem struct {$/;"	t
FileModDate	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:FileModDate(name)$/;"	f
FileNameCmp	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:FileNameCmp(line1, line2, direction)$/;"	f
FileSizeCmp	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:FileSizeCmp(line1, line2, direction)$/;"	f
FilterClassMembers	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:FilterClassMembers(tagPopupList, szAccessFilter)$/;"	f
FilterClassScopeMembers	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:FilterClassScopeMembers(tagPopupList, szAccessFilter)$/;"	f
FilterNamespaceScopeMembers	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:FilterNamespaceScopeMembers(tagPopupList)$/;"	f
FilterOverloadedFunctions	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:FilterOverloadedFunctions(tagPopupList)$/;"	f
FilterStaticClassMembers	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:FilterStaticClassMembers(tagPopupList, szAccessFilter)$/;"	f
FindBoundingLinesOfSexyCom	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindBoundingLinesOfSexyCom(lineNum)$/;"	f
FindCreateWindow	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>FindCreateWindow(bufName, forceEdge, isExplorer, doDebug)$/;"	f
FindDelimiterIndex	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindDelimiterIndex(delimiter, line)$/;"	f
FindExplorerInGroup	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>FindExplorerInGroup(groupn, memn)$/;"	f
FindFileInSearchPath	plugged/hc/plugin/a.vim	/^function! <SID>FindFileInSearchPath(fileName, pathList, relPathBase)$/;"	f
FindFileInSearchPathEx	plugged/hc/plugin/a.vim	/^function! <SID>FindFileInSearchPathEx(fileName, pathList, relPathBase, count)$/;"	f
FindOpenBracket	plugged/PIV/indent/php.vim	/^function! FindOpenBracket(lnum) " {{{$/;"	f
FindOptionalPHPDocComment	plugged/PIV/plugin/phpfolding.vim	/^function! s:FindOptionalPHPDocComment() " {{{$/;"	f
FindOrCreateBuffer	plugged/hc/plugin/a.vim	/^function! <SID>FindOrCreateBuffer(fileName, doSplit, findSimilar)$/;"	f
FindPatternEnd	plugged/PIV/plugin/phpfolding.vim	/^function! s:FindPatternEnd(endPattern) " {{{$/;"	f
FindPatternStart	plugged/PIV/plugin/phpfolding.vim	/^function! s:FindPatternStart(startPattern) " {{{$/;"	f
FindPureBlockEnd	plugged/PIV/plugin/phpfolding.vim	/^function! s:FindPureBlockEnd(startPair, endPair, searchStartPairFirst, ...) " {{{$/;"	f
FindPureBlockStart	plugged/PIV/plugin/phpfolding.vim	/^function! s:FindPureBlockStart(startPattern) " {{{$/;"	f
FindStartPositionOfCompletion	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:FindStartPositionOfCompletion()$/;"	f
FindTheIfOfAnElse	plugged/PIV/indent/php.vim	/^function! FindTheIfOfAnElse (lnum, StopAfterFirstPrevElse) " {{{$/;"	f
FindTheSwitchIndent	plugged/PIV/indent/php.vim	/^function! FindTheSwitchIndent (lnum) " {{{$/;"	f
FindWindow	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>FindWindow(bufName, doDebug)$/;"	f
FirstExplorerWindow	plugged/winmanager_23/plugin/winmanager.vim	/^	command -nargs=0 FirstExplorerWindow :silent call <SID>GotoExplorerWindow('1')$/;"	c
FixWhitespace	plugged/vim-trailing-whitespace/plugin/trailing-whitespace.vim	/^command! -range=% FixWhitespace call <SID>FixWhitespace(<line1>,<line2>)$/;"	c
FixWhitespace	plugged/vim-trailing-whitespace/plugin/trailing-whitespace.vim	/^function! s:FixWhitespace(line1,line2)$/;"	f
FlagSet.New	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
FoldTags	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! <SID>FoldTags()$/;"	f
ForceUpdate	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f
ForwardToZshChecker	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker() " {{{2$/;"	f
Fpa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Fpa$/;"	m
Fpb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Fpb$/;"	m
Fpc	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Fpc$/;"	m
GetAccessFilter	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:GetAccessFilter(szFilter, szAccessFilter)$/;"	f
GetAllUsingNamespaceMapFromCurrentBuffer	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromCurrentBuffer(...)$/;"	f
GetAllUsingNamespaceMapFromFile	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromFile(szFilePath, ...)$/;"	f
GetChar	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GetChar(...) abort "{{{$/;"	f
GetClassScopeAtCursor	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:GetClassScopeAtCursor()$/;"	f
GetDialect	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^function! s:GetDialect() " {{{2$/;"	f
GetFileName	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:GetFileName()$/;"	f
GetFileNameEsc	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:GetFileNameEsc()$/;"	f
GetFileWinnr	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
GetFullFileName	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:GetFullFileName()$/;"	f
GetFullFileNameEsc	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:GetFullFileNameEsc()$/;"	f
GetIncludeListFromCurrentBuffer	plugged/omnicppcomplete-041/autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromCurrentBuffer()$/;"	f
GetIncludeListFromFile	plugged/omnicppcomplete-041/autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromFile(szFilePath, bUpdate) $/;"	f
GetLastRealCodeLNum	plugged/PIV/indent/php.vim	/^function! GetLastRealCodeLNum(startline) " {{{$/;"	f
GetMakeprg	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetMakeprg() " {{{2$/;"	f
GetMavenClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath() " {{{2$/;"	f
GetMavenProperties	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenProperties() " {{{2$/;"	f
GetNamespaceAliasListFromLine	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasListFromLine(szLine)$/;"	f
GetNamespaceAliasMap	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasMap()$/;"	f
GetNamespaceListFromLine	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceListFromLine(szLine)$/;"	f
GetNearbyTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(all, forcecurrent, ...) abort$/;"	f
GetNthItemFromList	plugged/hc/plugin/a.vim	/^function! <SID>GetNthItemFromList(list, n) $/;"	f
GetOcamlBuildMakeprg	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlBuildMakeprg() " {{{2$/;"	f
GetOcamlcMakeprg	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlcMakeprg() " {{{2$/;"	f
GetOtherMakeprg	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOtherMakeprg() " {{{2$/;"	f
GetPhpIndent	plugged/PIV/indent/php.vim	/^function! GetPhpIndent()$/;"	f
GetProfile	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^function! s:GetProfile() " {{{2$/;"	f
GetPythonPEPIndent	plugged/vim-python-pep8-indent/indent/python.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetSection	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:GetSection()$/;"	f
GetSelectedBuffer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>GetSelectedBuffer()$/;"	f
GetSexyComLeft	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComLeft(space, esc)$/;"	f
GetSexyComMarker	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComMarker(space, esc)$/;"	f
GetSexyComRight	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComRight(space, esc)$/;"	f
GetShell	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell() " {{{2$/;"	f
GetStopPositionForLocalSearch	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:GetStopPositionForLocalSearch()$/;"	f
GetSupportedFiletypes	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
GetSymbol	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:GetSymbol(tokens)$/;"	f
GetTagInfo	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
GetTagOfSameScope	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! s:GetTagOfSameScope(listTags, szScopeToMatch)$/;"	f
GetTypeInfoOfReturnedType	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfReturnedType(contextStack, szFunctionName)$/;"	f
GetTypeInfoOfVariable	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfVariable(contextStack, szVariable, bSearchDecl)$/;"	f
GetUsingNamespaceListFromMap	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:GetUsingNamespaceListFromMap(namespaceMap, ...)$/;"	f
GetValaModules	plugged/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaModules() " {{{2$/;"	f
GetValaVapiDirs	plugged/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaVapiDirs() " {{{2$/;"	f
GetVisualStartPosition	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GetVisualStartPosition(c_pos, v_start, v_end, search_direction) "{{{$/;"	f
GlobPath	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:GlobPath(dirs, depth)$/;"	f
GotoExplorerWindow	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>GotoExplorerWindow(which)$/;"	f
GotoFileWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
GotoNextExplorerInGroup	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>GotoNextExplorerInGroup(name, ...)$/;"	f
GotoNextFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoNextFold() abort$/;"	f
GotoNextToplevelTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
GotoPrevFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoPrevFold() abort$/;"	f
GotoWindow	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>GotoWindow(reqdWinNum)$/;"	f
GroupTags	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! <SID>GroupTags() range$/;"	f
GroupingAlgorithmOriginal	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmOriginal(targets, keys)$/;"	f
GroupingAlgorithmSCTree	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmSCTree(targets, keys) "{{{$/;"	f
HandleFold	plugged/PIV/plugin/phpfolding.vim	/^function! s:HandleFold() " {{{$/;"	f
HasATagFileOrTagEnvChanged	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:HasATagFileOrTagEnvChanged()$/;"	f
HasCStyleComments	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasCStyleComments()$/;"	f
HasEligibleBuffers	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>HasEligibleBuffers(delBufNum)$/;"	f
HasLeadingTabs	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasLeadingTabs(...)$/;"	f
HasMultipartDelims	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasMultipartDelims()$/;"	f
HasTagEnvChanged	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:HasTagEnvChanged()$/;"	f
HiLink	plugged/PIV/syntax/jinja.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/PIV/syntax/jinja.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/Vim-Jinja2-Syntax/syntax/jinja.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/Vim-Jinja2-Syntax/syntax/jinja.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/python-syntax/syntax/python.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/python-syntax/syntax/python.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HighlightTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
Hinter._pos2hint_to_line2col2hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._pos2hint_to_line2col2hint(pos2hint) abort$/;"	f
Hinter._replace_line_for_hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_line_for_hint(lnum, col_num, line, hint) abort$/;"	f
Hinter._replace_tab_target	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_tab_target(lnum, col_num, line) abort$/;"	f
Hinter._replace_text_to_space	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_text_to_space(line, lnum, col_num, len) abort$/;"	f
Hinter._save_lines	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._save_lines() abort$/;"	f
Hinter._show_hint_for_line	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._show_hint_for_line(winnr, lnum, col2hint) abort$/;"	f
Hinter._show_hint_for_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._show_hint_for_win(winnr) abort$/;"	f
Hinter.after	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.after() abort$/;"	f
Hinter.before	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.before() abort$/;"	f
Hinter.disable_conceal_in_other_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.disable_conceal_in_other_win() abort$/;"	f
Hinter.init	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.init(hint_dict) abort$/;"	f
Hinter.modify_env_for_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.modify_env_for_win(winnr) abort$/;"	f
Hinter.new	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.new(hint_dict, config) abort$/;"	f
Hinter.remove_hints	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.remove_hints(winnr) abort$/;"	f
Hinter.restore_conceal_in_other_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_conceal_in_other_win() abort$/;"	f
Hinter.restore_env	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_env() abort$/;"	f
Hinter.restore_lines_for_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_lines_for_win(winnr) abort$/;"	f
Hinter.restore_options	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_options() abort$/;"	f
Hinter.save_options	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.save_options() abort$/;"	f
Hinter.show_hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.show_hint() abort$/;"	f
Hinter.show_hint_pos	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.show_hint_pos(lnum, cnum, char, winnr) abort$/;"	f
IH	plugged/hc/plugin/a.vim	/^comm! -nargs=? -bang IH call AlternateOpenFileUnderCursor("n<bang>", <f-args>)$/;"	c
IHN	plugged/hc/plugin/a.vim	/^comm! -nargs=? -bang IHN call AlternateOpenNextFile("<bang>")$/;"	c
IHS	plugged/hc/plugin/a.vim	/^comm! -nargs=? -bang IHS call AlternateOpenFileUnderCursor("h<bang>", <f-args>)$/;"	c
IHT	plugged/hc/plugin/a.vim	/^comm! -nargs=? -bang IHT call AlternateOpenFileUnderCursor("t<bang>", <f-args>)$/;"	c
IHV	plugged/hc/plugin/a.vim	/^comm! -nargs=? -bang IHV call AlternateOpenFileUnderCursor("v<bang>", <f-args>)$/;"	c
IfFocusOnStartup	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IfFocusOnStartup()$/;"	f
IgnoreError	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
IgnoreError	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
Init	plugged/supertab/plugin/supertab.vim	/^function! s:Init() " {{{$/;"	f
Init	plugged/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
Init	plugged/vim-ctrlspace/go/file_engine.go	/^func (items *ItemCollection) Init() error {$/;"	f
Init	plugged/vim-ctrlspace/go/file_engine.go	/^func Init(input *os.File) error {$/;"	f
InitBuffer	plugged/supertab/plugin/supertab.vim	/^function! s:InitBuffer() " {{{$/;"	f
InitComplete	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:InitComplete()$/;"	f
InitTypes	plugged/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
InitVariable	plugged/PIV/ftplugin/php.vim	/^function s:InitVariable(var, value)$/;"	f
InitVariable	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InitVariable(var, value)$/;"	f
InitWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
InitializeMRUList	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>InitializeMRUList()$/;"	f
InsertTestText1	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! InsertTestText1()$/;"	f
InvertComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InvertComment(firstLine, lastLine)$/;"	f
IsCached	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:IsCached(cache, szKey1, szKey2)$/;"	f
IsCommented	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommented(left, right, line)$/;"	f
IsCommentedFromStartOfLine	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedFromStartOfLine(left, line)$/;"	f
IsCommentedNormOrSexy	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedNormOrSexy(lineNum)$/;"	f
IsCommentedOuttermost	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedOuttermost(left, right, leftAlt, rightAlt, line)$/;"	f
IsCurrentWindowNERDTree	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsCurrentWindowNERDTree()$/;"	f
IsDelimValid	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsDelimValid(delimiter, delIndx, line)$/;"	f
IsEscaped	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsEscaped(str, indx, escChar)$/;"	f
IsExplorerBuffer	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>IsExplorerBuffer(num)$/;"	f
IsExplorerGroupVisible	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>IsExplorerGroupVisible(i, ...)$/;"	f
IsExplorerVisible	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>IsExplorerVisible(i)$/;"	f
IsInSexyComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsInSexyComment(line)$/;"	f
IsNERDTreeOpenInCurrentTab	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsNERDTreeOpenInCurrentTab()$/;"	f
IsNERDTreePresentInCurrentTab	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsNERDTreePresentInCurrentTab()$/;"	f
IsNoCompleteAfterReset	plugged/supertab/plugin/supertab.vim	/^function! s:IsNoCompleteAfterReset() " {{{$/;"	f
IsNumEven	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsNumEven(num)$/;"	f
IsOnlyVertical	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>IsOnlyVertical()$/;"	f
IsPreviewOpen	plugged/supertab/plugin/supertab.vim	/^function! s:IsPreviewOpen() " {{{$/;"	f
IsSexyComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsSexyComment(topline, bottomline)$/;"	f
IsShellValid	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid() " {{{2$/;"	f
IsTypeInfoResolved	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! s:IsTypeInfoResolved(szTypeInfo)$/;"	f
IsUnnamedType	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:IsUnnamedType(tagItem)$/;"	f
IsValidFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
IsWinManagerVisible	plugged/winmanager_23/plugin/winmanager.vim	/^function! IsWinManagerVisible()$/;"	f
IslinePHP	plugged/PIV/indent/php.vim	/^function! IslinePHP (lnum, tofind) " {{{$/;"	f
ItemCollection	plugged/vim-ctrlspace/go/file_engine.go	/^type ItemCollection []*FileItem$/;"	t
JumpToTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
KeyLoop	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:KeyLoop()$/;"	f
KeyMap.Add	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
KindheaderTag.closeFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.closeFold() abort dict$/;"	f
KindheaderTag.getPrototype	plugged/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.getPrototype(short) abort dict$/;"	f
KindheaderTag.isFoldable	plugged/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFoldable() abort dict$/;"	f
KindheaderTag.isFolded	plugged/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFolded() abort dict$/;"	f
KindheaderTag.isKindheader	plugged/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isKindheader() abort dict$/;"	f
KindheaderTag.openFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.openFold() abort dict$/;"	f
KindheaderTag.toggleFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.toggleFold() abort dict$/;"	f
LIB	plugged/delimitMate/Makefile	/^LIB      =  $(wildcard autoload\/*.vim)$/;"	m
LastIndexOfDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LastIndexOfDelim(delim, str)$/;"	f
Left	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Left(...)$/;"	f
LeftMostIndx	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
Len	plugged/vim-ctrlspace/go/file_engine.go	/^func (s *SortItems) Len() int {$/;"	f
Less	plugged/vim-ctrlspace/go/file_engine.go	/^func (s *SortByNoiseAndText) Less(i, j int) bool {$/;"	f
Less	plugged/vim-ctrlspace/go/file_engine.go	/^func (s *SortByText) Less(i, j int) bool {$/;"	f
LoadConfigFile	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadConfigFile() " {{{2$/;"	f
LoadPlugin	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:LoadPlugin()$/;"	f
LoadUserTypeDefs	plugged/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
LoadView	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! s:LoadView(foldInfo)$/;"	f
LocalSearchDecl	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:LocalSearchDecl(name)$/;"	f
MBEClick	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! s:MBEClick()$/;"	f
MBEDeleteBuffer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>MBEDeleteBuffer()$/;"	f
MBEDoubleClick	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! s:MBEDoubleClick()$/;"	f
MBESelectBuffer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>MBESelectBuffer()$/;"	f
MBEbn	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  command! MBEbn call <SID>CycleBuffer(1)$/;"	c
MBEbp	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  command! MBEbp call <SID>CycleBuffer(0)$/;"	c
MRUGet	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>MRUGet(slot)$/;"	f
MRUPop	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>MRUPop()$/;"	f
MRUPush	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>MRUPush()$/;"	f
ManualCompletionEnter	plugged/supertab/plugin/supertab.vim	/^function! s:ManualCompletionEnter() " {{{$/;"	f
Map	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:Map() "{{{$/;"	f
MapKeys	plugged/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
MapNorms	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapNorms()$/;"	f
MapSpecs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapSpecs()$/;"	f
MarkDirs	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:MarkDirs()$/;"	f
MarkToOpen	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f
MatchIt	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f
MatchedItems	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f
MavenOutputDirectory	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:MavenOutputDirectory() " {{{2$/;"	f
Max	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>Max(argOne, argTwo)$/;"	f
MenuController.New	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Message	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:Message(message) " {{{$/;"	f
MiniBufExplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  command! MiniBufExplorer  call <SID>StartExplorer(1, -1)$/;"	c
MiniBufExplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^augroup MiniBufExplorer$/;"	a
MkViewNoNestedFolds	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! s:MkViewNoNestedFolds()$/;"	f
Modules	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function s:Modules()$/;"	f
Multipart	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Multipart()$/;"	f
NAME	plugged/delimitMate/Makefile	/^NAME     =  delimitMate$/;"	m
NERDComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function! NERDComment(mode, type) range$/;"	f
NERDCommenter	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^augroup NERDCommenter$/;"	a
NERDTree	plugged/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CloseIfQuitOnOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
NERDTree.CursorToBookmarkTable	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f
NERDTree.ExistsForBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.ForCurrentTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
NERDTree.GetWinNum	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
NERDTree.PathFilters	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.changeRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
NERDTree.getRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
NERDTree.isTabTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
NERDTree.isWinTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
NERDTree.previousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
NERDTree.render	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTreeAddKeyMap	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeCloseAllTabs	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeCloseAllTabs()$/;"	f
NERDTreeCopyNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFindFile	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeFindFile()$/;"	f
NERDTreeFocus	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFocus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeFocus()$/;"	f
NERDTreeFocusToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeFocusToggle  call <SID>NERDTreeFocusToggle()$/;"	c
NERDTreeFocusToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeFocusToggle()$/;"	f
NERDTreeHijackNetrw	plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMirrorOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeMirrorOpen   call <SID>NERDTreeMirrorOrCreate()$/;"	c
NERDTreeMirrorOrCreate	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorOrCreate()$/;"	f
NERDTreeMirrorToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeMirrorToggle call <SID>NERDTreeMirrorToggle()$/;"	c
NERDTreeMirrorToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorToggle()$/;"	f
NERDTreeMoveNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeOpenAllTabs	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeOpenAllTabs()$/;"	f
NERDTreeQuickLook	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRestoreFocus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeRestoreFocus()$/;"	f
NERDTreeRevealInFinder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeSteppedClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeSteppedClose call <SID>NERDTreeSteppedClose()$/;"	c
NERDTreeSteppedClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeSteppedClose()$/;"	f
NERDTreeSteppedOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeSteppedOpen  call <SID>NERDTreeSteppedOpen()$/;"	c
NERDTreeSteppedOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeSteppedOpen()$/;"	f
NERDTreeTabsClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsClose    call <SID>NERDTreeCloseAllTabs()$/;"	c
NERDTreeTabsFind	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsFind     call <SID>NERDTreeFindFile()$/;"	c
NERDTreeTabsOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsOpen     call <SID>NERDTreeOpenAllTabs()$/;"	c
NERDTreeTabsToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsToggle   call <SID>NERDTreeToggleAllTabs()$/;"	c
NERDTreeToggleAllTabs	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeToggleAllTabs()$/;"	f
NERDTreeUnfocus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeUnfocus()$/;"	f
NerdEcho	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NerdEcho(msg, typeOfMsg)$/;"	f
NewTags	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:NewTags(name) " {{{2$/;"	f
NextAlternate	plugged/hc/plugin/a.vim	/^function! NextAlternate(bang)$/;"	f
NextNormalWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:NextNormalWindow() abort$/;"	f
NextNormalWindow	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NextNormalWindow()$/;"	f
NoAutoClose	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:NoAutoClose() "{{{$/;"	f
NormalTag.getPrototype	plugged/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.getPrototype(short) abort dict$/;"	f
NormalTag.isNormalTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.isNormalTag() abort dict$/;"	f
NormalTag.str	plugged/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.str(longsig, full) abort dict$/;"	f
NormalTag.strfmt	plugged/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.strfmt() abort dict$/;"	f
Notifier.AddListener	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
NumLinesInBuf	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumLinesInBuf()$/;"	f
NumberOfLeadingTabs	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumberOfLeadingTabs(s)$/;"	f
OnlyExplorerWindowsOpen	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>OnlyExplorerWindowsOpen()$/;"	f
Open	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Open()$/;"	f
OpenEntry	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:OpenEntry()$/;"	f
OpenEntryPrevWindow	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:OpenEntryPrevWindow()$/;"	f
OpenFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
OpenMulti	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f
OpenNoMarks	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f
OpenParents	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
OpenTag	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! <SID>OpenTag(split)$/;"	f
OpenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
Opener.New	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
PERL	plugged/delimitMate/Makefile	/^PERL     =  perl$/;"	m
PHPCustomFolds	plugged/PIV/plugin/phpfolding.vim	/^function! s:PHPCustomFolds() " {{{$/;"	f
PHPFoldMarkers	plugged/PIV/plugin/phpfolding.vim	/^function! s:PHPFoldMarkers(startPattern, endPattern, ...) " {{{$/;"	f
PHPFoldProperties	plugged/PIV/plugin/phpfolding.vim	/^function! s:PHPFoldProperties(startPattern, endPattern, ...) " {{{$/;"	f
PHPFoldPureBlock	plugged/PIV/plugin/phpfolding.vim	/^function! s:PHPFoldPureBlock(startPattern, ...) " {{{$/;"	f
PHPFoldText	plugged/PIV/plugin/phpfolding.vim	/^function! PHPFoldText() " {{{$/;"	f
PHP_autoformatcomment	plugged/PIV/ftplugin/php.vim	/^    let PHP_autoformatcomment = 1$/;"	v
PLUGIN	plugged/delimitMate/Makefile	/^PLUGIN   =  $(wildcard plugin\/*.vim)$/;"	m
ParseTagline	plugged/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
Path	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:Path(p)$/;"	f
Path	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>Path(p)$/;"	f
Path.AbsolutePathFor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
Path.isAncestor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(path)$/;"	f
Path.isUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
Path.refreshFlags	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
Path.rename	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PhpAlign	plugged/PIV/ftplugin/php.vim	/^func! PhpAlign() range$/;"	f
PhpDoc	plugged/PIV/ftplugin/php/doc.vim	/^func! PhpDoc()$/;"	f
PhpDocClass	plugged/PIV/ftplugin/php/doc.vim	/^func! PhpDocClass()$/;"	f
PhpDocDefault	plugged/PIV/ftplugin/php/doc.vim	/^func! PhpDocDefault()$/;"	f
PhpDocFunc	plugged/PIV/ftplugin/php/doc.vim	/^func! PhpDocFunc()$/;"	f
PhpDocFuncEnd	plugged/PIV/ftplugin/php/doc.vim	/^func! PhpDocFuncEnd()$/;"	f
PhpDocFuncEndAuto	plugged/PIV/ftplugin/php/doc.vim	/^func! PhpDocFuncEndAuto()$/;"	f
PhpDocRange	plugged/PIV/ftplugin/php/doc.vim	/^func! PhpDocRange() range$/;"	f
PhpDocScope	plugged/PIV/ftplugin/php/doc.vim	/^func! PhpDocScope(modifiers, identifier)$/;"	f
PhpDocSingle	plugged/PIV/ftplugin/php/doc.vim	/^func! PhpDocSingle()$/;"	f
PhpDocType	plugged/PIV/ftplugin/php/doc.vim	/^func! PhpDocType(typeString)$/;"	f
PhpDocVar	plugged/PIV/ftplugin/php/doc.vim	/^func! PhpDocVar()$/;"	f
PlaceDelimitersAndInsBetween	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:PlaceDelimitersAndInsBetween()$/;"	f
Plug	autoload/plug.vim	/^function! s:Plug(repo, ...)$/;"	f
PrepareContent	plugged/vim-ctrlspace/go/file_engine.go	/^func PrepareContent() ([]string, []string, string, []string) {$/;"	f
PrintError	plugged/winmanager_23/plugin/winmanager.vim	/^function! PrintError(eline)$/;"	f
PrintFavDirs	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:PrintFavDirs()$/;"	f
PrintHelp	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
PrintKinds	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
PrintTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, is_first, fileinfo, typeinfo) abort$/;"	f
ProcessFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
ProcessPseudoChildren	plugged/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoChildren(tags, tag, depth, typeinfo, fileinfo) abort$/;"	f
ProcessPseudoTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoTag(curtags, tag, parent, typeinfo, fileinfo) abort$/;"	f
Prompt	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:Prompt(message) " {{{$/;"	f
PromptUser	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:PromptUser(groups) "{{{$/;"	f
PrtAdd	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f
PrtBS	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtBS()$/;"	f
PrtClear	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClear()$/;"	f
PrtClearCache	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f
PrtCurEnd	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f
PrtCurLeft	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f
PrtCurRight	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f
PrtCurStart	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f
PrtDelete	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDelete()$/;"	f
PrtDeleteEnt	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f
PrtDeleteMRU	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f
PrtDeleteWord	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f
PrtExit	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExit()$/;"	f
PrtExpandDir	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f
PrtFocusMap	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f
PrtHistory	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f
PrtInsert	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f
PrtSelectJump	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f
PrtSelectMove	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f
PrtSwitcher	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f
PseudoTag.isPseudoTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.isPseudoTag() abort dict$/;"	f
PseudoTag.strfmt	plugged/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.strfmt() abort dict$/;"	f
Python2Syntax	plugged/python-syntax/syntax/python.vim	/^command! -buffer Python2Syntax let b:python_version_2 = 1 | let &syntax=&syntax$/;"	c
Python2Syntax	plugged/python-syntax/syntax/python.vim	/^function! s:Python2Syntax()$/;"	f
Python3Syntax	plugged/python-syntax/syntax/python.vim	/^command! -buffer Python3Syntax let b:python_version_2 = 0 | let &syntax=&syntax$/;"	c
QuitIfOnlyWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:QuitIfOnlyWindow() abort$/;"	f
QuitPreHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:QuitPreHook(fname) abort " {{{2$/;"	f
RainbowParenthesesActivate	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesActivate     cal rainbow_parentheses#activate()$/;"	c
RainbowParenthesesLoadBraces	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesLoadBraces   cal rainbow_parentheses#load(2)$/;"	c
RainbowParenthesesLoadChevrons	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesLoadChevrons cal rainbow_parentheses#load(3)$/;"	c
RainbowParenthesesLoadRound	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesLoadRound    cal rainbow_parentheses#load(0)$/;"	c
RainbowParenthesesLoadSquare	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesLoadSquare   cal rainbow_parentheses#load(1)$/;"	c
RainbowParenthesesToggle	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesToggle       cal rainbow_parentheses#toggle()$/;"	c
RainbowParenthesesToggleAll	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesToggleAll    cal rainbow_parentheses#toggleall()$/;"	c
RefreshWinManager	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>RefreshWinManager(...)$/;"	f
RegisterExplorerGroup	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>RegisterExplorerGroup()$/;"	f
ReleaseKeyPresses	plugged/supertab/plugin/supertab.vim	/^function! s:ReleaseKeyPresses() " {{{$/;"	f
RemoveCComments	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! s:RemoveCComments(szLine)$/;"	f
RemoveCarriageReturn	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveCarriageReturn(line) " {{{2$/;"	f
RemoveDelimiters	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RemoveDelimiters(left, right, line)$/;"	f
RemoveSeparators	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:RemoveSeparators()$/;"	f
RenameFile	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:RenameFile()$/;"	f
Render	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f
RenderContent	plugged/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
RenderKeepView	plugged/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
RepairAltRegister	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>RepairAltRegister()$/;"	f
ReplaceDelims	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str)$/;"	f
ReplaceLeftMostDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceLeftMostDelim(toReplace, replacor, str)$/;"	f
ReplaceRightMostDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceRightMostDelim(toReplace, replacor, str)$/;"	f
Reset	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Reset(args)$/;"	f
ResetPhpOptions	plugged/PIV/indent/php.vim	/^function! ResetPhpOptions()$/;"	f
ResizeAllExplorers	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>ResizeAllExplorers()$/;"	f
ResizeWindow	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>ResizeWindow()$/;"	f
ResolveAliasInNamespaceList	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasInNamespaceList(mapNamespaceAlias, listNamespaces)$/;"	f
ResolveAliasKey	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKey(mapNamespaceAlias, szAlias)$/;"	f
ResolveAliasKeys	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKeys(mapNamespaceAlias)$/;"	f
ResolveCCast	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:ResolveCCast(tokens)$/;"	f
ResolveCast	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:ResolveCast(tokens, startChar, endChar)$/;"	f
ResolveCppCast	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:ResolveCppCast(tokens)$/;"	f
ResolveNamespace	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveNamespace(namespace, mapCurrentContexts)$/;"	f
ResolveSymbol	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:ResolveSymbol(contextStack, szSymbol, szTagFilter)$/;"	f
RestoreFileDisplay	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:RestoreFileDisplay()$/;"	f
RestoreNERDTreeViewIfPossible	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:RestoreNERDTreeViewIfPossible()$/;"	f
RestoreScreenState	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RestoreScreenState()$/;"	f
RestoreSession	plugged/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
RestoreValue	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:RestoreValue() "{{{$/;"	f
Right	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Right(...)$/;"	f
RightMostIndx	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
SED	plugged/delimitMate/Makefile	/^SED      =  $(shell command -v gsed || command -v sed)$/;"	m
SHELL	plugged/supertab/Makefile	/^SHELL=\/bin\/bash$/;"	m
SID	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function s:SID()$/;"	f
SOURCES	plugged/delimitMate/Makefile	/^SOURCES  =  $(PLUGIN)$/;"	m
SToggleGDB	plugged/vimgdb_runtime/macros/gdb_mappings.vim	/^function! SToggleGDB()$/;"	f
SVarValueWinManager	plugged/winmanager_23/plugin/winmanager.vim	/^	command -nargs=* SVarValueWinManager :call <SID>ShowVariableValue(<args>)$/;"	c
SaveClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath() " {{{2$/;"	f
SaveConfig	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveConfig() " {{{2$/;"	f
SaveGlobalFocus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:SaveGlobalFocus()$/;"	f
SaveNERDTreeViewIfPossible	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:SaveNERDTreeViewIfPossible()$/;"	f
SaveScreenState	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SaveScreenState()$/;"	f
SaveValue	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:SaveValue() "{{{$/;"	f
SearchDecl	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:SearchDecl(szVariable)$/;"	f
SearchDict	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict() "{{{$/;"	f
SearchDict2	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict2(name) "{{{$/;"	f
SearchGlobalMembers	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:SearchGlobalMembers(szBase)$/;"	f
SearchMembers	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:SearchMembers(resolvedTagItem, szBase)$/;"	f
SearchTypeInfoOfDecl	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:SearchTypeInfoOfDecl(szVariable)$/;"	f
SelectCompletion	plugged/supertab/plugin/supertab.vim	/^    function! s:SelectCompletion(cr)$/;"	f
SelectHTML	plugged/Vim-Jinja2-Syntax/ftdetect/jinja.vim	/^fun! s:SelectHTML()$/;"	f
SetCompilerType	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! s:SetCompilerType(exe) " {{{2$/;"	f
SetCompletionType	plugged/supertab/plugin/supertab.vim	/^function! s:SetCompletionType() " {{{$/;"	f
SetDefTxt	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f
SetDefaultCompletionType	plugged/supertab/plugin/supertab.vim	/^function! s:SetDefaultCompletionType() " {{{$/;"	f
SetFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
SetFoldLevelRecursive	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
SetLines	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:SetLines(lines, key) " {{{$/;"	f
SetOption	plugged/vim-colors-solarized/colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
SetPhpFolds	plugged/PIV/plugin/phpfolding.vim	/^augroup SetPhpFolds$/;"	a
SetStatusLine	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine(current)$/;"	f
SetSuffixesLast	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:SetSuffixesLast()$/;"	f
SetUpForNewFiletype	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SetUpForNewFiletype(filetype, forceReset)$/;"	f
SetWD	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetWD(args)$/;"	f
Sexplore	plugged/winmanager_23/plugin/winfileexplorer.vim	/^		command -n=? -complete=dir Sexplore :call s:StartExplorer(1, '<a>')$/;"	c
ShouldMatchWhitespace	plugged/vim-trailing-whitespace/plugin/trailing-whitespace.vim	/^function! s:ShouldMatchWhitespace()$/;"	f
ShowAllFiles	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:ShowAllFiles()$/;"	f
ShowBuffers	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>ShowBuffers(delBufNum)$/;"	f
ShowDirectory	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:ShowDirectory()$/;"	f
ShowInPreviewWin	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
ShowPrototype	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
ShowVariableValue	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>ShowVariableValue(...)$/;"	f
ShrinkIfExpanded	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
SkipMatch	plugged/PIV/plugin/phpfolding.vim	/^function! SkipMatch() " {{{$/;"	f
Skippmatch	plugged/PIV/indent/php.vim	/^function! Skippmatch()	" {{{$/;"	f
Skippmatch2	plugged/PIV/indent/php.vim	/^function! Skippmatch2()$/;"	f
SolarizedHiTrail	plugged/vim-colors-solarized/colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	plugged/vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	plugged/vim-colors-solarized/colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	plugged/vim-colors-solarized/colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	plugged/vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
Sort	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:Sort(cmp,direction) range$/;"	f
SortByNoiseAndText	plugged/vim-ctrlspace/go/file_engine.go	/^type SortByNoiseAndText struct{ SortItems }$/;"	t
SortByText	plugged/vim-ctrlspace/go/file_engine.go	/^type SortByText struct{ SortItems }$/;"	t
SortItems	plugged/vim-ctrlspace/go/file_engine.go	/^type SortItems struct {$/;"	t
SortListing	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:SortListing(msg)$/;"	f
SortR	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:SortR(start, end, cmp, direction)$/;"	f
SortReverse	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:SortReverse()$/;"	f
SortSelect	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:SortSelect()$/;"	f
SortTags	plugged/tagbar/autoload/tagbar.vim	/^function! s:SortTags(tags, comparemethod) abort$/;"	f
SpecInputs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f
SplitClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:SplitClasspath(classpath) " {{{2$/;"	f
SplitPattern	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f
StartCompletionMode	plugged/supertab/plugin/supertab.vim	/^function! s:StartCompletionMode() " {{{$/;"	f
StartDebug	plugged/tagbar/autoload/tagbar.vim	/^function! s:StartDebug(filename) abort$/;"	f
StartExplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>StartExplorer(sticky, delBufNum)$/;"	f
StartExplorer	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:StartExplorer(split, start_dir)$/;"	f
StartTagsFileDisplay	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! <SID>StartTagsFileDisplay()$/;"	f
StartWindowsManager	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>StartWindowsManager()$/;"	f
StopDebug	plugged/tagbar/autoload/tagbar.vim	/^function! s:StopDebug() abort$/;"	f
StopExplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>StopExplorer(sticky)$/;"	f
StrCmp	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:StrCmp(line1, line2, direction)$/;"	f
Strntok	plugged/winmanager_23/plugin/winmanager.vim	/^fun! <SID>Strntok(s, tok, n)$/;"	f
Strntok	plugged/winmanager_23/plugin/wintagexplorer.vim	/^fun! <SID>Strntok(s, tok, n)$/;"	f
Strntok2	plugged/winmanager_23/plugin/winmanager.vim	/^fun! <SID>Strntok2(s, tok, n)$/;"	f
SuperTab	plugged/supertab/plugin/supertab.vim	/^function! SuperTab(command) " {{{$/;"	f
SuperTabAlternateCompletion	plugged/supertab/plugin/supertab.vim	/^function! SuperTabAlternateCompletion(type) " {{{$/;"	f
SuperTabChain	plugged/supertab/plugin/supertab.vim	/^function! SuperTabChain(completefunc, completekeys, ...) " {{{$/;"	f
SuperTabCodeComplete	plugged/supertab/plugin/supertab.vim	/^function! SuperTabCodeComplete(findstart, base) " {{{$/;"	f
SuperTabHelp	plugged/supertab/plugin/supertab.vim	/^    command SuperTabHelp :call <SID>SuperTabHelp()$/;"	c
SuperTabHelp	plugged/supertab/plugin/supertab.vim	/^function! s:SuperTabHelp() " {{{$/;"	f
SuperTabLongestHighlight	plugged/supertab/plugin/supertab.vim	/^function! SuperTabLongestHighlight(dir) " {{{$/;"	f
SuperTabSetCompletionType	plugged/supertab/plugin/supertab.vim	/^function! SuperTabSetCompletionType(type) " {{{$/;"	f
SuperTabSetDefaultCompletionType	plugged/supertab/plugin/supertab.vim	/^function! SuperTabSetDefaultCompletionType(type) " {{{$/;"	f
Swap	plugged/vim-ctrlspace/go/file_engine.go	/^func (s *SortItems) Swap(i, j int) {$/;"	f
SwapOutterMultiPartDelimsForPlaceHolders	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterMultiPartDelimsForPlaceHolders(line)$/;"	f
SwapOutterPlaceHoldersForMultiPartDelims	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterPlaceHoldersForMultiPartDelims(line)$/;"	f
SwitchToAlternativeDelimiters	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwitchToAlternativeDelimiters(printMsgs)$/;"	f
SyntasticAutoloclistNotifier.AutoToggle	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist) abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.New	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New() abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.refresh	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsExprNotifier	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.New	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.enabled	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.refresh	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsNotifier.reset	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticCheck	plugged/syntastic/plugin/syntastic.vim	/^command! -bar -nargs=* -complete=custom,s:CompleteCheckerName SyntasticCheck call SyntasticCheck(<f-args>)$/;"	c
SyntasticCheck	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticCheck(...) abort " {{{2$/;"	f
SyntasticChecker.New	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args, ...) abort " {{{2$/;"	f
SyntasticChecker._getOpt	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._getOpt(opts, basename, name, default) abort " {{{2$/;"	f
SyntasticChecker._populateHighlightRegexes	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(errors) abort " {{{2$/;"	f
SyntasticChecker._quietMessages	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._quietMessages(errors) abort " {{{2$/;"	f
SyntasticChecker.getExec	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExec() abort " {{{2$/;"	f
SyntasticChecker.getExecEscaped	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExecEscaped() abort " {{{2$/;"	f
SyntasticChecker.getFiletype	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getFiletype() abort " {{{2$/;"	f
SyntasticChecker.getLocList	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList() abort " {{{2$/;"	f
SyntasticChecker.getLocListRaw	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocListRaw() abort " {{{2$/;"	f
SyntasticChecker.getName	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getName() abort " {{{2$/;"	f
SyntasticChecker.getVersion	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getVersion(...) abort " {{{2$/;"	f
SyntasticChecker.isAvailable	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable() abort " {{{2$/;"	f
SyntasticChecker.isDisabled	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isDisabled() abort " {{{2$/;"	f
SyntasticChecker.log	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.log(msg, ...) abort " {{{2$/;"	f
SyntasticChecker.makeprgBuild	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.makeprgBuild(opts) abort " {{{2$/;"	f
SyntasticChecker.setVersion	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setVersion(version) abort " {{{2$/;"	f
SyntasticChecker.setWantSort	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setWantSort(val) abort " {{{2$/;"	f
SyntasticChecker.syncExec	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.syncExec() abort " {{{2$/;"	f
SyntasticChecker.wantSort	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.wantSort() abort " {{{2$/;"	f
SyntasticCursorNotifier.New	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New() abort " {{{2$/;"	f
SyntasticCursorNotifier.enabled	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.enabled() abort " {{{2$/;"	f
SyntasticCursorNotifier.refresh	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticCursorNotifier.reset	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticErrors	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticErrors() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.New	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._reset	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._reset() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._setup	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._setup() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.enabled	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.refresh	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticHighlightingNotifier.reset	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticInfo	plugged/syntastic/plugin/syntastic.vim	/^command! -bar -nargs=? -complete=custom,s:CompleteFiletypes   SyntasticInfo  call SyntasticInfo(<f-args>)$/;"	c
SyntasticInfo	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticInfo(...) abort " {{{2$/;"	f
SyntasticJavacEditClasspath	plugged/syntastic/plugin/syntastic.vim	/^command! SyntasticJavacEditClasspath runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditClasspath$/;"	c
SyntasticJavacEditClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticJavacEditConfig	plugged/syntastic/plugin/syntastic.vim	/^command! SyntasticJavacEditConfig    runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditConfig$/;"	c
SyntasticJavacEditConfig	plugged/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditConfig    call s:EditConfig()$/;"	c
SyntasticLoclist.New	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist) abort " {{{2$/;"	f
SyntasticLoclist.balloons	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.balloons() abort " {{{2$/;"	f
SyntasticLoclist.copyRaw	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.copyRaw() abort " {{{2$/;"	f
SyntasticLoclist.current	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.current() abort " {{{2$/;"	f
SyntasticLoclist.decorate	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.decorate(tag) abort " {{{2$/;"	f
SyntasticLoclist.deploy	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.deploy() abort " {{{2$/;"	f
SyntasticLoclist.destroy	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.destroy() abort " {{{2$/;"	f
SyntasticLoclist.errors	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors() abort " {{{2$/;"	f
SyntasticLoclist.extend	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other) abort " {{{2$/;"	f
SyntasticLoclist.filter	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters) abort " {{{2$/;"	f
SyntasticLoclist.getBuffers	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getBuffers() abort " {{{2$/;"	f
SyntasticLoclist.getCursorColumns	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getCursorColumns() abort " {{{2$/;"	f
SyntasticLoclist.getFirstError	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getFirstError(...) abort " {{{2$/;"	f
SyntasticLoclist.getName	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getName() abort " {{{2$/;"	f
SyntasticLoclist.getOwner	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getOwner() abort " {{{2$/;"	f
SyntasticLoclist.getRaw	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getRaw() abort " {{{2$/;"	f
SyntasticLoclist.getStatuslineFlag	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getStatuslineFlag() abort " {{{2$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay() abort " {{{2$/;"	f
SyntasticLoclist.isEmpty	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty() abort " {{{2$/;"	f
SyntasticLoclist.isNewerThan	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isNewerThan(stamp) abort " {{{2$/;"	f
SyntasticLoclist.messages	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages(buf) abort " {{{2$/;"	f
SyntasticLoclist.setName	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setName(name) abort " {{{2$/;"	f
SyntasticLoclist.setOwner	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setOwner(buffer) abort " {{{2$/;"	f
SyntasticLoclist.setloclist	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setloclist() abort " {{{2$/;"	f
SyntasticLoclist.show	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show() abort " {{{2$/;"	f
SyntasticLoclist.sort	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.sort() abort " {{{2$/;"	f
SyntasticLoclist.warnings	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings() abort " {{{2$/;"	f
SyntasticLoclistHide	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! SyntasticLoclistHide() abort " {{{2$/;"	f
SyntasticMake	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options) abort " {{{2$/;"	f
SyntasticModeMap.Instance	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance() abort " {{{2$/;"	f
SyntasticModeMap._isOneFiletypeActive	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap._noFiletypesArePassive	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.allowsAutoChecking	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype) abort " {{{2$/;"	f
SyntasticModeMap.doAutoChecking	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.doAutoChecking() abort " {{{2$/;"	f
SyntasticModeMap.echoMode	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode() abort " {{{2$/;"	f
SyntasticModeMap.isPassive	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive() abort " {{{2$/;"	f
SyntasticModeMap.modeInfo	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.modeInfo(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.synch	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.synch() abort " {{{2$/;"	f
SyntasticModeMap.toggleMode	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode() abort " {{{2$/;"	f
SyntasticNotifiers.Instance	plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.Instance() abort " {{{2$/;"	f
SyntasticNotifiers._initNotifiers	plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers() abort " {{{2$/;"	f
SyntasticNotifiers.refresh	plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist) abort " {{{2$/;"	f
SyntasticNotifiers.reset	plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist) abort " {{{2$/;"	f
SyntasticRefreshCursor	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! SyntasticRefreshCursor() abort " {{{2$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args) abort " {{{2$/;"	f
SyntasticRegistry.Instance	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance() abort " {{{2$/;"	f
SyntasticRegistry._checkDeprecation	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._checkDeprecation(filetype) abort " {{{2$/;"	f
SyntasticRegistry._filterCheckersByName	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(checkers_map, list) abort " {{{2$/;"	f
SyntasticRegistry._loadCheckersFor	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckersFor(filetype, force) abort " {{{2$/;"	f
SyntasticRegistry._registerChecker	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._registerChecker(checker) abort " {{{2$/;"	f
SyntasticRegistry.echoInfoFor	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckers	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckers(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersAvailable	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersAvailable(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersDisabled	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersDisabled(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getKnownFiletypes	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getKnownFiletypes() abort " {{{2$/;"	f
SyntasticRegistry.getNamesOfAvailableCheckers	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getNamesOfAvailableCheckers(ftalias) abort " {{{2$/;"	f
SyntasticReset	plugged/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticReset      call SyntasticReset()$/;"	c
SyntasticReset	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticReset() abort " {{{2$/;"	f
SyntasticSetLoclist	plugged/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticSetLoclist call SyntasticSetLoclist()$/;"	c
SyntasticSetLoclist	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticSetLoclist() abort " {{{2$/;"	f
SyntasticSignsNotifier.New	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New() abort " {{{2$/;"	f
SyntasticSignsNotifier._bufSignIds	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds() abort " {{{2$/;"	f
SyntasticSignsNotifier._removeSigns	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids) abort " {{{2$/;"	f
SyntasticSignsNotifier._setup	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup() abort " {{{2$/;"	f
SyntasticSignsNotifier._signErrors	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist) abort " {{{2$/;"	f
SyntasticSignsNotifier.enabled	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled() abort " {{{2$/;"	f
SyntasticSignsNotifier.refresh	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticStatuslineFlag	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag() abort " {{{2$/;"	f
SyntasticToggleMode	plugged/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticToggleMode call SyntasticToggleMode()$/;"	c
SyntasticToggleMode	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticToggleMode() abort " {{{2$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex	plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetLocList	plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_GetLocList	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_GetLocList	plugged/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_GetLocList() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_IsAvailable	plugged/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_apiblueprint_drafter_GetLocList	plugged/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^function! SyntaxCheckers_apiblueprint_drafter_GetLocList() dict$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	plugged/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList() dict$/;"	f
SyntaxCheckers_asciidoc_asciidoc_GetLocList	plugged/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_GetLocList() dict$/;"	f
SyntaxCheckers_asm_gcc_GetLocList	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_asm_gcc_IsAvailable	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_bemhtml_bemhtmllint_GetLocList	plugged/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^function SyntaxCheckers_bemhtml_bemhtmllint_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_GetHighlightRegex	plugged/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_bro_bro_GetLocList	plugged/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_IsAvailable	plugged/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_IsAvailable() dict$/;"	f
SyntaxCheckers_c_avrgcc_GetLocList	plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^function! SyntaxCheckers_c_avrgcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_IsAvailable() dict$/;"	f
SyntaxCheckers_c_clang_check_GetLocList	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^function! SyntaxCheckers_c_clang_check_GetLocList() dict$/;"	f
SyntaxCheckers_c_clang_tidy_GetLocList	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^function! SyntaxCheckers_c_clang_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppcheck_GetLocList	plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^function! SyntaxCheckers_c_cppcheck_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_GetLocList	plugged/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	plugged/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_c_make_GetLocList	plugged/syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList() dict$/;"	f
SyntaxCheckers_c_oclint_GetLocList	plugged/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList() dict$/;"	f
SyntaxCheckers_c_pc_lint_GetLocList	plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^function! SyntaxCheckers_c_pc_lint_GetLocList() dict$/;"	f
SyntaxCheckers_c_sparse_GetLocList	plugged/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList() dict$/;"	f
SyntaxCheckers_c_splint_GetLocList	plugged/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList() dict$/;"	f
SyntaxCheckers_cabal_cabal_GetHighlightRegex	plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_cabal_cabal_GetLocList	plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetLocList() dict$/;"	f
SyntaxCheckers_chef_foodcritic_GetLocList	plugged/syntastic/syntax_checkers/chef/foodcritic.vim	/^function! SyntaxCheckers_chef_foodcritic_GetLocList() dict$/;"	f
SyntaxCheckers_co_coco_GetLocList	plugged/syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_GetLocList	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_IsAvailable	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	plugged/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList() dict$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	plugged/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_cpp_verapp_GetLocList	plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^function! SyntaxCheckers_cpp_verapp_GetLocList() dict$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	plugged/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList() dict$/;"	f
SyntaxCheckers_css_csslint_GetLocList	plugged/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList() dict$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList() dict$/;"	f
SyntaxCheckers_css_stylelint_GetLocList	plugged/syntastic/syntax_checkers/css/stylelint.vim	/^function! SyntaxCheckers_css_stylelint_GetLocList() dict$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	plugged/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList() dict$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	plugged/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_GetLocList	plugged/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	plugged/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable() dict$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex	plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetLocList	plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetLocList() dict$/;"	f
SyntaxCheckers_docbk_igor_GetLocList	plugged/syntastic/syntax_checkers/docbk/igor.vim	/^function! SyntaxCheckers_docbk_igor_GetLocList() dict$/;"	f
SyntaxCheckers_dockerfile_dockerfile_lint_GetLocList	plugged/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^function! SyntaxCheckers_dockerfile_dockerfile_lint_GetLocList() dict$/;"	f
SyntaxCheckers_dustjs_swiffer_GetLocList	plugged/syntastic/syntax_checkers/dustjs/swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable() dict$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList() dict$/;"	f
SyntaxCheckers_erlang_syntaxerl_GetLocList	plugged/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^function! SyntaxCheckers_erlang_syntaxerl_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable() dict$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_glsl_cgc_GetLocList	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^function! SyntaxCheckers_glsl_cgc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_go_go_GetLocList	plugged/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_IsAvailable	plugged/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable() dict$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	plugged/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList() dict$/;"	f
SyntaxCheckers_go_golint_GetLocList	plugged/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList() dict$/;"	f
SyntaxCheckers_go_gometalinter_GetLocList	plugged/syntastic/syntax_checkers/go/gometalinter.vim	/^function! SyntaxCheckers_go_gometalinter_GetLocList() dict$/;"	f
SyntaxCheckers_go_gotype_GetLocList	plugged/syntastic/syntax_checkers/go/gotype.vim	/^function! SyntaxCheckers_go_gotype_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_GetLocList	plugged/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_IsAvailable	plugged/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_GetLocList	plugged/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	plugged/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_lint_GetLocList	plugged/syntastic/syntax_checkers/haml/haml_lint.vim	/^function! SyntaxCheckers_haml_haml_lint_GetLocList() dict$/;"	f
SyntaxCheckers_handlebars_handlebars_GetLocList	plugged/syntastic/syntax_checkers/handlebars/handlebars.vim	/^function! SyntaxCheckers_handlebars_handlebars_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_GetLocList	plugged/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_IsAvailable	plugged/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_IsAvailable() dict$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_GetLocList	plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_scan_GetLocList	plugged/syntastic/syntax_checkers/haskell/scan.vim	/^function! SyntaxCheckers_haskell_scan_GetLocList() dict$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	plugged/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList() dict$/;"	f
SyntaxCheckers_hss_hss_GetLocList	plugged/syntastic/syntax_checkers/hss/hss.vim	/^function! SyntaxCheckers_hss_hss_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_GetLocList	plugged/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_IsAvailable	plugged/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_tidy_GetLocList	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_html_validator_GetLocList	plugged/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList() dict$/;"	f
SyntaxCheckers_html_w3_GetLocList	plugged/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable() dict$/;"	f
SyntaxCheckers_java_javac_GetLocList	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_java_javac_IsAvailable	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_eslint_GetLocList	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_eslint_IsAvailable	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_flow_GetLocList	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_flow_IsAvailable	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	plugged/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_GetLocList	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_IsAvailable	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	plugged/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jslint_GetHighlightRegex	plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_GetLocList	plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_IsAvailable	plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_mixedindentlint_GetLocList	plugged/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^function! SyntaxCheckers_javascript_mixedindentlint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_GetLocList	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_IsAvailable	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_IsAvailable() dict$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	plugged/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList() dict$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	plugged/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_GetLocList	plugged/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	plugged/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable() dict$/;"	f
SyntaxCheckers_less_recess_GetLocList	plugged/syntastic/syntax_checkers/less/recess.vim	/^function! SyntaxCheckers_less_recess_GetLocList() dict$/;"	f
SyntaxCheckers_lex_flex_GetHighlightRegex	plugged/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lex_flex_GetLocList	plugged/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetLocList() dict$/;"	f
SyntaxCheckers_limbo_limbo_GetLocList	plugged/syntastic/syntax_checkers/limbo/limbo.vim	/^function! SyntaxCheckers_limbo_limbo_GetLocList() dict$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	plugged/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList() dict$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	plugged/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	plugged/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	plugged/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luacheck_GetHighlightRegex	plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lua_luacheck_GetLocList	plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_mdl_GetLocList	plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^function! SyntaxCheckers_markdown_mdl_GetLocList() dict$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	plugged/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList() dict$/;"	f
SyntaxCheckers_mercury_mmc_GetLocList	plugged/syntastic/syntax_checkers/mercury/mmc.vim	/^function! SyntaxCheckers_mercury_mmc_GetLocList() dict$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	plugged/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList() dict$/;"	f
SyntaxCheckers_nix_nix_GetLocList	plugged/syntastic/syntax_checkers/nix/nix.vim	/^function! SyntaxCheckers_nix_nix_GetLocList() dict$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	plugged/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl_perl_GetLocList	plugged/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList() dict$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	plugged/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable() dict$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList() dict$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	plugged/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	plugged/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	plugged/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList() dict$/;"	f
SyntaxCheckers_php_phplint_GetHighlightRegex	plugged/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phplint_GetLocList	plugged/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	plugged/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	plugged/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList() dict$/;"	f
SyntaxCheckers_po_msgfmt_GetHighlightRegex	plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_po_msgfmt_GetLocList	plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetLocList() dict$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	plugged/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList() dict$/;"	f
SyntaxCheckers_pug_pug_lint_GetLocList	plugged/syntastic/syntax_checkers/pug/pug_lint.vim	/^function! SyntaxCheckers_pug_pug_lint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	plugged/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	plugged/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	plugged/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList() dict$/;"	f
SyntaxCheckers_python_frosted_GetLocList	plugged/syntastic/syntax_checkers/python/frosted.vim	/^function! SyntaxCheckers_python_frosted_GetLocList() dict$/;"	f
SyntaxCheckers_python_mypy_GetLocList	plugged/syntastic/syntax_checkers/python/mypy.vim	/^function! SyntaxCheckers_python_mypy_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep8_GetLocList	plugged/syntastic/syntax_checkers/python/pep8.vim	/^function! SyntaxCheckers_python_pep8_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_GetLocList	plugged/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_IsAvailable	plugged/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_IsAvailable() dict$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	plugged/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList() dict$/;"	f
SyntaxCheckers_python_pydocstyle_GetLocList	plugged/syntastic/syntax_checkers/python/pydocstyle.vim	/^function! SyntaxCheckers_python_pydocstyle_GetLocList() dict$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylama_GetHighlightRegex	plugged/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_pylama_GetLocList	plugged/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_GetLocList	plugged/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	plugged/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_python_GetLocList	plugged/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList() dict$/;"	f
SyntaxCheckers_python_python_IsAvailable	plugged/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable() dict$/;"	f
SyntaxCheckers_qml_qmllint_GetLocList	plugged/syntastic/syntax_checkers/qml/qmllint.vim	/^function! SyntaxCheckers_qml_qmllint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_GetHighlightRegex	plugged/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lint_GetLocList	plugged/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_IsAvailable	plugged/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_r_lintr_GetHighlightRegex	plugged/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lintr_GetLocList	plugged/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_GetLocList() dict$/;"	f
SyntaxCheckers_r_lintr_IsAvailable	plugged/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_IsAvailable() dict$/;"	f
SyntaxCheckers_r_svtools_GetHighlightRegex	plugged/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_svtools_GetLocList	plugged/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetLocList() dict$/;"	f
SyntaxCheckers_r_svtools_IsAvailable	plugged/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_GetLocList	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_GetLocList() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_IsAvailable	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_racket_GetLocList	plugged/syntastic/syntax_checkers/racket/racket.vim	/^function! SyntaxCheckers_racket_racket_GetLocList() dict$/;"	f
SyntaxCheckers_rnc_rnv_GetLocList	plugged/syntastic/syntax_checkers/rnc/rnv.vim	/^function! SyntaxCheckers_rnc_rnv_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rstcheck_GetLocList	plugged/syntastic/syntax_checkers/rst/rstcheck.vim	/^function! SyntaxCheckers_rst_rstcheck_GetLocList() dict$/;"	f
SyntaxCheckers_rst_sphinx_GetLocList	plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^function! SyntaxCheckers_rst_sphinx_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_flog_GetLocList	plugged/syntastic/syntax_checkers/ruby/flog.vim	/^function! SyntaxCheckers_ruby_flog_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	plugged/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	plugged/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_reek_GetLocList	plugged/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_reek_IsAvailable	plugged/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubylint_GetLocList	plugged/syntastic/syntax_checkers/ruby/rubylint.vim	/^function! SyntaxCheckers_ruby_rubylint_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_GetLocList	plugged/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sassc_GetLocList	plugged/syntastic/syntax_checkers/sass/sassc.vim	/^function! SyntaxCheckers_sass_sassc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_fsc_GetLocList	plugged/syntastic/syntax_checkers/scala/fsc.vim	/^function! SyntaxCheckers_scala_fsc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	plugged/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_GetLocList	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_IsAvailable	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_IsAvailable() dict$/;"	f
SyntaxCheckers_scss_scss_lint_GetLocList	plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_GetLocList() dict$/;"	f
SyntaxCheckers_scss_scss_lint_IsAvailable	plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sh_bashate_GetLocList	plugged/syntastic/syntax_checkers/sh/bashate.vim	/^function! SyntaxCheckers_sh_bashate_GetLocList() dict$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	plugged/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_GetLocList	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_sh_shellcheck_GetLocList	plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^function! SyntaxCheckers_sh_shellcheck_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slim_lint_GetLocList	plugged/syntastic/syntax_checkers/slim/slim_lint.vim	/^function! SyntaxCheckers_slim_slim_lint_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	plugged/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList() dict$/;"	f
SyntaxCheckers_sml_smlnj_GetLocList	plugged/syntastic/syntax_checkers/sml/smlnj.vim	/^function! SyntaxCheckers_sml_smlnj_GetLocList() dict$/;"	f
SyntaxCheckers_spec_rpmlint_GetLocList	plugged/syntastic/syntax_checkers/spec/rpmlint.vim	/^function! SyntaxCheckers_spec_rpmlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_GetHighlightRegex	plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_sql_sqlint_GetLocList	plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_IsAvailable	plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_IsAvailable() dict$/;"	f
SyntaxCheckers_stylus_stylint_GetLocList	plugged/syntastic/syntax_checkers/stylus/stylint.vim	/^function! SyntaxCheckers_stylus_stylint_GetLocList() dict$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	plugged/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList() dict$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList() dict$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	plugged/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList() dict$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex	plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetLocList	plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetLocList() dict$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList() dict$/;"	f
SyntaxCheckers_text_language_check_GetLocList	plugged/syntastic/syntax_checkers/text/language_check.vim	/^function! SyntaxCheckers_text_language_check_GetLocList() dict$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	plugged/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tsc_GetLocList	plugged/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tsc_IsAvailable	plugged/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_IsAvailable() dict$/;"	f
SyntaxCheckers_typescript_tslint_GetHighlightRegex	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_typescript_tslint_GetLocList	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetLocList() dict$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	plugged/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos) " {{{1$/;"	f
SyntaxCheckers_vala_valac_GetLocList	plugged/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_verilog_iverilog_GetLocList	plugged/syntastic/syntax_checkers/verilog/iverilog.vim	/^function! SyntaxCheckers_verilog_iverilog_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_GetLocList	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_IsAvailable	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_IsAvailable() dict$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	plugged/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList() dict$/;"	f
SyntaxCheckers_vhdl_vcom_GetLocList	plugged/syntastic/syntax_checkers/vhdl/vcom.vim	/^function! SyntaxCheckers_vhdl_vcom_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_GetHighlightRegex	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetHighlightRegex(item) " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_GetLocList	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_IsAvailable	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_vim_vint_GetLocList	plugged/syntastic/syntax_checkers/vim/vint.vim	/^function! SyntaxCheckers_vim_vint_GetLocList() dict$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_xml_plutil_GetLocList	plugged/syntastic/syntax_checkers/xml/plutil.vim	/^function! SyntaxCheckers_xml_plutil_GetLocList() dict$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	plugged/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList() dict$/;"	f
SyntaxCheckers_xquery_basex_GetLocList	plugged/syntastic/syntax_checkers/xquery/basex.vim	/^function! SyntaxCheckers_xquery_basex_GetLocList() dict$/;"	f
SyntaxCheckers_yacc_bison_GetLocList	plugged/syntastic/syntax_checkers/yacc/bison.vim	/^function! SyntaxCheckers_yacc_bison_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	plugged/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamllint_GetLocList	plugged/syntastic/syntax_checkers/yaml/yamllint.vim	/^function! SyntaxCheckers_yaml_yamllint_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_GetLocList	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_IsAvailable	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_IsAvailable() dict$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	plugged/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList() dict$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	plugged/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList() dict$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	plugged/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList() dict$/;"	f
T	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map T <Plug>(easymotion-T)$/;"	m
T/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map T\/ <Plug>(easymotion-Tn)$/;"	m
T;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal T;$/;"	m
TE_ShowVariableValue	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! TE_ShowVariableValue(...)$/;"	f
TH	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal TH$/;"	m
THa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal THa$/;"	m
TMiniBufExplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  command! TMiniBufExplorer  call <SID>ToggleExplorer()$/;"	c
TabEnterHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:TabEnterHandler()$/;"	f
TabLeaveHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:TabLeaveHandler()$/;"	f
TabSpace	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabSpace()$/;"	f
TabbedCol	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabbedCol(line, col)$/;"	f
TagList_IsValid	plugged/taglist.vim/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	plugged/taglist.vim/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	plugged/taglist.vim/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	plugged/taglist.vim/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagPopupList	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! s:TagPopupList(szTypeName, szBase)$/;"	f
Tagbar	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
TagbarBalloonExpr	plugged/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarClose	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#StartDebug(<f-args>)$/;"	c
TagbarDebugEnd	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#StopDebug()$/;"	c
TagbarGetTypeConfig	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	plugged/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
TagsExplorer_IsPossible	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! TagsExplorer_IsPossible()$/;"	f
TagsExplorer_IsValid	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! TagsExplorer_IsValid()$/;"	f
TagsExplorer_Start	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! TagsExplorer_Start()$/;"	f
TagsExplorer_WrapUp	plugged/winmanager_23/plugin/wintagexplorer.vim	/^function! TagsExplorer_WrapUp()$/;"	f
Tb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Tb$/;"	m
Tba	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Tba$/;"	m
Test	plugged/python-syntax/test.py	/^async def Test$/;"	f
TestSuperTabCodeComplete	plugged/supertab/plugin/supertab.vim	/^function! TestSuperTabCodeComplete(findstart, base) " {{{$/;"	f
Th	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Th$/;"	m
Tha	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Tha$/;"	m
Throw	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:Throw(message) "{{{$/;"	f
TidyEncOptByFenc	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc() " {{{2$/;"	f
TidyEncOptByFenc	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
Tlist	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	plugged/taglist.vim/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	plugged/taglist.vim/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	plugged/taglist.vim/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_Cmd	plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Tag_Linenum	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	plugged/taglist.vim/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_SearchPat	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	plugged/taglist.vim/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	plugged/taglist.vim/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	plugged/taglist.vim/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
Toa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Toa$/;"	m
Tob	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Tob$/;"	m
Toc	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Toc$/;"	m
Tod	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Tod$/;"	m
TogBG	plugged/vim-colors-solarized/autoload/togglebg.vim	/^function! s:TogBG()$/;"	f
Toggle	plugged/vimgdb_runtime/macros/gdb_mappings.vim	/^function! s:Toggle()$/;"	f
ToggleAutoclose	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
ToggleBG	plugged/vim-colors-solarized/autoload/togglebg.vim	/^    command ToggleBG :call s:TogBG()$/;"	c
ToggleBackground	plugged/vim-colors-solarized/autoload/togglebg.vim	/^function! ToggleBackground()$/;"	f
ToggleByFname	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f
ToggleExplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^function! <SID>ToggleExplorer()$/;"	f
ToggleFocus	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f
ToggleFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
ToggleGDB	plugged/vimgdb_runtime/macros/gdb_mappings.vim	/^function! ToggleGDB()$/;"	f
ToggleHelp	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
ToggleHelp	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:ToggleHelp()$/;"	f
ToggleHideNonPublicTags	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
ToggleKeyLoop	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f
ToggleLongList	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:ToggleLongList()$/;"	f
ToggleMRURelative	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleMRURelative()$/;"	f
ToggleRegex	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f
ToggleSort	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
ToggleType	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f
ToggleWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow() abort$/;"	f
ToggleWindowsManager	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>ToggleWindowsManager()$/;"	f
TokensToString	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! s:TokensToString(tokens)$/;"	f
ToolBar.togglebg	plugged/vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>a$/;"	m
ToolBar.togglebg	plugged/vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> ToolBar.togglebg <SID>TogBG$/;"	m
ToolBar.togglebg	plugged/vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>gv$/;"	m
TransformUserTypeDef	plugged/tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
TreeDirNode.AbsoluteTreeRoot	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
TreeDirNode._initChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.displayString	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
TreeDirNode.findNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getCascade	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
TreeDirNode.getChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getDirChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
TreeDirNode.getVisibleChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.isCascadable	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
TreeDirNode.open	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
TreeDirNode.sortChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
TreeFileNode._renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
TreeFileNode.activate	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getNerdtree	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
TreeFileNode.isRoot	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.open	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TriggerAbb	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:TriggerAbb() "{{{$/;"	f
TrimByNoise	plugged/vim-ctrlspace/go/file_engine.go	/^func (items *ItemCollection) TrimByNoise() {$/;"	f
TryNormal	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function TryNormal(str)$/;"	f
TypeInfo.New	plugged/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.New(...) abort dict$/;"	f
TypeInfo.createKinddict	plugged/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.createKinddict() abort dict$/;"	f
TypeInfo.getKind	plugged/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.getKind(kind) abort dict$/;"	f
UI.IndentWid	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line, removeLeadingSpaces)$/;"	f
UI.centerView	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(file_node)$/;"	f
UI.getPath	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.getShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
UI.getShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
UI.getShowHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
UI.getShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
UI.isIgnoreFilterEnabled	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
UI.isMinimal	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
UI.render	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.setShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
UI.toggleHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
UI.toggleIgnoreFilter	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UMiniBufExplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  command! UMiniBufExplorer  call <SID>AutoUpdate(-1)$/;"	c
UnEsc	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UnEsc(str, escChar)$/;"	f
UncommentLineNormal	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLineNormal(line)$/;"	f
UncommentLines	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLines(topLine, bottomLine)$/;"	f
UncommentLinesNormal	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesNormal(topline, bottomline)$/;"	f
UncommentLinesSexy	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesSexy(topline, bottomline)$/;"	f
Unmap	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:Unmap() " {{{$/;"	f
UntabbedCol	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UntabbedCol(line, col)$/;"	f
Update	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Update(str)$/;"	f
UpdateErrors	plugged/syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(auto_invoked, checker_names) abort " {{{2$/;"	f
UpdateHeader	plugged/winmanager_23/plugin/winfileexplorer.vim	/^function! s:UpdateHeader()$/;"	f
UserCmd	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f
VERSION	plugged/delimitMate/Makefile	/^VERSION  =  $(shell $(SED) -n -e '\/Current \\+release\/{s\/^ \\+\\([0-9.]\\+\\).*\/\\1\/;p;}' $(firstword $(DOC)))$/;"	m
VIM	plugged/delimitMate/Makefile	/^VIM      =  vim$/;"	m
VimEnterHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:VimEnterHandler()$/;"	f
WMClose	plugged/winmanager_23/plugin/winmanager.vim	/^	command -nargs=0 WMClose :silent call <SID>CloseWindowsManager()$/;"	c
WMToggle	plugged/winmanager_23/plugin/winmanager.vim	/^	command -nargs=0 WMToggle :silent call <SID>ToggleWindowsManager()$/;"	c
WManager	plugged/winmanager_23/plugin/winmanager.vim	/^	command -nargs=0 WManager :silent call <SID>StartWindowsManager()$/;"	c
WhichMemberVisible	plugged/winmanager_23/plugin/winmanager.vim	/^function! <SID>WhichMemberVisible(i)$/;"	f
WillComplete	plugged/supertab/plugin/supertab.vim	/^function! s:WillComplete(...) " {{{$/;"	f
WinEnterHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:WinEnterHandler()$/;"	f
WinLeaveHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:WinLeaveHandler()$/;"	f
WinManagerFileEdit	plugged/winmanager_23/plugin/winmanager.vim	/^function! WinManagerFileEdit(bufName, split)$/;"	f
WinManagerForceReSize	plugged/winmanager_23/plugin/winmanager.vim	/^function! WinManagerForceReSize(explName)$/;"	f
WinManagerGetLastEditedFile	plugged/winmanager_23/plugin/winmanager.vim	/^function! WinManagerGetLastEditedFile(...)$/;"	f
WinManagerGotoNextInGroup	plugged/winmanager_23/plugin/winmanager.vim	/^	command -nargs=1 WinManagerGotoNextInGroup :silent call <SID>GotoNextExplorerInGroup(<args>)$/;"	c
WinManagerGotoPrevInGroup	plugged/winmanager_23/plugin/winmanager.vim	/^	command -nargs=1 WinManagerGotoPrevInGroup :silent call <SID>GotoNextExplorerInGroup(<args>,-1)$/;"	c
WinManagerResumeAUs	plugged/winmanager_23/plugin/winmanager.vim	/^function! WinManagerResumeAUs()$/;"	f
WinManagerSuspendAUs	plugged/winmanager_23/plugin/winmanager.vim	/^function! WinManagerSuspendAUs()$/;"	f
Window.Toggle\	plugged/vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>a$/;"	m
Window.Toggle\	plugged/vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> Window.Toggle\\ Background <SID>TogBG$/;"	m
Window.Toggle\	plugged/vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>gv$/;"	m
ZoomWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
[	plugged/PIV/ftplugin/php.vim	/^    inoremap <buffer> [ []<LEFT>$/;"	m
[	plugged/PIV/ftplugin/php.vim	/^vnoremap <buffer> [ "zdi[<C-R>z]<ESC>$/;"	m
_	plugged/vim-expand-region/plugin/expand_region.vim	/^  nmap _ <Plug>(expand_region_shrink)$/;"	m
_	plugged/vim-expand-region/plugin/expand_region.vim	/^  vmap _ <Plug>(expand_region_shrink)$/;"	m
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! s:_SID() abort$/;"	f
_add_to_errors	plugged/syntastic/plugin/syntastic.vim	/^function! s:_add_to_errors(errors, options) abort " {{{2$/;"	f
_as_echon	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_as_echon(str)$/;"	f
_as_statusline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_as_statusline(list, count)$/;"	f
_assert	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_assert(...) abort$/;"	f
_auto_cmap	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_auto_cmap()$/;"	f
_base_set._add	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._add(x) abort$/;"	f
_base_set._clear	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._clear() abort$/;"	f
_base_set._hash	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._hash(x) abort$/;"	f
_base_set._new	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._new(...) abort$/;"	f
_base_set._set_data	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._set_data(xs) abort$/;"	f
_base_set._to_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._to_set(x) abort$/;"	f
_base_set._update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._update(xs) abort$/;"	f
_base_set.difference	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.difference(t) abort$/;"	f
_base_set.gt	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.gt(t) abort$/;"	f
_base_set.in	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.in(x) abort$/;"	f
_base_set.intersection	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.intersection(t) abort$/;"	f
_base_set.issubset	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.issubset(t) abort$/;"	f
_base_set.issuperset	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.issuperset(t) abort$/;"	f
_base_set.len	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.len() abort$/;"	f
_base_set.lt	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.lt(t) abort$/;"	f
_base_set.symmetric_difference	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.symmetric_difference(t) abort$/;"	f
_base_set.to_list	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.to_list() abort$/;"	f
_base_set.union	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.union(t) abort$/;"	f
_buffer_complete	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_buffer_complete()$/;"	f
_build_module	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_build_module(sid) abort$/;"	f
_capture	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_capture(mode)$/;"	f
_checkPackage	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPackage(name, ...) abort " {{{2$/;"	f
_checkPhp	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPhp() abort " {{{2$/;"	f
_checkPython	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPython() abort " {{{2$/;"	f
_checkRuby	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkRuby() abort " {{{2$/;"	f
_clamp	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_clamp(x, max, min)$/;"	f
_compare	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare_error_items_by_columns	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_columns(a, b) abort " {{{2$/;"	f
_compare_error_items_by_lines	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_lines(a, b) abort " {{{2$/;"	f
_convert_sid	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_convert_sid(rhs, sid) abort$/;"	f
_create_win2pos2hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_create_win2pos2hint(dict, hint_dict, ...) abort$/;"	f
_decode_JSON	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! s:_decode_JSON(json) abort " {{{2$/;"	f
_default_compare	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_delete_dumb	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_delete_dumb(what, flags) abort " {{{2$/;"	f
_disabled_by_eclim	plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_eclim(filetype) abort " {{{2$/;"	f
_disabled_by_ycm	plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_ycm(filetype) abort " {{{2$/;"	f
_echon	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_echon(expr)$/;"	f
_execute	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_execute(cmd)$/;"	f
_explain_skip	plugged/syntastic/plugin/syntastic.vim	/^function! s:_explain_skip(filetypes) abort " {{{2$/;"	f
_extract_files	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
_file2module	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_file2module(file) abort$/;"	f
_find_index	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! s:_find_index(column, messages) abort " {{{2$/;"	f
_finish	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_finish()$/;"	f
_float2str_dumb	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_float2str_dumb(val) abort " {{{2$/;"	f
_float2str_smart	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_float2str_smart(val) abort " {{{2$/;"	f
_format_variable	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_format_variable(name) abort " {{{2$/;"	f
_function	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! s:_function(fstr) abort$/;"	f
_get_cflags	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_get_cflags(ft, ck, opts) abort " {{{2$/;"	f
_get_checker_var	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_get_checker_var(scope, filetype, subchecker, name, default) abort " {{{2$/;"	f
_get_functions	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_include_dirs	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_get_include_dirs(filetype) abort " {{{2$/;"	f
_get_key	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_get_key(conf)$/;"	f
_get_module_path	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_sid_by_script	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_global_vital_files	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_global_vital_files() abort$/;"	f
_hash_func	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_hash_func(x) abort$/;"	f
_ignore_file	plugged/syntastic/plugin/syntastic.vim	/^function! s:_ignore_file(filename) abort " {{{2$/;"	f
_import	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_import(name) abort$/;"	f
_init	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_init() abort " {{{2$/;"	f
_init_hl	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_init_hl() abort$/;"	f
_isAvailableDefault	plugged/syntastic/plugin/syntastic/checker.vim	/^function! s:_isAvailableDefault() dict " {{{2$/;"	f
_isDebugEnabled_dumb	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_dumb(level) abort " {{{2$/;"	f
_isDebugEnabled_smart	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_smart(level) abort " {{{2$/;"	f
_is_absolute_path	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_modified	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_is_modified(name) abort " {{{2$/;"	f
_is_quitting	plugged/syntastic/plugin/syntastic.vim	/^function! s:_is_quitting(buf) abort " {{{2$/;"	f
_is_same_index	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! s:_is_same_index(line, old_line, column, idx, messages) abort " {{{2$/;"	f
_is_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_is_set(x) abort$/;"	f
_is_valid_highlight	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_is_valid_highlight(name)$/;"	f
_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_keymapping(str)$/;"	f
_keys_count	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_keys_count(targets_len, keys_len) abort$/;"	f
_logRedirect	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_logRedirect(on) abort " {{{2$/;"	f
_log_timestamp_dumb	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_log_timestamp_dumb() abort " {{{2$/;"	f
_log_timestamp_smart	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_log_timestamp_smart() abort " {{{2$/;"	f
_maparg	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_maparg(name, mode, abbr, dict)$/;"	f
_new_option	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_option(name) abort$/;"	f
_new_variable	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_variable(name, ...) abort$/;"	f
_normalise_filetype	plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_normalise_filetype(ftalias) abort " {{{2$/;"	f
_os_name	plugged/syntastic/plugin/syntastic.vim	/^function! s:_os_name() abort " {{{2$/;"	f
_parse_line	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_parse_line(line)$/;"	f
_path2project_directory_git	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_others	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_svn	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_redir	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_redir(cmd) abort$/;"	f
_redraw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_redraw(cmdline)$/;"	f
_registerHandler	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_registerHandler(regex, function, args) abort " {{{2$/;"	f
_remove_shadowed_items	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_remove_shadowed_items(errors) abort " {{{2$/;"	f
_reset	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:_reset()$/;"	f
_reset	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_reset()$/;"	f
_resolve_filetypes	plugged/syntastic/plugin/syntastic.vim	/^function! s:_resolve_filetypes(filetypes) abort " {{{2$/;"	f
_rmrf	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_rmrf(what) abort " {{{2$/;"	f
_safe_eval	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_safe_eval(expr, ...)$/;"	f
_search_headers	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_search_headers() abort " {{{2$/;"	f
_self_vital_files	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_self_vital_files() abort$/;"	f
_set_screen_column	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_set_screen_column(item) abort " {{{2$/;"	f
_should_match_cmdline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:_should_match_cmdline(cmdline)$/;"	f
_skip_file	plugged/syntastic/plugin/syntastic.vim	/^function! s:_skip_file() abort " {{{2$/;"	f
_split_keystring	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_split_keystring(str, ...)$/;"	f
_throw	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_throw(message) abort$/;"	f
_throw	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_throw(msg) abort$/;"	f
_translate	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_translate(key, val) abort " {{{2$/;"	f
_translateElement	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_translateElement(key, term) abort " {{{2$/;"	f
_translateFilter	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_translateFilter(filters) abort " {{{2$/;"	f
_unify_path	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^  function! s:_unify_path(path) abort$/;"	f
_uniq	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_uniq(list)$/;"	f
_verbosefile_pop	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_verbosefile_pop()$/;"	f
_verbosefile_push	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_verbosefile_push(file)$/;"	f
_virtual_tab2spacelen	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! s:_virtual_tab2spacelen(col_num) abort$/;"	f
_virtual_tab2spacelen	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_virtual_tab2spacelen(col_num) abort$/;"	f
_vital_created	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_warn_deprecated	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_wcwidth	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
``	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! ``$/;"	m
a	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap a <Nop>$/;"	m
aa\<Esc>	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        normal aa\\<Esc>$/;"	m
activateAll	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll()$/;"	f
activateBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f
addProjectRoot	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^function! s:addProjectRoot(directory)$/;"	f
addtomrufs	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f
adjust_screen	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:adjust_screen() "{{{$/;"	f
all	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
alternateExtensionsDict	plugged/hc/plugin/a.vim	/^let alternateExtensionsDict = {}$/;"	v
and	plugged/python-syntax/test.py	/^for while if elif else import from as try except finally and in is not or$/;"	i
and	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:and(xs) abort$/;"	f
any	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
append_ul	autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
apps_dir_from_src	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^apps_dir_from_src(SrcFile) ->$/;"	f
argmaps	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f
argv	plugged/syntastic/syntax_checkers/python/codec.py	/^from sys import argv, exit$/;"	i
argv	plugged/syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
as_key_config	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:as_key_config(config)$/;"	f
as_keymapping	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:as_keymapping(key)$/;"	f
ask	autoload/plug.vim	/^function! s:ask(message)$/;"	f
assign_name	autoload/plug.vim	/^function! s:assign_name()$/;"	f
assoc	autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
at	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:at(str)$/;"	f
autocmds	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:autocmds()$/;"	f
b	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map b <Plug>(easymotion-b)$/;"	m
b	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        omap b <Plug>(easymotion-b)$/;"	m
b:InPHPcode	plugged/PIV/indent/php.vim	/^let b:InPHPcode = 0$/;"	v
b:InPHPcode_and_script	plugged/PIV/indent/php.vim	/^let b:InPHPcode_and_script = 0$/;"	v
b:InPHPcode_checked	plugged/PIV/indent/php.vim	/^let b:InPHPcode_checked = 0$/;"	v
b:InPHPcode_tofind	plugged/PIV/indent/php.vim	/^let b:InPHPcode_tofind = ""$/;"	v
b:PHP_BracesAtCodeLevel	plugged/PIV/indent/php.vim	/^    let b:PHP_BracesAtCodeLevel = 0$/;"	v
b:PHP_BracesAtCodeLevel	plugged/PIV/indent/php.vim	/^    let b:PHP_BracesAtCodeLevel = PHP_BracesAtCodeLevel$/;"	v
b:PHP_CurrentIndentLevel	plugged/PIV/indent/php.vim	/^let b:PHP_CurrentIndentLevel = b:PHP_default_indenting$/;"	v
b:PHP_InsideMultilineComment	plugged/PIV/indent/php.vim	/^let b:PHP_InsideMultilineComment = 0$/;"	v
b:PHP_LastIndentedWasComment	plugged/PIV/indent/php.vim	/^let b:PHP_LastIndentedWasComment = 0$/;"	v
b:PHP_autoformatcomment	plugged/PIV/indent/php.vim	/^    let b:PHP_autoformatcomment = 1$/;"	v
b:PHP_autoformatcomment	plugged/PIV/indent/php.vim	/^    let b:PHP_autoformatcomment = PHP_autoformatcomment$/;"	v
b:PHP_default_indenting	plugged/PIV/indent/php.vim	/^    let b:PHP_default_indenting = 0$/;"	v
b:PHP_default_indenting	plugged/PIV/indent/php.vim	/^    let b:PHP_default_indenting = PHP_default_indenting * &sw$/;"	v
b:PHP_indentbeforelast	plugged/PIV/indent/php.vim	/^let b:PHP_indentbeforelast = 0$/;"	v
b:PHP_indentinghuge	plugged/PIV/indent/php.vim	/^let b:PHP_indentinghuge = 0$/;"	v
b:PHP_lastindented	plugged/PIV/indent/php.vim	/^let b:PHP_lastindented = 0$/;"	v
b:PHP_oldchangetick	plugged/PIV/indent/php.vim	/^let b:PHP_oldchangetick = b:changedtick$/;"	v
b:PHP_outdentSLComments	plugged/PIV/indent/php.vim	/^    let b:PHP_outdentSLComments = 0$/;"	v
b:PHP_outdentSLComments	plugged/PIV/indent/php.vim	/^    let b:PHP_outdentSLComments = PHP_outdentSLComments * &sw$/;"	v
b:PHP_outdentphpescape	plugged/PIV/indent/php.vim	/^    let b:PHP_outdentphpescape = 1$/;"	v
b:PHP_outdentphpescape	plugged/PIV/indent/php.vim	/^    let b:PHP_outdentphpescape = PHP_outdentphpescape$/;"	v
b:PHP_vintage_case_default_indent	plugged/PIV/indent/php.vim	/^    let b:PHP_vintage_case_default_indent = 0$/;"	v
b:PHP_vintage_case_default_indent	plugged/PIV/indent/php.vim	/^    let b:PHP_vintage_case_default_indent = 1$/;"	v
b:SuperTabContextTextMemberPatterns	plugged/supertab/ftplugin/html.vim	/^  let b:SuperTabContextTextMemberPatterns = ['<\/']$/;"	v
b:SuperTabContextTextMemberPatterns	plugged/supertab/ftplugin/xml.vim	/^  let b:SuperTabContextTextMemberPatterns = ['<\/']$/;"	v
b:SuperTabContextTextOmniPrecedence	plugged/supertab/ftplugin/html.vim	/^    let b:SuperTabContextTextOmniPrecedence = ['&omnifunc', '&completefunc']$/;"	v
b:SuperTabContextTextOmniPrecedence	plugged/supertab/ftplugin/xml.vim	/^  let b:SuperTabContextTextOmniPrecedence = ['&omnifunc', '&completefunc']$/;"	v
b:UserIsTypingComment	plugged/PIV/indent/php.vim	/^let b:UserIsTypingComment = 0$/;"	v
b:current_syntax	plugged/PIV/syntax/htmljinja.vim	/^let b:current_syntax = "htmljinja"$/;"	v
b:current_syntax	plugged/PIV/syntax/jinja.vim	/^let b:current_syntax = "jinja"$/;"	v
b:current_syntax	plugged/PIV/syntax/php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	plugged/Vim-Jinja2-Syntax/syntax/jinja.vim	/^let b:current_syntax = "jinja"$/;"	v
b:current_syntax	plugged/python-syntax/syntax/python.vim	/^let b:current_syntax = "python"$/;"	v
b:current_syntax	plugged/tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:current_syntax	plugged/vimgdb_runtime/syntax/gdb.vim	/^let b:current_syntax = "gdb"$/;"	v
b:current_syntax	plugged/vimgdb_runtime/syntax/gdbvar.vim	/^let b:current_syntax = "gdbvar"$/;"	v
b:current_syntax	plugged/vimgdb_runtime/syntax/gdbvim.vim	/^let b:current_syntax = "gdbvim"$/;"	v
b:did_indent	plugged/PIV/indent/php.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-python-pep8-indent/indent/python.vim	/^let b:did_indent = 1$/;"	v
b:match_skip	plugged/PIV/after/ftplugin/php.vim	/^    let b:match_skip = 's:comment\\|string'$/;"	v
b:match_words	plugged/PIV/after/ftplugin/php.vim	/^    let b:match_words = '<?\\(php\\)\\?:?>,\\<switch\\>:\\<endswitch\\>,' .$/;"	v
b:optionsset	plugged/PIV/indent/php.vim	/^let b:optionsset = 0$/;"	v
balance_matchpairs	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:balance_matchpairs(char) "{{{$/;"	f
bar	autoload/plug.vim	/^function! s:bar()$/;"	f
base.__empty	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__empty(...)$/;"	f
base.__execute	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__execute(command)$/;"	f
base.__execute__	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__execute__(cmd)$/;"	f
base.__finish	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__finish()$/;"	f
base.__get_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__get_keymapping()$/;"	f
base.__init	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__init()$/;"	f
base.__init_variables	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__init_variables()$/;"	f
base.__input	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__input(input, ...)$/;"	f
base.__input_char	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__input_char(char)$/;"	f
base.__inputting	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__inputting()$/;"	f
base.__is_exit	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__is_exit()$/;"	f
base.__keymapping__	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__keymapping__()$/;"	f
base.__main	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__main(...)$/;"	f
base.__update	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__update()$/;"	f
base.backward	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.backward()$/;"	f
base.backward	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.backward()$/;"	f
base.backward_word	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.backward_word(...)$/;"	f
base.call	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.call(func, ...)$/;"	f
base.callevent	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.callevent(event)$/;"	f
base.char	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.char()$/;"	f
base.cmap	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cmap(lhs, rhs)$/;"	f
base.cnoremap	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cnoremap(lhs, rhs)$/;"	f
base.connect	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.connect(module, ...)$/;"	f
base.connect	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.connect(slot)$/;"	f
base.cunmap	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cunmap(lhs)$/;"	f
base.disable_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.disable_keymapping()$/;"	f
base.disconnect	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.disconnect(name)$/;"	f
base.disconnect	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.disconnect(slot)$/;"	f
base.disconnect_by	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.disconnect_by(expr)$/;"	f
base.draw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.draw()$/;"	f
base.enable_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.enable_keymapping()$/;"	f
base.execute	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.execute(...)$/;"	f
base.exit	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.exit(...)$/;"	f
base.exit_code	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.exit_code()$/;"	f
base.find_by	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.find_by(expr)$/;"	f
base.find_first_by	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.find_first_by(expr)$/;"	f
base.forward	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.forward()$/;"	f
base.forward	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.forward()$/;"	f
base.get	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get(...)$/;"	f
base.get_module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_module(name)$/;"	f
base.get_prompt	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_prompt()$/;"	f
base.get_slot	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.get_slot(val)$/;"	f
base.get_suffix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_suffix()$/;"	f
base.get_tap_key	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_tap_key()$/;"	f
base.getchar	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getchar(...)$/;"	f
base.getline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getline()$/;"	f
base.getpos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getpos()$/;"	f
base.hl_cursor_off	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_off()$/;"	f
base.hl_cursor_on	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_on()$/;"	f
base.input	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.input(str)$/;"	f
base.input_key	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key()$/;"	f
base.input_key_stack	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack()$/;"	f
base.input_key_stack_pop	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_pop()$/;"	f
base.input_key_stack_string	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_string()$/;"	f
base.insert	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.insert(word, ...)$/;"	f
base.is_enable_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_enable_keymapping()$/;"	f
base.is_exit	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_exit()$/;"	f
base.is_input	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_input(key, ...)$/;"	f
base.keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.keymapping()$/;"	f
base.length	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.length()$/;"	f
base.next	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.next()$/;"	f
base.pos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.pos()$/;"	f
base.pos_char	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.pos_char()$/;"	f
base.prev	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.prev()$/;"	f
base.remove	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove(index)$/;"	f
base.remove_next	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_next()$/;"	f
base.remove_pos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_pos()$/;"	f
base.remove_prev	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_prev()$/;"	f
base.set	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set(item)$/;"	f
base.set_input_key_stack	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_input_key_stack(stack)$/;"	f
base.set_pos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set_pos(pos)$/;"	f
base.set_prompt	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_prompt(prompt)$/;"	f
base.set_str	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set_str(str)$/;"	f
base.set_suffix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_suffix(str)$/;"	f
base.setchar	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setchar(char, ...)$/;"	f
base.setline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setline(line)$/;"	f
base.setpos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setpos(pos)$/;"	f
base.slots	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.slots()$/;"	f
base.sort_by	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.sort_by(expr)$/;"	f
base.start	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.start(...)$/;"	f
base.str	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.str()$/;"	f
base.tap_keyinput	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.tap_keyinput(key)$/;"	f
base.untap_keyinput	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.untap_keyinput(key)$/;"	f
base.variables.modules.get_slot	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	function! s:base.variables.modules.get_slot(val)$/;"	f
bb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal bb$/;"	m
beep	plugged/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
bh	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal bh$/;"	m
binary_search	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
bookmarkListContent	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! s:bookmarkListContent(clv)$/;"	f
break	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
bufferEntry	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! s:bufferEntry(bufnr)$/;"	f
bufferListContent	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! s:bufferListContent(clv)$/;"	f
buffunc	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buffunc(e)$/;"	f
buftab	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f
bufwins	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f
buildpat	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f
byfname	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:byfname()$/;"	f
cS	plugged/vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
cachefile	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:cachefile()$/;"	f
call	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:call(list, func, ...)$/;"	f
capture	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:capture(name)$/;"	f
capture	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:capture(...)$/;"	f
capture	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
capture_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:capture_list(...)$/;"	f
chCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node)$/;"	f
chRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node)$/;"	f
changelist	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:changelist(bufnr)$/;"	f
changesurround	plugged/vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
char_range	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
checkbuf	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:checkbuf()$/;"	f
checkout	autoload/plug.vim	/^function! s:checkout(plugs)$/;"	f
chknearby	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:chknearby(pat)$/;"	f
choices	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f
chop	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f
clean	autoload/plug.vim	/^function! s:clean(force)$/;"	f
clear	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:clear(list) abort$/;"	f
closeChildren	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f
closematch	plugged/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
cluster	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! s:cluster()$/;"	f
cmdheight.get	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.get()$/;"	f
cmdheight.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.restore()$/;"	f
cmdheight.save	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.save()$/;"	f
codecs	plugged/syntastic/syntax_checkers/python/codec.py	/^import codecs$/;"	i
collectKeysInfo	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^function! s:collectKeysInfo(mapName)$/;"	f
colors_name	plugged/vim-colors-solarized/colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
combinations	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
comma	plugged/delimitMate/Makefile	/^comma    := ,$/;"	m
command	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:command(cmd, ...)$/;"	f
commands	plugged/delimitMate/test/expand_cr.vim	/^  let commands = []$/;"	v
commands	plugged/delimitMate/test/expand_cr.vim	/^let commands = []$/;"	v
compareEntries	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! s:compareEntries(a, b)$/;"	f
compareJumps	plugged/vim-ctrlspace/autoload/ctrlspace/jumps.vim	/^function! s:compareJumps(a, b)$/;"	f
compare_git_uri	autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
compare_pos	plugged/vim-expand-region/autoload/expand_region.vim	/^function! s:compare_pos(l, r)$/;"	f
comparent	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comparent(...)$/;"	f
compfnlen	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f
compmatlen	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f
compmreb	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmreb(...)$/;"	f
compmref	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmref(...)$/;"	f
comptime	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comptime(...)$/;"	f
computeLowestNoises	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! s:computeLowestNoises(source)$/;"	f
compute_candidates	plugged/vim-expand-region/autoload/expand_region.vim	/^function! s:compute_candidates(cursor_pos)$/;"	f
compval	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compval(...)$/;"	f
compval	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:compval(...)$/;"	f
concat	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:concat(list) abort$/;"	f
conj	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
cons	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
contentFromFileEngine	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! s:contentFromFileEngine()$/;"	f
contentSource	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! s:contentSource()$/;"	f
context	plugged/vim-ctrlspace/go/file_engine.go	/^var ($/;"	v
convertMigemo	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertMigemo(re) "{{{$/;"	f
convertRegep	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertRegep(input) "{{{$/;"	f
convertSmartcase	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertSmartcase(re, char) "{{{$/;"	f
convertSmartsign	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertSmartsign(chars) "{{{$/;"	f
convert_t_regexp	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convert_t_regexp(re, direction) "{{{$/;"	f
copyOrMoveSelectedBufferIntoTab	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! s:copyOrMoveSelectedBufferIntoTab(tab, move)$/;"	f
cr	plugged/supertab/plugin/supertab.vim	/^      let cr = !(map =~? '\\(^\\|[^)]\\)<cr>' || map =~ 'ExpandCr')$/;"	v
create	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:create(targets, keys) abort$/;"	f
createBookmarkJumps	plugged/vim-ctrlspace/autoload/ctrlspace/jumps.vim	/^function! s:createBookmarkJumps()$/;"	f
createBufferJumps	plugged/vim-ctrlspace/autoload/ctrlspace/jumps.vim	/^function! s:createBufferJumps()$/;"	f
createStatusTabline	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! s:createStatusTabline()$/;"	f
createTabJumps	plugged/vim-ctrlspace/autoload/ctrlspace/jumps.vim	/^function! s:createTabJumps()$/;"	f
create_win2pos2hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:create_win2pos2hint(hint_dict) abort$/;"	f
cs	plugged/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
ctrlp#acceptfile	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#acceptfile(...)$/;"	f
ctrlp#bookmarkdir#accept	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f
ctrlp#bookmarkdir#add	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(dir, ...)$/;"	f
ctrlp#bookmarkdir#id	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f
ctrlp#bookmarkdir#init	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f
ctrlp#bookmarkdir#remove	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f
ctrlp#buffers	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f
ctrlp#buffertag#accept	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f
ctrlp#buffertag#cmd	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f
ctrlp#buffertag#exit	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f
ctrlp#buffertag#init	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f
ctrlp#buffertag#opts	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f
ctrlp#call	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f
ctrlp#changes#accept	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f
ctrlp#changes#cmd	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f
ctrlp#changes#exit	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#exit()$/;"	f
ctrlp#changes#init	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f
ctrlp#clr	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f
ctrlp#clra	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clra()$/;"	f
ctrlp#complen	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f
ctrlp#dir#accept	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f
ctrlp#dir#id	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#id()$/;"	f
ctrlp#dir#init	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f
ctrlp#dirnfile	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f
ctrlp#exit	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#exit()$/;"	f
ctrlp#files	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#files()$/;"	f
ctrlp#getcline	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f
ctrlp#getmarkedlist	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f
ctrlp#getvar	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getvar(var)$/;"	f
ctrlp#hicheck	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f
ctrlp#igncwd	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f
ctrlp#init	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f
ctrlp#j2l	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f
ctrlp#line#accept	plugged/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#accept(mode, str)$/;"	f
ctrlp#line#cmd	plugged/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#cmd(mode, ...)$/;"	f
ctrlp#line#init	plugged/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#init(bufnr)$/;"	f
ctrlp#mixed#id	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f
ctrlp#mixed#init	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f
ctrlp#modfilecond	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f
ctrlp#mrufiles#add	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f
ctrlp#mrufiles#bufs	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f
ctrlp#mrufiles#cachefile	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f
ctrlp#mrufiles#init	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f
ctrlp#mrufiles#list	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f
ctrlp#mrufiles#opts	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f
ctrlp#mrufiles#refresh	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f
ctrlp#mrufiles#remove	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f
ctrlp#mrufiles#tgrel	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#tgrel()$/;"	f
ctrlp#normcmd	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f
ctrlp#nosy	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f
ctrlp#progress	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f
ctrlp#prtclear	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f
ctrlp#quickfix#accept	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f
ctrlp#quickfix#id	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f
ctrlp#quickfix#init	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f
ctrlp#recordhist	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f
ctrlp#rmbasedir	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f
ctrlp#rtscript#id	plugged/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f
ctrlp#rtscript#init	plugged/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f
ctrlp#setdir	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f
ctrlp#setlcdir	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f
ctrlp#setlines	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f
ctrlp#statusline	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f
ctrlp#switchtype	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f
ctrlp#syntax	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f
ctrlp#tabcount	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f
ctrlp#tag#accept	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f
ctrlp#tag#enter	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#enter()$/;"	f
ctrlp#tag#id	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#id()$/;"	f
ctrlp#tag#init	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#init()$/;"	f
ctrlp#undo#accept	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f
ctrlp#undo#enter	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#enter()$/;"	f
ctrlp#undo#exit	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#exit()$/;"	f
ctrlp#undo#id	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#id()$/;"	f
ctrlp#undo#init	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#init()$/;"	f
ctrlp#utils#cachedir	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f
ctrlp#utils#cachefile	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f
ctrlp#utils#fnesc	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f
ctrlp#utils#glob	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f
ctrlp#utils#globpath	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f
ctrlp#utils#lash	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#lash()$/;"	f
ctrlp#utils#mkdir	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f
ctrlp#utils#opts	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#opts()$/;"	f
ctrlp#utils#readfile	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f
ctrlp#utils#writecache	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f
ctrlspace#api#BufNr	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! ctrlspace#api#BufNr()$/;"	f
ctrlspace#api#BufferList	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! ctrlspace#api#BufferList(tabnr)$/;"	f
ctrlspace#api#Buffers	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! ctrlspace#api#Buffers(tabnr)$/;"	f
ctrlspace#api#Guitablabel	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! ctrlspace#api#Guitablabel()$/;"	f
ctrlspace#api#Statusline	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! ctrlspace#api#Statusline()$/;"	f
ctrlspace#api#StatuslineModeSegment	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! ctrlspace#api#StatuslineModeSegment(...)$/;"	f
ctrlspace#api#StatuslineTabSegment	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! ctrlspace#api#StatuslineTabSegment()$/;"	f
ctrlspace#api#TabBuffersNumber	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! ctrlspace#api#TabBuffersNumber(tabnr)$/;"	f
ctrlspace#api#TabList	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! ctrlspace#api#TabList()$/;"	f
ctrlspace#api#TabModified	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! ctrlspace#api#TabModified(tabnr)$/;"	f
ctrlspace#api#TabTitle	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! ctrlspace#api#TabTitle(tabnr, bufnr, bufname)$/;"	f
ctrlspace#api#Tabline	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^function! ctrlspace#api#Tabline()$/;"	f
ctrlspace#bookmarks#AddFirstBookmark	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^function! ctrlspace#bookmarks#AddFirstBookmark()$/;"	f
ctrlspace#bookmarks#AddNewBookmark	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^function! ctrlspace#bookmarks#AddNewBookmark(...)$/;"	f
ctrlspace#bookmarks#AddToBookmarks	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^function! ctrlspace#bookmarks#AddToBookmarks(directory, name)$/;"	f
ctrlspace#bookmarks#Bookmarks	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^function! ctrlspace#bookmarks#Bookmarks()$/;"	f
ctrlspace#bookmarks#ChangeBookmarkDirectory	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^function! ctrlspace#bookmarks#ChangeBookmarkDirectory(nr)$/;"	f
ctrlspace#bookmarks#ChangeBookmarkName	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^function! ctrlspace#bookmarks#ChangeBookmarkName(nr)$/;"	f
ctrlspace#bookmarks#FindActiveBookmark	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^function! ctrlspace#bookmarks#FindActiveBookmark()$/;"	f
ctrlspace#bookmarks#GoToBookmark	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^function! ctrlspace#bookmarks#GoToBookmark(nr)$/;"	f
ctrlspace#bookmarks#RemoveBookmark	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^function! ctrlspace#bookmarks#RemoveBookmark(nr)$/;"	f
ctrlspace#bookmarks#SetBookmarks	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^function! ctrlspace#bookmarks#SetBookmarks(value)$/;"	f
ctrlspace#buffers#AddBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#AddBuffer()$/;"	f
ctrlspace#buffers#Buffers	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#Buffers(tabnr)$/;"	f
ctrlspace#buffers#CloseBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#CloseBuffer()$/;"	f
ctrlspace#buffers#CopyBufferToTab	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#CopyBufferToTab(tab)$/;"	f
ctrlspace#buffers#DeleteBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#DeleteBuffer()$/;"	f
ctrlspace#buffers#DeleteForeignBuffers	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#DeleteForeignBuffers(internal)$/;"	f
ctrlspace#buffers#DeleteHiddenNonameBuffers	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#DeleteHiddenNonameBuffers(internal)$/;"	f
ctrlspace#buffers#DetachBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#DetachBuffer()$/;"	f
ctrlspace#buffers#GoToBufferOrFile	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#GoToBufferOrFile(direction)$/;"	f
ctrlspace#buffers#Init	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#Init()$/;"	f
ctrlspace#buffers#LoadBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#LoadBuffer(...)$/;"	f
ctrlspace#buffers#LoadManyBuffers	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#LoadManyBuffers(...)$/;"	f
ctrlspace#buffers#MoveBufferToTab	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#MoveBufferToTab(tab)$/;"	f
ctrlspace#buffers#SelectedBufferName	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#SelectedBufferName()$/;"	f
ctrlspace#buffers#ZoomBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! ctrlspace#buffers#ZoomBuffer(nr, ...)$/;"	f
ctrlspace#context#Configuration	plugged/vim-ctrlspace/autoload/ctrlspace/context.vim	/^function! ctrlspace#context#Configuration()$/;"	f
ctrlspace#context#PluginBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/context.vim	/^function! ctrlspace#context#PluginBuffer()$/;"	f
ctrlspace#context#PluginFolder	plugged/vim-ctrlspace/autoload/ctrlspace/context.vim	/^function! ctrlspace#context#PluginFolder()$/;"	f
ctrlspace#context#Separator	plugged/vim-ctrlspace/autoload/ctrlspace/context.vim	/^function! ctrlspace#context#Separator()$/;"	f
ctrlspace#context#SetPluginBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/context.vim	/^function! ctrlspace#context#SetPluginBuffer(value)$/;"	f
ctrlspace#context#SymbolSizes	plugged/vim-ctrlspace/autoload/ctrlspace/context.vim	/^function! ctrlspace#context#SymbolSizes()$/;"	f
ctrlspace#engine#CompareByIndex	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! ctrlspace#engine#CompareByIndex(a, b)$/;"	f
ctrlspace#engine#CompareByNoiseAndText	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! ctrlspace#engine#CompareByNoiseAndText(a, b)$/;"	f
ctrlspace#engine#CompareByText	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! ctrlspace#engine#CompareByText(a, b)$/;"	f
ctrlspace#engine#Content	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! ctrlspace#engine#Content()$/;"	f
ctrlspace#files#ClearAll	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#ClearAll()$/;"	f
ctrlspace#files#CollectFiles	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#CollectFiles()$/;"	f
ctrlspace#files#CopyFileOrBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#CopyFileOrBuffer()$/;"	f
ctrlspace#files#EditFile	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#EditFile()$/;"	f
ctrlspace#files#ExploreDirectory	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#ExploreDirectory()$/;"	f
ctrlspace#files#Files	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#Files()$/;"	f
ctrlspace#files#GoToDirectory	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#GoToDirectory(back)$/;"	f
ctrlspace#files#Items	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#Items()$/;"	f
ctrlspace#files#LoadFile	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#LoadFile(...)$/;"	f
ctrlspace#files#LoadManyFiles	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#LoadManyFiles(...)$/;"	f
ctrlspace#files#RefreshFiles	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#RefreshFiles()$/;"	f
ctrlspace#files#RemoveFile	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#RemoveFile()$/;"	f
ctrlspace#files#RenameFileOrBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#RenameFileOrBuffer()$/;"	f
ctrlspace#files#SelectedFileName	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#SelectedFileName()$/;"	f
ctrlspace#files#ZoomFile	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! ctrlspace#files#ZoomFile()$/;"	f
ctrlspace#help#AddMapping	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^function! ctrlspace#help#AddMapping(funcName, mapName, entry)$/;"	f
ctrlspace#help#CloseExternalWindow	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^function! ctrlspace#help#CloseExternalWindow()$/;"	f
ctrlspace#help#Descriptions	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^function! ctrlspace#help#Descriptions()$/;"	f
ctrlspace#help#DisplayHelp	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^function! ctrlspace#help#DisplayHelp(fill)$/;"	f
ctrlspace#help#HelpMap	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^function! ctrlspace#help#HelpMap()$/;"	f
ctrlspace#help#OpenInNewWindow	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^function! ctrlspace#help#OpenInNewWindow()$/;"	f
ctrlspace#init#Init	plugged/vim-ctrlspace/autoload/ctrlspace/init.vim	/^function! ctrlspace#init#Init()$/;"	f
ctrlspace#jumps#IncrementJumpCounter	plugged/vim-ctrlspace/autoload/ctrlspace/jumps.vim	/^function! ctrlspace#jumps#IncrementJumpCounter()$/;"	f
ctrlspace#jumps#Jump	plugged/vim-ctrlspace/autoload/ctrlspace/jumps.vim	/^function! ctrlspace#jumps#Jump(direction)$/;"	f
ctrlspace#keys#AddMapping	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! ctrlspace#keys#AddMapping(funcName, mapName, keys)$/;"	f
ctrlspace#keys#CharacterClasses	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! ctrlspace#keys#CharacterClasses()$/;"	f
ctrlspace#keys#DefaultKey	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! ctrlspace#keys#DefaultKey()$/;"	f
ctrlspace#keys#Init	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! ctrlspace#keys#Init()$/;"	f
ctrlspace#keys#IsDefaultKey	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! ctrlspace#keys#IsDefaultKey()$/;"	f
ctrlspace#keys#KeyMap	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! ctrlspace#keys#KeyMap()$/;"	f
ctrlspace#keys#KeyNames	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! ctrlspace#keys#KeyNames()$/;"	f
ctrlspace#keys#Keypressed	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! ctrlspace#keys#Keypressed(key)$/;"	f
ctrlspace#keys#MarkKeyEscSequence	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! ctrlspace#keys#MarkKeyEscSequence()$/;"	f
ctrlspace#keys#SetDefaultMapping	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! ctrlspace#keys#SetDefaultMapping(key, action)$/;"	f
ctrlspace#keys#Undefined	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! ctrlspace#keys#Undefined(k)$/;"	f
ctrlspace#keys#bookmark#Add	plugged/vim-ctrlspace/autoload/ctrlspace/keys/bookmark.vim	/^function! ctrlspace#keys#bookmark#Add(k)$/;"	f
ctrlspace#keys#bookmark#Delete	plugged/vim-ctrlspace/autoload/ctrlspace/keys/bookmark.vim	/^function! ctrlspace#keys#bookmark#Delete(k)$/;"	f
ctrlspace#keys#bookmark#Edit	plugged/vim-ctrlspace/autoload/ctrlspace/keys/bookmark.vim	/^function! ctrlspace#keys#bookmark#Edit(k)$/;"	f
ctrlspace#keys#bookmark#GoToBookmark	plugged/vim-ctrlspace/autoload/ctrlspace/keys/bookmark.vim	/^function! ctrlspace#keys#bookmark#GoToBookmark(k)$/;"	f
ctrlspace#keys#bookmark#Init	plugged/vim-ctrlspace/autoload/ctrlspace/keys/bookmark.vim	/^function! ctrlspace#keys#bookmark#Init()$/;"	f
ctrlspace#keys#bookmark#Rename	plugged/vim-ctrlspace/autoload/ctrlspace/keys/bookmark.vim	/^function! ctrlspace#keys#bookmark#Rename(k)$/;"	f
ctrlspace#keys#buffer#CloseBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#CloseBuffer(k)$/;"	f
ctrlspace#keys#buffer#CloseManyWindows	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#CloseManyWindows(k)$/;"	f
ctrlspace#keys#buffer#CloseTab	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#CloseTab(k)$/;"	f
ctrlspace#keys#buffer#CloseWindow	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#CloseWindow(k)$/;"	f
ctrlspace#keys#buffer#CopyBufferToTab	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#CopyBufferToTab(k)$/;"	f
ctrlspace#keys#buffer#DeleteBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#DeleteBuffer(k)$/;"	f
ctrlspace#keys#buffer#DeleteForeignBuffers	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#DeleteForeignBuffers(k)$/;"	f
ctrlspace#keys#buffer#DeleteHiddenNonameBuffers	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#DeleteHiddenNonameBuffers(k)$/;"	f
ctrlspace#keys#buffer#DetachBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#DetachBuffer(k)$/;"	f
ctrlspace#keys#buffer#GoToBufferOrFile	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#GoToBufferOrFile(k)$/;"	f
ctrlspace#keys#buffer#GoToWindow	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#GoToWindow(k)$/;"	f
ctrlspace#keys#buffer#GoToWindowAndBack	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#GoToWindowAndBack(k)$/;"	f
ctrlspace#keys#buffer#Init	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#Init()$/;"	f
ctrlspace#keys#buffer#LoadBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#LoadBuffer(k)$/;"	f
ctrlspace#keys#buffer#LoadBufferSP	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#LoadBufferSP(k)$/;"	f
ctrlspace#keys#buffer#LoadBufferT	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#LoadBufferT(k)$/;"	f
ctrlspace#keys#buffer#LoadBufferVS	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#LoadBufferVS(k)$/;"	f
ctrlspace#keys#buffer#LoadManyBuffers	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#LoadManyBuffers(k)$/;"	f
ctrlspace#keys#buffer#LoadManyBuffersCT	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#LoadManyBuffersCT(k)$/;"	f
ctrlspace#keys#buffer#LoadManyBuffersSP	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#LoadManyBuffersSP(k)$/;"	f
ctrlspace#keys#buffer#LoadManyBuffersT	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#LoadManyBuffersT(k)$/;"	f
ctrlspace#keys#buffer#LoadManyBuffersVS	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#LoadManyBuffersVS(k)$/;"	f
ctrlspace#keys#buffer#MoveBufferToTab	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#MoveBufferToTab(k)$/;"	f
ctrlspace#keys#buffer#MoveTab	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#MoveTab(k)$/;"	f
ctrlspace#keys#buffer#NewTabLabel	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#NewTabLabel(k)$/;"	f
ctrlspace#keys#buffer#NewWorkspace	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#NewWorkspace(k)$/;"	f
ctrlspace#keys#buffer#RemoveTabLabel	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#RemoveTabLabel(k)$/;"	f
ctrlspace#keys#buffer#SearchParentDirectory	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#SearchParentDirectory(k)$/;"	f
ctrlspace#keys#buffer#SearchParentDirectoryInFile	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#SearchParentDirectoryInFile(k)$/;"	f
ctrlspace#keys#buffer#SwitchTab	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#SwitchTab(k)$/;"	f
ctrlspace#keys#buffer#ToggleAllMode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#ToggleAllMode(k)$/;"	f
ctrlspace#keys#buffer#ToggleAllModeAndSearch	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#ToggleAllModeAndSearch(k)$/;"	f
ctrlspace#keys#buffer#VisibleMode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#VisibleMode(k)$/;"	f
ctrlspace#keys#buffer#ZoomMode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! ctrlspace#keys#buffer#ZoomMode(k)$/;"	f
ctrlspace#keys#common#BackOrClearSearch	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#BackOrClearSearch(k)$/;"	f
ctrlspace#keys#common#Bottom	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#Bottom(k)$/;"	f
ctrlspace#keys#common#Close	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#Close(k)$/;"	f
ctrlspace#keys#common#Down	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#Down(k)$/;"	f
ctrlspace#keys#common#DownArrow	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#DownArrow(k)$/;"	f
ctrlspace#keys#common#End	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#End(k)$/;"	f
ctrlspace#keys#common#EnterSearchMode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#EnterSearchMode(k)$/;"	f
ctrlspace#keys#common#HalfScrollDown	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#HalfScrollDown(k)$/;"	f
ctrlspace#keys#common#HalfScrollUp	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#HalfScrollUp(k)$/;"	f
ctrlspace#keys#common#Home	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#Home(k)$/;"	f
ctrlspace#keys#common#Init	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#Init()$/;"	f
ctrlspace#keys#common#LeftMouse2	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#LeftMouse2(k)$/;"	f
ctrlspace#keys#common#LeftRelease	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#LeftRelease(k)$/;"	f
ctrlspace#keys#common#MouseDown	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#MouseDown(k)$/;"	f
ctrlspace#keys#common#MouseUp	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#MouseUp(k)$/;"	f
ctrlspace#keys#common#Next	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#Next(k)$/;"	f
ctrlspace#keys#common#PageDown	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#PageDown(k)$/;"	f
ctrlspace#keys#common#PageUp	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#PageUp(k)$/;"	f
ctrlspace#keys#common#Previous	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#Previous(k)$/;"	f
ctrlspace#keys#common#PreviousCR	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#PreviousCR(k)$/;"	f
ctrlspace#keys#common#Quit	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#Quit(k)$/;"	f
ctrlspace#keys#common#RestoreNextSearch	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#RestoreNextSearch(k)$/;"	f
ctrlspace#keys#common#RestorePreviousSearch	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#RestorePreviousSearch(k)$/;"	f
ctrlspace#keys#common#ScrollDown	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ScrollDown(k)$/;"	f
ctrlspace#keys#common#ScrollUp	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ScrollUp(k)$/;"	f
ctrlspace#keys#common#ToggleBookmarkMode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ToggleBookmarkMode(k)$/;"	f
ctrlspace#keys#common#ToggleBookmarkModeAndSearch	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ToggleBookmarkModeAndSearch(k)$/;"	f
ctrlspace#keys#common#ToggleBufferMode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ToggleBufferMode(k)$/;"	f
ctrlspace#keys#common#ToggleBufferModeAndSearch	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ToggleBufferModeAndSearch(k)$/;"	f
ctrlspace#keys#common#ToggleFileMode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ToggleFileMode(k)$/;"	f
ctrlspace#keys#common#ToggleFileModeAndSearch	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ToggleFileModeAndSearch(k)$/;"	f
ctrlspace#keys#common#ToggleHelp	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ToggleHelp(k)$/;"	f
ctrlspace#keys#common#ToggleTabMode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ToggleTabMode(k)$/;"	f
ctrlspace#keys#common#ToggleTabModeAndSearch	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ToggleTabModeAndSearch(k)$/;"	f
ctrlspace#keys#common#ToggleWorkspaceMode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ToggleWorkspaceMode(k)$/;"	f
ctrlspace#keys#common#ToggleWorkspaceModeAndSearch	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#ToggleWorkspaceModeAndSearch(k)$/;"	f
ctrlspace#keys#common#Top	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#Top(k)$/;"	f
ctrlspace#keys#common#Up	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#Up(k)$/;"	f
ctrlspace#keys#common#UpArrow	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! ctrlspace#keys#common#UpArrow(k)$/;"	f
ctrlspace#keys#file#CopyFileOrBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#CopyFileOrBuffer(k)$/;"	f
ctrlspace#keys#file#EditFile	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#EditFile(k)$/;"	f
ctrlspace#keys#file#ExploreDirectory	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#ExploreDirectory(k)$/;"	f
ctrlspace#keys#file#GoToDirectory	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#GoToDirectory(k)$/;"	f
ctrlspace#keys#file#Init	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#Init()$/;"	f
ctrlspace#keys#file#LoadFile	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#LoadFile(k)$/;"	f
ctrlspace#keys#file#LoadFileSP	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#LoadFileSP(k)$/;"	f
ctrlspace#keys#file#LoadFileT	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#LoadFileT(k)$/;"	f
ctrlspace#keys#file#LoadFileVS	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#LoadFileVS(k)$/;"	f
ctrlspace#keys#file#LoadManyFiles	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#LoadManyFiles(k)$/;"	f
ctrlspace#keys#file#LoadManyFilesCT	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#LoadManyFilesCT(k)$/;"	f
ctrlspace#keys#file#LoadManyFilesSP	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#LoadManyFilesSP(k)$/;"	f
ctrlspace#keys#file#LoadManyFilesT	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#LoadManyFilesT(k)$/;"	f
ctrlspace#keys#file#LoadManyFilesVS	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#LoadManyFilesVS(k)$/;"	f
ctrlspace#keys#file#Refresh	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#Refresh(k)$/;"	f
ctrlspace#keys#file#RemoveFile	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#RemoveFile(k)$/;"	f
ctrlspace#keys#file#RenameFileOrBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#RenameFileOrBuffer(k)$/;"	f
ctrlspace#keys#file#SearchParentDirectory	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#SearchParentDirectory(k)$/;"	f
ctrlspace#keys#file#ZoomMode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^function! ctrlspace#keys#file#ZoomMode(k)$/;"	f
ctrlspace#keys#help#Bottom	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#Bottom(k)$/;"	f
ctrlspace#keys#help#Down	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#Down(k)$/;"	f
ctrlspace#keys#help#DownArrow	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#DownArrow(k)$/;"	f
ctrlspace#keys#help#End	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#End(k)$/;"	f
ctrlspace#keys#help#HalfScrollDown	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#HalfScrollDown(k)$/;"	f
ctrlspace#keys#help#HalfScrollUp	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#HalfScrollUp(k)$/;"	f
ctrlspace#keys#help#Home	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#Home(k)$/;"	f
ctrlspace#keys#help#Init	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#Init()$/;"	f
ctrlspace#keys#help#LeftMouse2	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#LeftMouse2(k)$/;"	f
ctrlspace#keys#help#LeftRelease	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#LeftRelease(k)$/;"	f
ctrlspace#keys#help#MouseDown	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#MouseDown(k)$/;"	f
ctrlspace#keys#help#MouseUp	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#MouseUp(k)$/;"	f
ctrlspace#keys#help#OpenInNewWindow	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#OpenInNewWindow(k)$/;"	f
ctrlspace#keys#help#PageDown	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#PageDown(k)$/;"	f
ctrlspace#keys#help#PageUp	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#PageUp(k)$/;"	f
ctrlspace#keys#help#ScrollDown	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#ScrollDown(k)$/;"	f
ctrlspace#keys#help#ScrollUp	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#ScrollUp(k)$/;"	f
ctrlspace#keys#help#Top	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#Top(k)$/;"	f
ctrlspace#keys#help#Up	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#Up(k)$/;"	f
ctrlspace#keys#help#UpArrow	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! ctrlspace#keys#help#UpArrow(k)$/;"	f
ctrlspace#keys#nop#Init	plugged/vim-ctrlspace/autoload/ctrlspace/keys/nop.vim	/^function! ctrlspace#keys#nop#Init()$/;"	f
ctrlspace#keys#nop#ToggleAllMode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/nop.vim	/^function! ctrlspace#keys#nop#ToggleAllMode(k)$/;"	f
ctrlspace#keys#nop#ToggleAllModeAndSearch	plugged/vim-ctrlspace/autoload/ctrlspace/keys/nop.vim	/^function! ctrlspace#keys#nop#ToggleAllModeAndSearch(k)$/;"	f
ctrlspace#keys#search#AddLetter	plugged/vim-ctrlspace/autoload/ctrlspace/keys/search.vim	/^function! ctrlspace#keys#search#AddLetter(k)$/;"	f
ctrlspace#keys#search#ClearLetters	plugged/vim-ctrlspace/autoload/ctrlspace/keys/search.vim	/^function! ctrlspace#keys#search#ClearLetters(k)$/;"	f
ctrlspace#keys#search#ClearOrRemoveLetter	plugged/vim-ctrlspace/autoload/ctrlspace/keys/search.vim	/^function! ctrlspace#keys#search#ClearOrRemoveLetter(k)$/;"	f
ctrlspace#keys#search#Init	plugged/vim-ctrlspace/autoload/ctrlspace/keys/search.vim	/^function! ctrlspace#keys#search#Init()$/;"	f
ctrlspace#keys#search#SwitchOff	plugged/vim-ctrlspace/autoload/ctrlspace/keys/search.vim	/^function! ctrlspace#keys#search#SwitchOff(k)$/;"	f
ctrlspace#keys#search#SwitchOffCR	plugged/vim-ctrlspace/autoload/ctrlspace/keys/search.vim	/^function! ctrlspace#keys#search#SwitchOffCR(k)$/;"	f
ctrlspace#keys#search#SwitchOffSpace	plugged/vim-ctrlspace/autoload/ctrlspace/keys/search.vim	/^function! ctrlspace#keys#search#SwitchOffSpace(k)$/;"	f
ctrlspace#keys#tab#AddTab	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^function! ctrlspace#keys#tab#AddTab(k)$/;"	f
ctrlspace#keys#tab#CloseTab	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^function! ctrlspace#keys#tab#CloseTab(k)$/;"	f
ctrlspace#keys#tab#CollectForeignBuffers	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^function! ctrlspace#keys#tab#CollectForeignBuffers(k)$/;"	f
ctrlspace#keys#tab#CollectUnsavedBuffers	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^function! ctrlspace#keys#tab#CollectUnsavedBuffers(k)$/;"	f
ctrlspace#keys#tab#CopyTab	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^function! ctrlspace#keys#tab#CopyTab(k)$/;"	f
ctrlspace#keys#tab#GoToTab	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^function! ctrlspace#keys#tab#GoToTab(k)$/;"	f
ctrlspace#keys#tab#Init	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^function! ctrlspace#keys#tab#Init()$/;"	f
ctrlspace#keys#tab#MoveTab	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^function! ctrlspace#keys#tab#MoveTab(k)$/;"	f
ctrlspace#keys#tab#NewTabLabel	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^function! ctrlspace#keys#tab#NewTabLabel(k)$/;"	f
ctrlspace#keys#tab#NewWorkspace	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^function! ctrlspace#keys#tab#NewWorkspace(k)$/;"	f
ctrlspace#keys#tab#RemoveTabLabel	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^function! ctrlspace#keys#tab#RemoveTabLabel(k)$/;"	f
ctrlspace#keys#tab#SwitchTab	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^function! ctrlspace#keys#tab#SwitchTab(k)$/;"	f
ctrlspace#keys#workspace#Append	plugged/vim-ctrlspace/autoload/ctrlspace/keys/workspace.vim	/^function! ctrlspace#keys#workspace#Append(k)$/;"	f
ctrlspace#keys#workspace#Delete	plugged/vim-ctrlspace/autoload/ctrlspace/keys/workspace.vim	/^function! ctrlspace#keys#workspace#Delete(k)$/;"	f
ctrlspace#keys#workspace#Init	plugged/vim-ctrlspace/autoload/ctrlspace/keys/workspace.vim	/^function! ctrlspace#keys#workspace#Init()$/;"	f
ctrlspace#keys#workspace#LoadOrSave	plugged/vim-ctrlspace/autoload/ctrlspace/keys/workspace.vim	/^function! ctrlspace#keys#workspace#LoadOrSave(k)$/;"	f
ctrlspace#keys#workspace#NewWorkspace	plugged/vim-ctrlspace/autoload/ctrlspace/keys/workspace.vim	/^function! ctrlspace#keys#workspace#NewWorkspace(k)$/;"	f
ctrlspace#keys#workspace#Rename	plugged/vim-ctrlspace/autoload/ctrlspace/keys/workspace.vim	/^function! ctrlspace#keys#workspace#Rename(k)$/;"	f
ctrlspace#keys#workspace#ToggleSubmode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/workspace.vim	/^function! ctrlspace#keys#workspace#ToggleSubmode(k)$/;"	f
ctrlspace#modes#CurrentListView	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^function! ctrlspace#modes#CurrentListView()$/;"	f
ctrlspace#modes#Enabled	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^function! ctrlspace#modes#Enabled()$/;"	f
ctrlspace#modes#ListViews	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^function! ctrlspace#modes#ListViews()$/;"	f
ctrlspace#modes#Modes	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^function! ctrlspace#modes#Modes()$/;"	f
ctrlspace#roots#AddProjectRoot	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^function! ctrlspace#roots#AddProjectRoot(directory)$/;"	f
ctrlspace#roots#CurrentProjectRoot	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^function! ctrlspace#roots#CurrentProjectRoot()$/;"	f
ctrlspace#roots#FindProjectRoot	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^function! ctrlspace#roots#FindProjectRoot()$/;"	f
ctrlspace#roots#LastProjectRoot	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^function! ctrlspace#roots#LastProjectRoot()$/;"	f
ctrlspace#roots#ProjectRootFound	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^function! ctrlspace#roots#ProjectRootFound()$/;"	f
ctrlspace#roots#ProjectRoots	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^function! ctrlspace#roots#ProjectRoots()$/;"	f
ctrlspace#roots#RemoveProjectRoot	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^function! ctrlspace#roots#RemoveProjectRoot(directory)$/;"	f
ctrlspace#roots#SetCurrentProjectRoot	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^function! ctrlspace#roots#SetCurrentProjectRoot(value)$/;"	f
ctrlspace#roots#SetLastProjectRoot	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^function! ctrlspace#roots#SetLastProjectRoot(value)$/;"	f
ctrlspace#roots#SetProjectRoots	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^function! ctrlspace#roots#SetProjectRoots(value)$/;"	f
ctrlspace#search#AddSearchLetter	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! ctrlspace#search#AddSearchLetter(letter)$/;"	f
ctrlspace#search#AppendToSearchHistory	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! ctrlspace#search#AppendToSearchHistory()$/;"	f
ctrlspace#search#ClearSearchLetters	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! ctrlspace#search#ClearSearchLetters()$/;"	f
ctrlspace#search#ClearSearchMode	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! ctrlspace#search#ClearSearchMode()$/;"	f
ctrlspace#search#InsertSearchText	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! ctrlspace#search#InsertSearchText(text)$/;"	f
ctrlspace#search#RemoveSearchLetter	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! ctrlspace#search#RemoveSearchLetter()$/;"	f
ctrlspace#search#RestoreSearchLetters	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! ctrlspace#search#RestoreSearchLetters(direction)$/;"	f
ctrlspace#search#SearchHistoryIndex	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! ctrlspace#search#SearchHistoryIndex()$/;"	f
ctrlspace#search#SearchParentDirectoryCycle	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! ctrlspace#search#SearchParentDirectoryCycle()$/;"	f
ctrlspace#search#SwitchSearchMode	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! ctrlspace#search#SwitchSearchMode(switch)$/;"	f
ctrlspace#search#UpdateSearchResults	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! ctrlspace#search#UpdateSearchResults()$/;"	f
ctrlspace#tabs#CloseTab	plugged/vim-ctrlspace/autoload/ctrlspace/tabs.vim	/^function! ctrlspace#tabs#CloseTab()$/;"	f
ctrlspace#tabs#CollectForeignBuffers	plugged/vim-ctrlspace/autoload/ctrlspace/tabs.vim	/^function! ctrlspace#tabs#CollectForeignBuffers()$/;"	f
ctrlspace#tabs#CollectUnsavedBuffers	plugged/vim-ctrlspace/autoload/ctrlspace/tabs.vim	/^function! ctrlspace#tabs#CollectUnsavedBuffers()$/;"	f
ctrlspace#tabs#NewTabLabel	plugged/vim-ctrlspace/autoload/ctrlspace/tabs.vim	/^function! ctrlspace#tabs#NewTabLabel(tabnr)$/;"	f
ctrlspace#tabs#RemoveTabLabel	plugged/vim-ctrlspace/autoload/ctrlspace/tabs.vim	/^function! ctrlspace#tabs#RemoveTabLabel(tabnr)$/;"	f
ctrlspace#tabs#SetTabLabel	plugged/vim-ctrlspace/autoload/ctrlspace/tabs.vim	/^function! ctrlspace#tabs#SetTabLabel(tabnr, label, auto)$/;"	f
ctrlspace#ui#Confirmed	plugged/vim-ctrlspace/autoload/ctrlspace/ui.vim	/^function! ctrlspace#ui#Confirmed(msg)$/;"	f
ctrlspace#ui#DelayedMsg	plugged/vim-ctrlspace/autoload/ctrlspace/ui.vim	/^function! ctrlspace#ui#DelayedMsg(...)$/;"	f
ctrlspace#ui#GetInput	plugged/vim-ctrlspace/autoload/ctrlspace/ui.vim	/^function! ctrlspace#ui#GetInput(msg, ...)$/;"	f
ctrlspace#ui#Msg	plugged/vim-ctrlspace/autoload/ctrlspace/ui.vim	/^function! ctrlspace#ui#Msg(message)$/;"	f
ctrlspace#ui#ProceedIfModified	plugged/vim-ctrlspace/autoload/ctrlspace/ui.vim	/^function! ctrlspace#ui#ProceedIfModified()$/;"	f
ctrlspace#util#ChDir	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^function! ctrlspace#util#ChDir(dir)$/;"	f
ctrlspace#util#FilesCache	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^function! ctrlspace#util#FilesCache()$/;"	f
ctrlspace#util#GetbufvarWithDefault	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^function! ctrlspace#util#GetbufvarWithDefault(nr, name, default)$/;"	f
ctrlspace#util#Gettabvar	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^function! ctrlspace#util#Gettabvar(nr, name)$/;"	f
ctrlspace#util#GettabvarWithDefault	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^function! ctrlspace#util#GettabvarWithDefault(nr, name, default)$/;"	f
ctrlspace#util#HandleVimSettings	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^function! ctrlspace#util#HandleVimSettings(switch)$/;"	f
ctrlspace#util#NormalizeDirectory	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^function! ctrlspace#util#NormalizeDirectory(directory)$/;"	f
ctrlspace#util#SetStatusline	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^function! ctrlspace#util#SetStatusline()$/;"	f
ctrlspace#util#WorkspaceFile	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^function! ctrlspace#util#WorkspaceFile()$/;"	f
ctrlspace#window#GoToBufferListPosition	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! ctrlspace#window#GoToBufferListPosition(direction)$/;"	f
ctrlspace#window#GoToStartWindow	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! ctrlspace#window#GoToStartWindow()$/;"	f
ctrlspace#window#GoToWindow	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! ctrlspace#window#GoToWindow()$/;"	f
ctrlspace#window#Kill	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! ctrlspace#window#Kill(pluginBuffer, final)$/;"	f
ctrlspace#window#MaxHeight	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! ctrlspace#window#MaxHeight()$/;"	f
ctrlspace#window#MoveCursor	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! ctrlspace#window#MoveCursor(where)$/;"	f
ctrlspace#window#MoveSelectionBar	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! ctrlspace#window#MoveSelectionBar(where)$/;"	f
ctrlspace#window#QuitVim	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! ctrlspace#window#QuitVim()$/;"	f
ctrlspace#window#SelectedIndex	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! ctrlspace#window#SelectedIndex()$/;"	f
ctrlspace#window#Toggle	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! ctrlspace#window#Toggle(internal)$/;"	f
ctrlspace#workspaces#ActiveWorkspace	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^function! ctrlspace#workspaces#ActiveWorkspace()$/;"	f
ctrlspace#workspaces#CreateDigest	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^function! ctrlspace#workspaces#CreateDigest()$/;"	f
ctrlspace#workspaces#DeleteWorkspace	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^function! ctrlspace#workspaces#DeleteWorkspace(name)$/;"	f
ctrlspace#workspaces#LoadWorkspace	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^function! ctrlspace#workspaces#LoadWorkspace(bang, name)$/;"	f
ctrlspace#workspaces#NewWorkspace	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^function! ctrlspace#workspaces#NewWorkspace()$/;"	f
ctrlspace#workspaces#RenameWorkspace	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^function! ctrlspace#workspaces#RenameWorkspace(name)$/;"	f
ctrlspace#workspaces#SaveWorkspace	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^function! ctrlspace#workspaces#SaveWorkspace(name)$/;"	f
ctrlspace#workspaces#SelectedWorkspaceName	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^function! ctrlspace#workspaces#SelectedWorkspaceName()$/;"	f
ctrlspace#workspaces#SetActiveWorkspaceName	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^function! ctrlspace#workspaces#SetActiveWorkspaceName(name, ...)$/;"	f
ctrlspace#workspaces#SetWorkspaceNames	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^function! ctrlspace#workspaces#SetWorkspaceNames()$/;"	f
ctrlspace#workspaces#Workspaces	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^function! ctrlspace#workspaces#Workspaces()$/;"	f
cursor_idx	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:cursor_idx() "{{{$/;"	f
d	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! d$/;"	m
db1	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal db1$/;"	m
db2	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal db2$/;"	m
debug	plugged/tagbar/autoload/tagbar.vim	/^function! s:debug(msg) abort$/;"	f
deepextend	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:deepextend(expr1, expr2) abort$/;"	f
default_config	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:default_config() abort$/;"	f
default_mapping	plugged/vim-easymotion/plugin/EasyMotion.vim	/^    function! s:default_mapping(motions, do_mapping) "{{{$/;"	f
define_commands	autoload/plug.vim	/^function! s:define_commands()$/;"	f
delent	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f
deleteBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bm)$/;"	f
delimitMate	plugged/delimitMate/plugin/delimitMate.vim	/^augroup delimitMate$/;"	a
delimitMate#BS	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#BS() " {{{$/;"	f
delimitMate#ExpandReturn	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandReturn() "{{{$/;"	f
delimitMate#ExpandSpace	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandSpace() "{{{$/;"	f
delimitMate#Get	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Get(...) "{{{$/;"	f
delimitMate#IsEmptyPair	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsEmptyPair(str) "{{{$/;"	f
delimitMate#JumpAny	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpAny(...) " {{{$/;"	f
delimitMate#JumpMany	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpMany() " {{{$/;"	f
delimitMate#JumpOut	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpOut(char) "{{{$/;"	f
delimitMate#ParenDelim	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ParenDelim(right) " {{{$/;"	f
delimitMate#QuoteDelim	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#QuoteDelim(char) "{{{$/;"	f
delimitMate#Set	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Set(...) "{{{$/;"	f
delimitMate#ShouldJump	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ShouldJump(...) "{{{$/;"	f
delimitMate#SkipDelim	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#SkipDelim(char) "{{{$/;"	f
delimitMate#Test	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Test() "{{{$/;"	f
delimitMate#WithinEmptyPair	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WithinEmptyPair() "{{{$/;"	f
delimitMate_version	plugged/delimitMate/plugin/delimitMate.vim	/^let delimitMate_version = "2.8"$/;"	v
detectEngine	plugged/vim-ctrlspace/autoload/ctrlspace/context.vim	/^function! s:detectEngine()$/;"	f
dfpa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! dfpa$/;"	m
dict2list	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:dict2list(dict)$/;"	f
dictindex	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f
did_jinja_syn_inits	plugged/PIV/syntax/jinja.vim	/^    let did_jinja_syn_inits = 1$/;"	v
did_jinja_syn_inits	plugged/Vim-Jinja2-Syntax/syntax/jinja.vim	/^    let did_jinja_syn_inits = 1$/;"	v
did_python_syn_inits	plugged/python-syntax/syntax/python.vim	/^    let did_python_syn_inits = 1$/;"	v
diff	autoload/plug.vim	/^function! s:diff()$/;"	f
dircompl	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f
dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
dismrk	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dismrk()$/;"	f
displayContent	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! s:displayContent()$/;"	f
displayHelp	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp()$/;"	f
do	autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
doautocmd_user	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:doautocmd_user(prefix, command)$/;"	f
dohighlight	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dohighlight()$/;"	f
dosigns	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dosigns()$/;"	f
dosurround	plugged/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
ds	plugged/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dw1	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal dw1$/;"	m
dw2	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal dw2$/;"	m
echo	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:echo(hl, msg) abort$/;"	f
echomsg	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
edit_content	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:edit_content(content, ...) abort$/;"	f
elapsed	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:elapsed(nr)$/;"	f
emacs.keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:emacs.keymapping(cmdline)$/;"	f
empty	plugged/delimitMate/Makefile	/^empty    :=$/;"	m
ensurePath	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! s:ensurePath(file)$/;"	f
err	autoload/plug.vim	/^function! s:err(msg)$/;"	f
error	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:error(text, where)$/;"	f
error	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
esc	autoload/plug.vim	/^function! s:esc(path)$/;"	f
escape_file_searching	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_pattern	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_regexp_char	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:escape_regexp_char(char) "{{{$/;"	f
escape_special_key	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:escape_special_key(key)$/;"	f
escrtp	autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
esctagscmd	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f
evaluate	plugged/delimitMate/test/expand_cr.vim	/^let evaluate = 0$/;"	v
evaluate	plugged/delimitMate/test/expand_space.vim	/^let evaluate = 0$/;"	v
except	plugged/python-syntax/test.py	/^for while if elif else import from as try except finally and in is not or$/;"	i
excl	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:excl(fn)$/;"	f
execWorkspaceCommands	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^function! s:execWorkspaceCommands(bang, name, lines)$/;"	f
execextvar	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:execextvar(key)$/;"	f
exectags	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectags(cmd)$/;"	f
exectagsonfile	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f
existing_stab	plugged/supertab/plugin/supertab.vim	/^      let existing_stab = maparg('<s-tab>', 'i', 0, 1)$/;"	v
existing_tab	plugged/supertab/plugin/supertab.vim	/^    let existing_tab = maparg('<tab>', 'i')$/;"	v
exists	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:exists(name, ...) "{{{$/;"	f
exists	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:exists(name) abort$/;"	f
exit	plugged/syntastic/syntax_checkers/python/codec.py	/^from sys import argv, exit$/;"	i
exit	plugged/syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
expand_region	plugged/vim-expand-region/autoload/expand_region.vim	/^function! s:expand_region(mode, direction)$/;"	f
expand_region#custom_text_objects	plugged/vim-expand-region/autoload/expand_region.vim	/^function! expand_region#custom_text_objects(...)$/;"	f
expand_region#init	plugged/vim-expand-region/autoload/expand_region.vim	/^function! expand_region#init()$/;"	f
expand_region#next	plugged/vim-expand-region/autoload/expand_region.vim	/^function! expand_region#next(mode, direction)$/;"	f
expand_region#use_select_mode	plugged/vim-expand-region/autoload/expand_region.vim	/^function! expand_region#use_select_mode()$/;"	f
expect	plugged/delimitMate/test/expand_cr.vim	/^    let expect = 0$/;"	v
expect	plugged/delimitMate/test/expand_cr.vim	/^    let expect = 1$/;"	v
expect	plugged/delimitMate/test/expand_cr.vim	/^let expect = 0$/;"	v
expect	plugged/delimitMate/test/expand_space.vim	/^    let expect = 0$/;"	v
expect	plugged/delimitMate/test/expand_space.vim	/^    let expect = 1$/;"	v
expect	plugged/delimitMate/test/expand_space.vim	/^let expect = 0$/;"	v
expected	plugged/delimitMate/test/expand_cr.vim	/^    let expected = []$/;"	v
expected	plugged/delimitMate/test/expand_space.vim	/^    let expected = []$/;"	v
expr_map	plugged/supertab/plugin/supertab.vim	/^      let expr_map = has_key(map_dict, 'expr') && map_dict.expr$/;"	v
expr_map	plugged/supertab/plugin/supertab.vim	/^      let expr_map = maparg('<cr>', 'i') =~? '\\<cr>'$/;"	v
expr_map	plugged/supertab/plugin/supertab.vim	/^    let expr_map = 0$/;"	v
extend	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! s:extend()$/;"	f
extend	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:extend(dict, src)$/;"	f
extract_name	autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
extractafter	plugged/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	plugged/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
f	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map f <Plug>(easymotion-f)$/;"	m
f	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        omap f <Plug>(easymotion-f)$/;"	m
f)	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal f)$/;"	m
f/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map f\/ <Plug>(easymotion-fn)$/;"	m
f1	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal f1$/;"	m
f:	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal f:$/;"	m
f;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal f;$/;"	m
f;a	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal f;a$/;"	m
fH	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fH$/;"	m
fHa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fHa$/;"	m
f^	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal f^$/;"	m
faa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal faa$/;"	m
fallback_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^fallback_opts() ->$/;"	f
fb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fb$/;"	m
fba	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fba$/;"	m
fd	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fd$/;"	m
fh	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fh$/;"	m
fha	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fha$/;"	m
fhb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fhb$/;"	m
fileExplorer	plugged/winmanager_23/plugin/winmanager.vim	/^	augroup fileExplorer$/;"	a
fileListContent	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! s:fileListContent(clv)$/;"	f
fillBufferSpace	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! s:fillBufferSpace()$/;"	f
filler	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! s:filler()$/;"	f
filter	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:filter(tags)$/;"	f
finally	plugged/python-syntax/test.py	/^for while if elif else import from as try except finally and in is not or$/;"	i
find	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
findAndRevealPath	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath()$/;"	f
findLowestSearchNoise	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! s:findLowestSearchNoise(text)$/;"	f
findMotion	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:findMotion(num_strokes, direction) "{{{$/;"	f
findSubsequence	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! s:findSubsequence(text, offset)$/;"	f
findSubsequence	plugged/vim-ctrlspace/go/file_engine.go	/^func (item *FileItem) findSubsequence(offset int) (int, []int) {$/;"	f
find_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_indices	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_last_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_name	autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
find_opening_paren	plugged/vim-python-pep8-indent/indent/python.vim	/^function! s:find_opening_paren(...)$/;"	f
find_start_of_block	plugged/vim-python-pep8-indent/indent/python.vim	/^function! s:find_start_of_block(lnum, types)$/;"	f
find_start_of_multiline_statement	plugged/vim-python-pep8-indent/indent/python.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
findcommon	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f
findcount	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:findcount(str)$/;"	f
findroot	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f
finish	autoload/plug.vim	/^function! s:finish(pull)$/;"	f
finish_bindings	autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
fixindent	plugged/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
flatten	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:flatten(tree, cur)$/;"	f
flatten	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flatten_html	plugged/PIV/bin/phpdoc	/^function flatten_html($str)$/;"	f
flushTextBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^function! s:flushTextBuffer()$/;"	f
fm	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fm$/;"	m
fnesc	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:fnesc(...)$/;"	f
foa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal foa$/;"	m
foldl	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldr	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
forgetBuffersInAllTabs	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! s:forgetBuffersInAllTabs(numbers)$/;"	f
format	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:format(...)$/;"	f
format_git_log	autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
format_message	autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
formatline	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:formatline(str)$/;"	f
formatul	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:formatul(...)$/;"	f
frozenset	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:frozenset(...) abort$/;"	f
functionname	plugged/python-syntax/test.py	/^def functionname$/;"	f
fxa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fxa$/;"	m
fz	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fz$/;"	m
fza	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fza$/;"	m
g:CtrlSpaceLoaded	plugged/vim-ctrlspace/plugin/ctrlspace.vim	/^let g:CtrlSpaceLoaded = 1$/;"	v
g:DisableAutoPHPFolding	plugged/PIV/after/ftplugin/php.vim	/^    let g:DisableAutoPHPFolding = 0$/;"	v
g:DisableAutoPHPFolding	plugged/PIV/plugin/phpfolding.vim	/^    let g:DisableAutoPHPFolding = 0$/;"	v
g:EasyMotion_add_search_history	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_add_search_history = get(g: , 'EasyMotion_add_search_history' , 1)$/;"	v
g:EasyMotion_command_line_key_mappings	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_command_line_key_mappings =$/;"	v
g:EasyMotion_cursor_highlight	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_cursor_highlight   = get(g: , 'EasyMotion_cursor_highlight'   , 1)$/;"	v
g:EasyMotion_disable_two_key_combo	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_disable_two_key_combo     =$/;"	v
g:EasyMotion_do_mapping	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_do_mapping         = get(g: , 'EasyMotion_do_mapping'         , 1)$/;"	v
g:EasyMotion_do_shade	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_do_shade           = get(g: , 'EasyMotion_do_shade'           , 1)$/;"	v
g:EasyMotion_enter_jump_first	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_enter_jump_first   = get(g: , 'EasyMotion_enter_jump_first'   , 0)$/;"	v
g:EasyMotion_force_csapprox	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_force_csapprox     = get(g: , 'EasyMotion_force_csapprox'     , 0)$/;"	v
g:EasyMotion_grouping	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_grouping           = get(g: , 'EasyMotion_grouping'           , 1)$/;"	v
g:EasyMotion_hl2_first_group_target	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl2_first_group_target  = get(g:,$/;"	v
g:EasyMotion_hl2_second_group_target	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl2_second_group_target = get(g:,$/;"	v
g:EasyMotion_hl_group_shade	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_group_shade          = get(g:,$/;"	v
g:EasyMotion_hl_group_target	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_group_target         = get(g:,$/;"	v
g:EasyMotion_hl_inc_cursor	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_inc_cursor     = get(g:,$/;"	v
g:EasyMotion_hl_inc_search	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_inc_search     = get(g:,$/;"	v
g:EasyMotion_hl_move	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_move           = get(g:,$/;"	v
g:EasyMotion_inc_highlight	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_inc_highlight      = get(g: , 'EasyMotion_inc_highlight'      , 1)$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_keys               = get(g:,$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_landing_highlight	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_landing_highlight  = get(g: , 'EasyMotion_landing_highlight'  , 0)$/;"	v
g:EasyMotion_loaded	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_loaded = 1$/;"	v
g:EasyMotion_maximal_jumpmarks	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        let g:EasyMotion_maximal_jumpmarks  = 2 " Error for value 1 unanalyzed. $/;"	v
g:EasyMotion_move_highlight	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_move_highlight     = get(g: , 'EasyMotion_move_highlight'     , 1)$/;"	v
g:EasyMotion_off_screen_search	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_off_screen_search  = get(g: , 'EasyMotion_off_screen_search'  , 1)$/;"	v
g:EasyMotion_off_screen_search	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 0$/;"	v
g:EasyMotion_off_screen_search	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 1$/;"	v
g:EasyMotion_prompt	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_prompt             =$/;"	v
g:EasyMotion_show_prompt	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_show_prompt        = get(g: , 'EasyMotion_show_prompt'        , 1)$/;"	v
g:EasyMotion_skipfoldedline	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_skipfoldedline     = get(g: , 'EasyMotion_skipfoldedline'     , 1)$/;"	v
g:EasyMotion_smartcase	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_smartcase          = get(g: , 'EasyMotion_smartcase'          , 0)$/;"	v
g:EasyMotion_smartcase	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 0$/;"	v
g:EasyMotion_smartcase	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 1$/;"	v
g:EasyMotion_space_jump_first	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_space_jump_first   = get(g: , 'EasyMotion_space_jump_first'   , 0)$/;"	v
g:EasyMotion_startofline	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_startofline        = get(g: , 'EasyMotion_startofline'        , 1)$/;"	v
g:EasyMotion_use_migemo	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_migemo         = get(g: , 'EasyMotion_use_migemo'         , 0)$/;"	v
g:EasyMotion_use_migemo	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_migemo = 1$/;"	v
g:EasyMotion_use_regexp	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_regexp         = get(g: , 'EasyMotion_use_regexp'         , 1)$/;"	v
g:EasyMotion_use_regexp	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 0$/;"	v
g:EasyMotion_use_regexp	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 1$/;"	v
g:EasyMotion_use_smartsign_jp	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_jp = 1$/;"	v
g:EasyMotion_use_smartsign_us	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 0$/;"	v
g:EasyMotion_use_smartsign_us	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_smartsign_us	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_upper	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_upper          = get(g: , 'EasyMotion_use_upper'          , 0)$/;"	v
g:EasyMotion_verbose	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_verbose            = get(g: , 'EasyMotion_verbose'            , 1)$/;"	v
g:EasyMotion_verbose	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_verbose = 0$/;"	v
g:EasyMotion_verbose	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_verbose = 1$/;"	v
g:FileExplorer_title	plugged/winmanager_23/plugin/winfileexplorer.vim	/^let g:FileExplorer_title = "[File List]"$/;"	v
g:NERDDelimiterMap	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let g:NERDDelimiterMap = s:delimiterMap$/;"	v
g:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	plugged/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	plugged/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeSortOrder	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"$/;"	v
g:NERDTreeUI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:SuperTabClosePreviewOnPopupClose	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabClosePreviewOnPopupClose = 0$/;"	v
g:SuperTabCompleteCase	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabCompleteCase = 'inherit'$/;"	v
g:SuperTabCompletionContexts	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabCompletionContexts = ['s:ContextText']$/;"	v
g:SuperTabContextDefaultCompletionType	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabContextDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabContextTextMemberPatterns	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabContextTextMemberPatterns = ['\\.', '>\\?::', '->']$/;"	v
g:SuperTabCrMapping	plugged/supertab/plugin/supertab.vim	/^      let g:SuperTabCrMapping = 0$/;"	v
g:SuperTabCrMapping	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabCrMapping = 0$/;"	v
g:SuperTabDefaultCompletionType	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabLongestEnhanced	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabLongestEnhanced = 0$/;"	v
g:SuperTabLongestHighlight	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabLongestHighlight = 0$/;"	v
g:SuperTabMappingBackward	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingBackward = '<s-tab>'$/;"	v
g:SuperTabMappingForward	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingForward = '<tab>'$/;"	v
g:SuperTabMappingTabLiteral	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingTabLiteral = '<c-tab>'$/;"	v
g:SuperTabNoCompleteAfter	plugged/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = ['^', '\\s']$/;"	v
g:SuperTabNoCompleteAfter	plugged/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = []$/;"	v
g:SuperTabNoCompleteBefore	plugged/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = ['\\k']$/;"	v
g:SuperTabNoCompleteBefore	plugged/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = []$/;"	v
g:SuperTabRetainCompletionDuration	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabRetainCompletionDuration = 'insert'$/;"	v
g:SuperTabUndoBreak	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabUndoBreak = 0$/;"	v
g:SyntasticAutoloclistNotifier	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	plugged/syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	plugged/syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	plugged/syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	plugged/syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	plugged/syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticModeMap	plugged/syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	plugged/syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	plugged/syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	plugged/syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:TagsExplorerSkipError	plugged/winmanager_23/plugin/wintagexplorer.vim	/^	let g:TagsExplorerSkipError = 0$/;"	v
g:TagsExplorer_title	plugged/winmanager_23/plugin/wintagexplorer.vim	/^let g:TagsExplorer_title = "[Tag List]"$/;"	v
g:_SYNTASTIC_DEBUG_AUTOCOMMANDS	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_AUTOCOMMANDS  = 8$/;"	v
g:_SYNTASTIC_DEBUG_CHECKERS	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_CHECKERS      = 32$/;"	v
g:_SYNTASTIC_DEBUG_LOCLIST	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_LOCLIST       = 2$/;"	v
g:_SYNTASTIC_DEBUG_NOTIFICATIONS	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_NOTIFICATIONS = 4$/;"	v
g:_SYNTASTIC_DEBUG_TRACE	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_TRACE         = 1$/;"	v
g:_SYNTASTIC_DEBUG_VARIABLES	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_VARIABLES     = 16$/;"	v
g:_SYNTASTIC_DEFAULTS	plugged/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_DEFAULTS = {$/;"	v
g:_SYNTASTIC_START	plugged/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_START = reltime()$/;"	v
g:_SYNTASTIC_UNAME	plugged/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	plugged/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = split(syntastic#util#system('uname'), "\\n")[0]$/;"	v
g:_SYNTASTIC_UNAME	plugged/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	plugged/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Windows'$/;"	v
g:_SYNTASTIC_VERSION	plugged/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_VERSION = '3.7.0-100'$/;"	v
g:alternateNoDefaultAlternate	plugged/hc/plugin/a.vim	/^   let g:alternateNoDefaultAlternate = 0$/;"	v
g:alternateRelativeFiles	plugged/hc/plugin/a.vim	/^   let g:alternateRelativeFiles = 0$/;"	v
g:alternateSearchPath	plugged/hc/plugin/a.vim	/^  let g:alternateSearchPath = 'sfr:..\/source,sfr:..\/src,sfr:..\/include,sfr:..\/inc'$/;"	v
g:clever_f_use_migemo	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:clever_f_use_migemo = 0$/;"	v
g:colors_name	plugged/molokai/colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:debugWinManager	plugged/winmanager_23/plugin/winmanager.vim	/^let g:debugWinManager = 1$/;"	v
g:defaultExplorer	plugged/winmanager_23/plugin/winfileexplorer.vim	/^	let g:defaultExplorer = 1$/;"	v
g:defaultExplorer	plugged/winmanager_23/plugin/winmanager.vim	/^	let g:defaultExplorer = 1$/;"	v
g:delimitMate_eol_marker	plugged/delimitMate/test/eol_marker.vim	/^let g:delimitMate_eol_marker = ';'$/;"	v
g:delimitMate_eol_marker	plugged/delimitMate/test/first_buffer_no_ft.vim	/^let g:delimitMate_eol_marker = ';'$/;"	v
g:delimitMate_expand_cr	plugged/delimitMate/test/eol_marker.vim	/^let g:delimitMate_expand_cr = 1$/;"	v
g:delimitMate_expand_cr	plugged/delimitMate/test/expand_cr.vim	/^let g:delimitMate_expand_cr = 1$/;"	v
g:delimitMate_expand_cr	plugged/delimitMate/test/first_buffer_no_ft.vim	/^let g:delimitMate_expand_cr = 1$/;"	v
g:delimitMate_expand_space	plugged/delimitMate/test/expand_space.vim	/^let g:delimitMate_expand_space = 1$/;"	v
g:delimitMate_insert_eol_marker	plugged/delimitMate/test/eol_marker.vim	/^let g:delimitMate_insert_eol_marker = 0$/;"	v
g:delimitMate_insert_eol_marker	plugged/delimitMate/test/eol_marker.vim	/^let g:delimitMate_insert_eol_marker = 1$/;"	v
g:delimitMate_insert_eol_marker	plugged/delimitMate/test/eol_marker.vim	/^let g:delimitMate_insert_eol_marker = 2$/;"	v
g:delimitMate_matchpairs	plugged/delimitMate/test/autoclose_matchpairs.vim	/^let g:delimitMate_matchpairs = '(:),{:},[:],<:>,¿:?,¡:!,,::'$/;"	v
g:delimitMate_quotes	plugged/delimitMate/test/autoclose_quotes.vim	/^let g:delimitMate_quotes = '" '' ` « |'$/;"	v
g:explDateFormat	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explDateFormat="%d %b %Y %H:%M"$/;"	v
g:explDetailedHelp	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explDetailedHelp=0$/;"	v
g:explDetailedList	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explDetailedList=0$/;"	v
g:explDirsFirst	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explDirsFirst=1$/;"	v
g:explHideFiles	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explHideFiles=''$/;"	v
g:explSortBy	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explSortBy='name'$/;"	v
g:explSplitBelow	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explSplitBelow = &splitbelow$/;"	v
g:explSplitRight	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explSplitRight = &splitright$/;"	v
g:explStartBelow	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explStartBelow = g:explSplitBelow$/;"	v
g:explStartRight	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explStartRight = g:explSplitRight$/;"	v
g:explSuffixesLast	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explSuffixesLast=1$/;"	v
g:explUseSeparators	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explUseSeparators=0$/;"	v
g:explVertical	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explVertical=0$/;"	v
g:explWinSize	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let g:explWinSize=15$/;"	v
g:extra_whitespace_ignored_filetypes	plugged/vim-trailing-whitespace/plugin/trailing-whitespace.vim	/^    let g:extra_whitespace_ignored_filetypes = []$/;"	v
g:jinja_syntax_html	plugged/Vim-Jinja2-Syntax/syntax/jinja.vim	/^   let g:jinja_syntax_html=1$/;"	v
g:loaded_ctrlp	plugged/ctrlp.vim/plugin/ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_line	plugged/ctrlp.vim/autoload/ctrlp/line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_quickfix	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_delimitMate	plugged/delimitMate/plugin/delimitMate.vim	/^let g:loaded_delimitMate = 1$/;"	v
g:loaded_nerdtree_autoload	plugged/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_plug	autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_surround	plugged/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_syntastic_actionscript_mxmlc_checker	plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let g:loaded_syntastic_actionscript_mxmlc_checker = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_ansible_ansible_lint_checker	plugged/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^let g:loaded_syntastic_ansible_ansible_lint_checker = 1$/;"	v
g:loaded_syntastic_apiblueprint_drafter_checker	plugged/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^let g:loaded_syntastic_apiblueprint_drafter_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	plugged/syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_asciidoc_checker	plugged/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let g:loaded_syntastic_asciidoc_asciidoc_checker = 1$/;"	v
g:loaded_syntastic_asm_gcc_checker	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^let g:loaded_syntastic_asm_gcc_checker = 1$/;"	v
g:loaded_syntastic_bemhtml_bemhtmllint_checker	plugged/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let g:loaded_syntastic_bemhtml_bemhtmllint_checker = 1$/;"	v
g:loaded_syntastic_bro_bro_checker	plugged/syntastic/syntax_checkers/bro/bro.vim	/^let g:loaded_syntastic_bro_bro_checker = 1$/;"	v
g:loaded_syntastic_c_autoload	plugged/syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_avrgcc_checker	plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^let g:loaded_syntastic_c_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_clang_check_checker	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^let g:loaded_syntastic_c_clang_check_checker = 1$/;"	v
g:loaded_syntastic_c_clang_tidy_checker	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^let g:loaded_syntastic_c_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_c_cppcheck_checker	plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^let g:loaded_syntastic_c_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	plugged/syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	plugged/syntastic/syntax_checkers/c/make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	plugged/syntastic/syntax_checkers/c/oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_pc_lint_checker	plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^let g:loaded_syntastic_c_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	plugged/syntastic/syntax_checkers/c/sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	plugged/syntastic/syntax_checkers/c/splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_cabal_cabal_checker	plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^let g:loaded_syntastic_cabal_cabal_checker = 1$/;"	v
g:loaded_syntastic_checker	plugged/syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_chef_foodcritic_checker	plugged/syntastic/syntax_checkers/chef/foodcritic.vim	/^let g:loaded_syntastic_chef_foodcritic_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	plugged/syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker = 1$/;"	v
g:loaded_syntastic_cobol_cobc_checker	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^let g:loaded_syntastic_cobol_cobc_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	plugged/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker = 1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	plugged/syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_check_checker	plugged/syntastic/syntax_checkers/cpp/clang_check.vim	/^let g:loaded_syntastic_cpp_clang_check_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_tidy_checker	plugged/syntastic/syntax_checkers/cpp/clang_tidy.vim	/^let g:loaded_syntastic_cpp_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppcheck_checker	plugged/syntastic/syntax_checkers/cpp/cppcheck.vim	/^let g:loaded_syntastic_cpp_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	plugged/syntastic/syntax_checkers/cpp/oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cpp_pc_lint_checker	plugged/syntastic/syntax_checkers/cpp/pc_lint.vim	/^let g:loaded_syntastic_cpp_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_cpp_verapp_checker	plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^let g:loaded_syntastic_cpp_verapp_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	plugged/syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker = 1$/;"	v
g:loaded_syntastic_css_csslint_checker	plugged/syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker = 1$/;"	v
g:loaded_syntastic_css_mixedindentlint_checker	plugged/syntastic/syntax_checkers/css/mixedindentlint.vim	/^let g:loaded_syntastic_css_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_css_phpcs_checker	plugged/syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker = 1$/;"	v
g:loaded_syntastic_css_prettycss_checker	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker = 1$/;"	v
g:loaded_syntastic_css_recess_checker	plugged/syntastic/syntax_checkers/css/recess.vim	/^let g:loaded_syntastic_css_recess_checker = 1$/;"	v
g:loaded_syntastic_css_stylelint_checker	plugged/syntastic/syntax_checkers/css/stylelint.vim	/^let g:loaded_syntastic_css_stylelint_checker = 1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	plugged/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker = 1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	plugged/syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker = 1$/;"	v
g:loaded_syntastic_d_dmd_checker	plugged/syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_dart_dartanalyzer_checker	plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let g:loaded_syntastic_dart_dartanalyzer_checker = 1$/;"	v
g:loaded_syntastic_docbk_igor_checker	plugged/syntastic/syntax_checkers/docbk/igor.vim	/^let g:loaded_syntastic_docbk_igor_checker = 1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	plugged/syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker = 1$/;"	v
g:loaded_syntastic_dockerfile_dockerfile_lint_checker	plugged/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^let g:loaded_syntastic_dockerfile_dockerfile_lint_checker = 1$/;"	v
g:loaded_syntastic_dustjs_swiffer_checker	plugged/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let g:loaded_syntastic_dustjs_swiffer_checker = 1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker = 1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^let g:loaded_syntastic_erlang_erlang_checker = 1$/;"	v
g:loaded_syntastic_erlang_syntaxerl_checker	plugged/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let g:loaded_syntastic_erlang_syntaxerl_checker = 1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker = 1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker = 1$/;"	v
g:loaded_syntastic_glsl_cgc_checker	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^let g:loaded_syntastic_glsl_cgc_checker = 1$/;"	v
g:loaded_syntastic_go_go_checker	plugged/syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker = 1$/;"	v
g:loaded_syntastic_go_gofmt_checker	plugged/syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker = 1$/;"	v
g:loaded_syntastic_go_golint_checker	plugged/syntastic/syntax_checkers/go/golint.vim	/^let g:loaded_syntastic_go_golint_checker = 1$/;"	v
g:loaded_syntastic_go_gometalinter_checker	plugged/syntastic/syntax_checkers/go/gometalinter.vim	/^let g:loaded_syntastic_go_gometalinter_checker = 1$/;"	v
g:loaded_syntastic_go_gotype_checker	plugged/syntastic/syntax_checkers/go/gotype.vim	/^let g:loaded_syntastic_go_gotype_checker = 1$/;"	v
g:loaded_syntastic_go_govet_checker	plugged/syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_checker	plugged/syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_lint_checker	plugged/syntastic/syntax_checkers/haml/haml_lint.vim	/^let g:loaded_syntastic_haml_haml_lint_checker = 1$/;"	v
g:loaded_syntastic_handlebars_handlebars_checker	plugged/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let g:loaded_syntastic_handlebars_handlebars_checker = 1$/;"	v
g:loaded_syntastic_haskell_ghc_mod_checker	plugged/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let g:loaded_syntastic_haskell_ghc_mod_checker = 1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker = 1$/;"	v
g:loaded_syntastic_haskell_hlint_checker	plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^let g:loaded_syntastic_haskell_hlint_checker = 1$/;"	v
g:loaded_syntastic_haskell_scan_checker	plugged/syntastic/syntax_checkers/haskell/scan.vim	/^let g:loaded_syntastic_haskell_scan_checker = 1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	plugged/syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker = 1$/;"	v
g:loaded_syntastic_hss_hss_checker	plugged/syntastic/syntax_checkers/hss/hss.vim	/^let g:loaded_syntastic_hss_hss_checker = 1$/;"	v
g:loaded_syntastic_html_jshint_checker	plugged/syntastic/syntax_checkers/html/jshint.vim	/^let g:loaded_syntastic_html_jshint_checker = 1$/;"	v
g:loaded_syntastic_html_tidy_checker	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	plugged/syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	plugged/syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_jade_jade_lint_checker	plugged/syntastic/syntax_checkers/jade/jade_lint.vim	/^let g:loaded_syntastic_jade_jade_lint_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker = 1$/;"	v
g:loaded_syntastic_java_javac_checker	plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker = 1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker = 1$/;"	v
g:loaded_syntastic_javascript_eslint_checker	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^let g:loaded_syntastic_javascript_eslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_flow_checker	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^let g:loaded_syntastic_javascript_flow_checker = 1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	plugged/syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jscs_checker	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^let g:loaded_syntastic_javascript_jscs_checker = 1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	plugged/syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker = 1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsxhint_checker	plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let g:loaded_syntastic_javascript_jsxhint_checker = 1$/;"	v
g:loaded_syntastic_javascript_mixedindentlint_checker	plugged/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^let g:loaded_syntastic_javascript_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_javascript_standard_checker	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^let g:loaded_syntastic_javascript_standard_checker = 1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	plugged/syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonval_checker	plugged/syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker = 1$/;"	v
g:loaded_syntastic_less_lessc_checker	plugged/syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker = 1$/;"	v
g:loaded_syntastic_less_recess_checker	plugged/syntastic/syntax_checkers/less/recess.vim	/^let g:loaded_syntastic_less_recess_checker = 1$/;"	v
g:loaded_syntastic_lex_flex_checker	plugged/syntastic/syntax_checkers/lex/flex.vim	/^let g:loaded_syntastic_lex_flex_checker = 1$/;"	v
g:loaded_syntastic_limbo_limbo_checker	plugged/syntastic/syntax_checkers/limbo/limbo.vim	/^let g:loaded_syntastic_limbo_limbo_checker = 1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	plugged/syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker = 1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	plugged/syntastic/syntax_checkers/llvm/llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker = 1$/;"	v
g:loaded_syntastic_loclist	plugged/syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_log_autoload	plugged/syntastic/autoload/syntastic/log.vim	/^let g:loaded_syntastic_log_autoload = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	plugged/syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker = 1$/;"	v
g:loaded_syntastic_lua_luacheck_checker	plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^let g:loaded_syntastic_lua_luacheck_checker = 1$/;"	v
g:loaded_syntastic_markdown_mdl_checker	plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^let g:loaded_syntastic_markdown_mdl_checker = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	plugged/syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker = 1$/;"	v
g:loaded_syntastic_mercury_mmc_checker	plugged/syntastic/syntax_checkers/mercury/mmc.vim	/^let g:loaded_syntastic_mercury_mmc_checker = 1$/;"	v
g:loaded_syntastic_modemap	plugged/syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	plugged/syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker = 1$/;"	v
g:loaded_syntastic_nix_nix_checker	plugged/syntastic/syntax_checkers/nix/nix.vim	/^let g:loaded_syntastic_nix_nix_checker = 1$/;"	v
g:loaded_syntastic_notifier_autoloclist	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	plugged/syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	plugged/syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	plugged/syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	plugged/syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	plugged/syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_nroff_igor_checker	plugged/syntastic/syntax_checkers/nroff/igor.vim	/^let g:loaded_syntastic_nroff_igor_checker = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	plugged/syntastic/syntax_checkers/nroff/mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker = 1$/;"	v
g:loaded_syntastic_objc_gcc_checker	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	plugged/syntastic/syntax_checkers/objc/oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	plugged/syntastic/syntax_checkers/objcpp/oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker = 1$/;"	v
g:loaded_syntastic_perl_perl_checker	plugged/syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker = 1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker = 1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	plugged/syntastic/syntax_checkers/perl/podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker = 1$/;"	v
g:loaded_syntastic_php_php_checker	plugged/syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker = 1$/;"	v
g:loaded_syntastic_php_phpcs_checker	plugged/syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker = 1$/;"	v
g:loaded_syntastic_php_phplint_checker	plugged/syntastic/syntax_checkers/php/phplint.vim	/^let g:loaded_syntastic_php_phplint_checker = 1$/;"	v
g:loaded_syntastic_php_phpmd_checker	plugged/syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker = 1$/;"	v
g:loaded_syntastic_plugin	plugged/syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_po_msgfmt_checker	plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^let g:loaded_syntastic_po_msgfmt_checker = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	plugged/syntastic/syntax_checkers/pod/podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker = 1$/;"	v
g:loaded_syntastic_postprocess_autoload	plugged/syntastic/autoload/syntastic/postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_preprocess_autoload	plugged/syntastic/autoload/syntastic/preprocess.vim	/^let g:loaded_syntastic_preprocess_autoload = 1$/;"	v
g:loaded_syntastic_pug_pug_lint_checker	plugged/syntastic/syntax_checkers/pug/pug_lint.vim	/^let g:loaded_syntastic_pug_pug_lint_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	plugged/syntastic/syntax_checkers/puppet/puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker = 1$/;"	v
g:loaded_syntastic_python_flake8_checker	plugged/syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker = 1$/;"	v
g:loaded_syntastic_python_frosted_checker	plugged/syntastic/syntax_checkers/python/frosted.vim	/^let g:loaded_syntastic_python_frosted_checker = 1$/;"	v
g:loaded_syntastic_python_mypy_checker	plugged/syntastic/syntax_checkers/python/mypy.vim	/^let g:loaded_syntastic_python_mypy_checker = 1$/;"	v
g:loaded_syntastic_python_pep257_checker	plugged/syntastic/syntax_checkers/python/pep257.vim	/^let g:loaded_syntastic_python_pep257_checker = 1$/;"	v
g:loaded_syntastic_python_pep8_checker	plugged/syntastic/syntax_checkers/python/pep8.vim	/^let g:loaded_syntastic_python_pep8_checker = 1$/;"	v
g:loaded_syntastic_python_prospector_checker	plugged/syntastic/syntax_checkers/python/prospector.vim	/^let g:loaded_syntastic_python_prospector_checker = 1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	plugged/syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker = 1$/;"	v
g:loaded_syntastic_python_pydocstyle_checker	plugged/syntastic/syntax_checkers/python/pydocstyle.vim	/^let g:loaded_syntastic_python_pydocstyle_checker = 1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker = 1$/;"	v
g:loaded_syntastic_python_pylama_checker	plugged/syntastic/syntax_checkers/python/pylama.vim	/^let g:loaded_syntastic_python_pylama_checker = 1$/;"	v
g:loaded_syntastic_python_pylint_checker	plugged/syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker = 1$/;"	v
g:loaded_syntastic_python_python_checker	plugged/syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker = 1$/;"	v
g:loaded_syntastic_qml_qmllint_checker	plugged/syntastic/syntax_checkers/qml/qmllint.vim	/^let g:loaded_syntastic_qml_qmllint_checker = 1$/;"	v
g:loaded_syntastic_r_lint_checker	plugged/syntastic/syntax_checkers/r/lint.vim	/^let g:loaded_syntastic_r_lint_checker = 1$/;"	v
g:loaded_syntastic_r_lintr_checker	plugged/syntastic/syntax_checkers/r/lintr.vim	/^let g:loaded_syntastic_r_lintr_checker = 1$/;"	v
g:loaded_syntastic_r_svtools_checker	plugged/syntastic/syntax_checkers/r/svtools.vim	/^let g:loaded_syntastic_r_svtools_checker = 1$/;"	v
g:loaded_syntastic_racket_code_ayatollah_checker	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let g:loaded_syntastic_racket_code_ayatollah_checker = 1$/;"	v
g:loaded_syntastic_racket_racket_checker	plugged/syntastic/syntax_checkers/racket/racket.vim	/^let g:loaded_syntastic_racket_racket_checker=1$/;"	v
g:loaded_syntastic_registry	plugged/syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rmd_lintr_checker	plugged/syntastic/syntax_checkers/rmd/lintr.vim	/^let g:loaded_syntastic_rmd_lintr_checker = 1$/;"	v
g:loaded_syntastic_rnc_rnv_checker	plugged/syntastic/syntax_checkers/rnc/rnv.vim	/^let g:loaded_syntastic_rnc_rnv_checker = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker = 1$/;"	v
g:loaded_syntastic_rst_rstcheck_checker	plugged/syntastic/syntax_checkers/rst/rstcheck.vim	/^let g:loaded_syntastic_rst_rstcheck_checker = 1$/;"	v
g:loaded_syntastic_rst_sphinx_checker	plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^let g:loaded_syntastic_rst_sphinx_checker = 1$/;"	v
g:loaded_syntastic_ruby_flog_checker	plugged/syntastic/syntax_checkers/ruby/flog.vim	/^let g:loaded_syntastic_ruby_flog_checker = 1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	plugged/syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	plugged/syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_mri_checker	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker = 1$/;"	v
g:loaded_syntastic_ruby_reek_checker	plugged/syntastic/syntax_checkers/ruby/reek.vim	/^let g:loaded_syntastic_ruby_reek_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubylint_checker	plugged/syntastic/syntax_checkers/ruby/rubylint.vim	/^let g:loaded_syntastic_ruby_rubylint_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_checker	plugged/syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker = 1$/;"	v
g:loaded_syntastic_sass_sassc_checker	plugged/syntastic/syntax_checkers/sass/sassc.vim	/^let g:loaded_syntastic_sass_sassc_checker = 1$/;"	v
g:loaded_syntastic_scala_fsc_checker	plugged/syntastic/syntax_checkers/scala/fsc.vim	/^let g:loaded_syntastic_scala_fsc_checker = 1$/;"	v
g:loaded_syntastic_scala_scalac_checker	plugged/syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker = 1$/;"	v
g:loaded_syntastic_scala_scalastyle_checker	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^let g:loaded_syntastic_scala_scalastyle_checker = 1$/;"	v
g:loaded_syntastic_scss_mixedindentlint_checker	plugged/syntastic/syntax_checkers/scss/mixedindentlint.vim	/^let g:loaded_syntastic_scss_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_checker	plugged/syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker = 1$/;"	v
g:loaded_syntastic_scss_sassc_checker	plugged/syntastic/syntax_checkers/scss/sassc.vim	/^let g:loaded_syntastic_scss_sassc_checker = 1$/;"	v
g:loaded_syntastic_scss_scss_lint_checker	plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^let g:loaded_syntastic_scss_scss_lint_checker = 1$/;"	v
g:loaded_syntastic_scss_stylelint_checker	plugged/syntastic/syntax_checkers/scss/stylelint.vim	/^let g:loaded_syntastic_scss_stylelint_checker = 1$/;"	v
g:loaded_syntastic_sh_bashate_checker	plugged/syntastic/syntax_checkers/sh/bashate.vim	/^let g:loaded_syntastic_sh_bashate_checker = 1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	plugged/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker = 1$/;"	v
g:loaded_syntastic_sh_sh_checker	plugged/syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker = 1$/;"	v
g:loaded_syntastic_sh_shellcheck_checker	plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^let g:loaded_syntastic_sh_shellcheck_checker = 1$/;"	v
g:loaded_syntastic_slim_slim_lint_checker	plugged/syntastic/syntax_checkers/slim/slim_lint.vim	/^let g:loaded_syntastic_slim_slim_lint_checker = 1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	plugged/syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker = 1$/;"	v
g:loaded_syntastic_sml_smlnj_checker	plugged/syntastic/syntax_checkers/sml/smlnj.vim	/^let g:loaded_syntastic_sml_smlnj_checker = 1$/;"	v
g:loaded_syntastic_spec_rpmlint_checker	plugged/syntastic/syntax_checkers/spec/rpmlint.vim	/^let g:loaded_syntastic_spec_rpmlint_checker = 1$/;"	v
g:loaded_syntastic_sql_sqlint_checker	plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^let g:loaded_syntastic_sql_sqlint_checker = 1$/;"	v
g:loaded_syntastic_stylus_stylint_checker	plugged/syntastic/syntax_checkers/stylus/stylint.vim	/^let g:loaded_syntastic_stylus_stylint_checker = 1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	plugged/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker = 1$/;"	v
g:loaded_syntastic_tex_chktex_checker	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	plugged/syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker = 1$/;"	v
g:loaded_syntastic_texinfo_makeinfo_checker	plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let g:loaded_syntastic_texinfo_makeinfo_checker = 1$/;"	v
g:loaded_syntastic_text_atdtool_checker	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_text_igor_checker	plugged/syntastic/syntax_checkers/text/igor.vim	/^let g:loaded_syntastic_text_igor_checker = 1$/;"	v
g:loaded_syntastic_text_language_check_checker	plugged/syntastic/syntax_checkers/text/language_check.vim	/^let g:loaded_syntastic_text_language_check_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	plugged/syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker = 1$/;"	v
g:loaded_syntastic_typescript_eslint_checker	plugged/syntastic/syntax_checkers/typescript/eslint.vim	/^let g:loaded_syntastic_typescript_eslint_checker = 1$/;"	v
g:loaded_syntastic_typescript_tsc_checker	plugged/syntastic/syntax_checkers/typescript/tsc.vim	/^let g:loaded_syntastic_typescript_tsc_checker = 1$/;"	v
g:loaded_syntastic_typescript_tslint_checker	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^let g:loaded_syntastic_typescript_tslint_checker = 1$/;"	v
g:loaded_syntastic_util_autoload	plugged/syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_vala_valac_checker	plugged/syntastic/syntax_checkers/vala/valac.vim	/^let g:loaded_syntastic_vala_valac_checker = 1$/;"	v
g:loaded_syntastic_verilog_iverilog_checker	plugged/syntastic/syntax_checkers/verilog/iverilog.vim	/^let g:loaded_syntastic_verilog_iverilog_checker = 1$/;"	v
g:loaded_syntastic_verilog_verilator_checker	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^let g:loaded_syntastic_verilog_verilator_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	plugged/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_vhdl_vcom_checker	plugged/syntastic/syntax_checkers/vhdl/vcom.vim	/^let g:loaded_syntastic_vhdl_vcom_checker = 1$/;"	v
g:loaded_syntastic_vim_vimlint_checker	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^let g:loaded_syntastic_vim_vimlint_checker = 1$/;"	v
g:loaded_syntastic_vim_vint_checker	plugged/syntastic/syntax_checkers/vim/vint.vim	/^let g:loaded_syntastic_vim_vint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_jshint_checker	plugged/syntastic/syntax_checkers/xhtml/jshint.vim	/^let g:loaded_syntastic_xhtml_jshint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker = 1$/;"	v
g:loaded_syntastic_xml_plutil_checker	plugged/syntastic/syntax_checkers/xml/plutil.vim	/^let g:loaded_syntastic_xml_plutil_checker = 1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	plugged/syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker = 1$/;"	v
g:loaded_syntastic_xquery_basex_checker	plugged/syntastic/syntax_checkers/xquery/basex.vim	/^let g:loaded_syntastic_xquery_basex_checker = 1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	plugged/syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker = 1$/;"	v
g:loaded_syntastic_yacc_bison_checker	plugged/syntastic/syntax_checkers/yacc/bison.vim	/^let g:loaded_syntastic_yacc_bison_checker = 1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	plugged/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamllint_checker	plugged/syntastic/syntax_checkers/yaml/yamllint.vim	/^let g:loaded_syntastic_yaml_yamllint_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamlxs_checker	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let g:loaded_syntastic_yaml_yamlxs_checker = 1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	plugged/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker = 1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	plugged/syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker = 1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	plugged/syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker = 1$/;"	v
g:loaded_tagbar	plugged/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_togglebg	plugged/vim-colors-solarized/autoload/togglebg.vim	/^let g:loaded_togglebg = 1$/;"	v
g:miniBufExplBufList	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplBufList = ''$/;"	v
g:miniBufExplDoneClickSave	plugged/minibuffer_632/plugin/minibufexpl.vim	/^    let  g:miniBufExplDoneClickSave = 1$/;"	v
g:miniBufExplForceDisplay	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplForceDisplay = 0$/;"	v
g:miniBufExplForceSyntaxEnable	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplForceSyntaxEnable = 0$/;"	v
g:miniBufExplInAutoUpdate	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplInAutoUpdate = 0$/;"	v
g:miniBufExplMapCTabSwitchBufs	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplMapCTabSwitchBufs = 0$/;"	v
g:miniBufExplMapCTabSwitchWindows	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplMapCTabSwitchWindows = 0$/;"	v
g:miniBufExplMapWindowNav	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplMapWindowNav = 0$/;"	v
g:miniBufExplMapWindowNavArrows	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplMapWindowNavArrows = 0$/;"	v
g:miniBufExplMapWindowNavVim	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplMapWindowNavVim = 0$/;"	v
g:miniBufExplMaxHeight	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplMaxHeight = 0$/;"	v
g:miniBufExplMaxSize	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplMaxSize = g:miniBufExplMaxHeight$/;"	v
g:miniBufExplMinHeight	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplMinHeight = 1$/;"	v
g:miniBufExplMinSize	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplMinSize = g:miniBufExplMinHeight$/;"	v
g:miniBufExplModSelTarget	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplModSelTarget = 0$/;"	v
g:miniBufExplSplitBelow	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplSplitBelow = &splitbelow$/;"	v
g:miniBufExplSplitToEdge	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplSplitToEdge = 1$/;"	v
g:miniBufExplTabWrap	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplTabWrap = 0$/;"	v
g:miniBufExplUseSingleClick	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplUseSingleClick = 0$/;"	v
g:miniBufExplVSplit	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplVSplit = 0$/;"	v
g:miniBufExplorerAutoUpdate	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplorerAutoUpdate = 0$/;"	v
g:miniBufExplorerDebugLevel	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplorerDebugLevel = 0 $/;"	v
g:miniBufExplorerDebugMode	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplorerDebugMode = 3 $/;"	v
g:miniBufExplorerDebugOutput	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplorerDebugOutput = ''$/;"	v
g:miniBufExplorerMoreThanOne	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let g:miniBufExplorerMoreThanOne = 2$/;"	v
g:nerdtree_tabs_autoclose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_autoclose = 1$/;"	v
g:nerdtree_tabs_autofind	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_autofind = 0$/;"	v
g:nerdtree_tabs_focus_on_files	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_focus_on_files = 0$/;"	v
g:nerdtree_tabs_meaningful_tab_names	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_meaningful_tab_names = 1$/;"	v
g:nerdtree_tabs_no_startup_for_diff	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^    let g:nerdtree_tabs_no_startup_for_diff = 1$/;"	v
g:nerdtree_tabs_open_on_console_startup	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_console_startup = 0$/;"	v
g:nerdtree_tabs_open_on_gui_startup	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_gui_startup = 1$/;"	v
g:nerdtree_tabs_open_on_new_tab	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_new_tab = 1$/;"	v
g:nerdtree_tabs_smart_startup_focus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_smart_startup_focus = 1$/;"	v
g:nerdtree_tabs_startup_cd	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_startup_cd = 1$/;"	v
g:nerdtree_tabs_synchronize_focus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_synchronize_focus = 1$/;"	v
g:nerdtree_tabs_synchronize_view	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_synchronize_view = 1$/;"	v
g:numRefs	plugged/winmanager_23/plugin/winmanager.vim	/^let g:numRefs = 0$/;"	v
g:omni#cpp#includes#CACHE_FILE_TIME	plugged/omnicppcomplete-041/autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_FILE_TIME = {}$/;"	v
g:omni#cpp#includes#CACHE_INCLUDES	plugged/omnicppcomplete-041/autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_INCLUDES = {}$/;"	v
g:omni#cpp#namespaces#CacheResolve	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheResolve = {}$/;"	v
g:omni#cpp#namespaces#CacheUsing	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheUsing = {}$/;"	v
g:omni#cpp#utils#CACHE_TAG_INHERITS	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#CACHE_TAG_INHERITS = {}$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope .= "&& (!has_key(v:val, 'enum') || (has_key(v:val, 'enum') && v:val.enum =~ '^\\\\w\\\\+$')))"$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope = "(!has_key(v:val, 'class') && !has_key(v:val, 'struct') && !has_key(v:val, 'union') && !has_key(v:val, 'namespace')"$/;"	v
g:pdv_cfg_Author	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_Author = ""$/;"	v
g:pdv_cfg_BOL	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_BOL = "norm! o"$/;"	v
g:pdv_cfg_Comment1	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_Comment1 = " * "$/;"	v
g:pdv_cfg_CommentEnd	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_CommentEnd = "\/* }}} *\/"$/;"	v
g:pdv_cfg_CommentHead	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_CommentHead = "\/**"$/;"	v
g:pdv_cfg_CommentSingle	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_CommentSingle = "\/\/"$/;"	v
g:pdv_cfg_CommentTail	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_CommentTail = " *\/"$/;"	v
g:pdv_cfg_Commentn	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_Commentn = " * "$/;"	v
g:pdv_cfg_Copyright	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_Copyright = "Copyright (c) 2010 All rights reserved."$/;"	v
g:pdv_cfg_EOL	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_EOL = ""$/;"	v
g:pdv_cfg_License	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_License = "PHP Version 3.0 {@link http:\/\/www.php.net\/license\/3_0.txt}"$/;"	v
g:pdv_cfg_Package	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_Package = "Webdav"$/;"	v
g:pdv_cfg_ReturnVal	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_ReturnVal = "void"$/;"	v
g:pdv_cfg_Type	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_Type = "mixed"$/;"	v
g:pdv_cfg_Uses	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_Uses = 1$/;"	v
g:pdv_cfg_Version	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_Version = "\/\/autogen\/\/"$/;"	v
g:pdv_cfg_display_Author	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_display_Author = 1$/;"	v
g:pdv_cfg_display_Copyright	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_display_Copyright = 1$/;"	v
g:pdv_cfg_display_License	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_display_License = 1$/;"	v
g:pdv_cfg_display_Package	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_display_Package = 1$/;"	v
g:pdv_cfg_display_Version	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_display_Version = 1$/;"	v
g:pdv_cfg_foldmarker	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_foldmarker = 1$/;"	v
g:pdv_cfg_paste	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_paste = 1$/;"	v
g:pdv_cfg_php4always	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_php4always = 1$/;"	v
g:pdv_cfg_php4guess	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_php4guess = 1$/;"	v
g:pdv_cfg_php4guessval	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_cfg_php4guessval = "protected"$/;"	v
g:pdv_re_abstract	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_abstract = '\\(abstract\\)'$/;"	v
g:pdv_re_array	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_array = "^array *(.*"$/;"	v
g:pdv_re_attribute	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_attribute = '^\\s*\\(\\(private\\|public\\|protected\\|var\\|static\\)\\+\\)\\s*\\$\\([^ ;=]\\+\\)[ =]*\\(.*\\);\\?$'$/;"	v
g:pdv_re_bool	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_bool = "[true false]"$/;"	v
g:pdv_re_class	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_class = '^\\s*\\([a-zA-Z]*\\)\\s*\\(interface\\|class\\)\\s*\\([^ ]\\+\\)\\s*\\(extends\\)\\?\\s*\\([a-zA-Z0-9]*\\)\\?\\s*\\(implements*\\)\\? *\\([a-zA-Z0-9_ ,]*\\)\\?.*$'$/;"	v
g:pdv_re_comment	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_comment = ' *\\*\/ *'$/;"	v
g:pdv_re_final	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_final = '\\(final\\)'$/;"	v
g:pdv_re_float	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_float = '^[0-9.]\\+'$/;"	v
g:pdv_re_func	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_func = '^\\s*\\([a-zA-Z ]*\\)function\\s\\+\\([^ (]\\+\\)\\s*(\\s*\\(.*\\)\\s*)\\s*[{;]\\?$'$/;"	v
g:pdv_re_funcend	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_funcend = '^\\s*}$'$/;"	v
g:pdv_re_indent	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_indent = '^\\s*'$/;"	v
g:pdv_re_int	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_int = '^[0-9]\\+$'$/;"	v
g:pdv_re_param	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_param = ' *\\([^ &]*\\) *&\\?\\$\\([A-Za-z_][A-Za-z0-9_]*\\) *=\\? *\\(.*\\)\\?$'$/;"	v
g:pdv_re_scope	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_scope = '\\(private\\|protected\\|public\\)'$/;"	v
g:pdv_re_static	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_static = '\\(static\\)'$/;"	v
g:pdv_re_string	plugged/PIV/ftplugin/php/doc.vim	/^let g:pdv_re_string = "['\\"].*"$/;"	v
g:persistentBehaviour	plugged/winmanager_23/plugin/winmanager.vim	/^	let g:persistentBehaviour = 1$/;"	v
g:phpDocBlockIncludedPostfix	plugged/PIV/plugin/phpfolding.vim	/^let g:phpDocBlockIncludedPostfix = '**#@+'$/;"	v
g:phpDocIncludedPostfix	plugged/PIV/plugin/phpfolding.vim	/^let g:phpDocIncludedPostfix = '**'$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:saveTagsDisplay	plugged/winmanager_23/plugin/wintagexplorer.vim	/^	let g:saveTagsDisplay = 1$/;"	v
g:searchEmptyLinesPostfixing	plugged/PIV/plugin/phpfolding.vim	/^let g:searchEmptyLinesPostfixing = 1$/;"	v
g:searchPhpDocLineCount	plugged/PIV/plugin/phpfolding.vim	/^let g:searchPhpDocLineCount = 1$/;"	v
g:syntastic_	plugged/syntastic/plugin/syntastic.vim	/^        let g:syntastic_{s:key} = copy(g:_SYNTASTIC_DEFAULTS[s:key])$/;"	v
g:syntastic_ada_compiler_options	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_apiblueprint_drafter_sort	plugged/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^    let g:syntastic_apiblueprint_drafter_sort = 1$/;"	v
g:syntastic_asm_compiler_options	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_compiler_options = ''$/;"	v
g:syntastic_asm_generic	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_generic = 0$/;"	v
g:syntastic_avrgcc_config_file	plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^    let g:syntastic_avrgcc_config_file = '.syntastic_avrgcc_config'$/;"	v
g:syntastic_c_clang_check_sort	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_c_clang_check_sort = 1$/;"	v
g:syntastic_c_clang_tidy_sort	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_c_clang_tidy_sort = 1$/;"	v
g:syntastic_c_compiler_options	plugged/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_c_oclint_sort	plugged/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_c_oclint_sort = 1$/;"	v
g:syntastic_clang_check_config_file	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_clang_check_config_file = '.syntastic_clang_check_config'$/;"	v
g:syntastic_clang_tidy_config_file	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_clang_tidy_config_file = '.syntastic_clang_tidy_config'$/;"	v
g:syntastic_cobol_compiler_options	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler_options = ''$/;"	v
g:syntastic_cpp_compiler_options	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_cpplint_thres	plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_cppcheck_config_file	plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^    let g:syntastic_cppcheck_config_file = '.syntastic_cppcheck_config'$/;"	v
g:syntastic_css_prettycss_sort	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^    let g:syntastic_css_prettycss_sort = 1$/;"	v
g:syntastic_d_compiler_options	plugged/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_enable_balloons	plugged/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_erlc_include_path	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^    let g:syntastic_erlc_include_path = ''$/;"	v
g:syntastic_fortran_compiler_options	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler_options = ''$/;"	v
g:syntastic_haskell_scan_sort	plugged/syntastic/syntax_checkers/haskell/scan.vim	/^    let g:syntastic_haskell_scan_sort = 1$/;"	v
g:syntastic_html_tidy_blocklevel_tags	plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_empty_tags	plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_empty_tags = []$/;"	v
g:syntastic_html_tidy_ignore_errors	plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_inline_tags	plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_inline_tags = []$/;"	v
g:syntastic_html_validator_api	plugged/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_api = 'https:\/\/validator.nu\/'$/;"	v
g:syntastic_html_validator_nsfilter	plugged/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_nsfilter = ''$/;"	v
g:syntastic_html_validator_parser	plugged/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_parser = ''$/;"	v
g:syntastic_html_w3_api	plugged/syntastic/syntax_checkers/html/w3.vim	/^    let g:syntastic_html_w3_api = 'http:\/\/validator.w3.org\/check'$/;"	v
g:syntastic_java_checkstyle_classpath	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-6.10.1-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_config_file	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_custom_classpath_command	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_custom_classpath_command = ''$/;"	v
g:syntastic_java_javac_delete_output	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ['build', 'properties']$/;"	v
g:syntastic_java_javac_options	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_maven_executable	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_java_maven_options	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_options = ''$/;"	v
g:syntastic_javascript_eslint_generic	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_generic = 0$/;"	v
g:syntastic_javascript_eslint_sort	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_sort = 1$/;"	v
g:syntastic_javascript_flow_sort	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^    let g:syntastic_javascript_flow_sort = 1$/;"	v
g:syntastic_javascript_jscs_sort	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^    let g:syntastic_javascript_jscs_sort = 1$/;"	v
g:syntastic_javascript_jshint_sort	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_sort = 1$/;"	v
g:syntastic_javascript_standard_generic	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^    let g:syntastic_javascript_standard_generic = 0$/;"	v
g:syntastic_less_options	plugged/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_options = ''$/;"	v
g:syntastic_less_use_less_lint	plugged/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_markdown_mdl_sort	plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^    let g:syntastic_markdown_mdl_sort = 1$/;"	v
g:syntastic_objc_compiler_options	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objcpp_compiler_options	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_ocaml_use_janestreet_core	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_janestreet_core = 0$/;"	v
g:syntastic_ocaml_use_ocamlbuild	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_oclint_config_file	plugged/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_oclint_config_file = '.syntastic_oclint_config'$/;"	v
g:syntastic_pc_lint_config_file	plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^    let g:syntastic_pc_lint_config_file = 'options.lnt'$/;"	v
g:syntastic_perl_lib_path	plugged/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_lib_path	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_perlcritic_thres	plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_python_prospector_sort	plugged/syntastic/syntax_checkers/python/prospector.vim	/^    let g:syntastic_python_prospector_sort = 1$/;"	v
g:syntastic_python_pylama_sort	plugged/syntastic/syntax_checkers/python/pylama.vim	/^    let g:syntastic_python_pylama_sort = 1$/;"	v
g:syntastic_python_pylint_sort	plugged/syntastic/syntax_checkers/python/pylint.vim	/^    let g:syntastic_python_pylint_sort = 1$/;"	v
g:syntastic_python_python_use_codec	plugged/syntastic/syntax_checkers/python/python.vim	/^    let g:syntastic_python_python_use_codec = 0$/;"	v
g:syntastic_quiet_messages	plugged/syntastic/plugin/syntastic.vim	/^        let g:syntastic_quiet_messages['type'] = s:quiet_warnings$/;"	v
g:syntastic_r_lint_sort	plugged/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_sort = 1$/;"	v
g:syntastic_r_lint_styles	plugged/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_styles = 'lint.style'$/;"	v
g:syntastic_r_lintr_cache	plugged/syntastic/syntax_checkers/r/lintr.vim	/^    let g:syntastic_r_lintr_cache = 'FALSE'$/;"	v
g:syntastic_r_lintr_linters	plugged/syntastic/syntax_checkers/r/lintr.vim	/^    let g:syntastic_r_lintr_linters = 'default_linters'$/;"	v
g:syntastic_r_svtools_styles	plugged/syntastic/syntax_checkers/r/svtools.vim	/^    let g:syntastic_r_svtools_styles = 'lint.style'$/;"	v
g:syntastic_racket_code_ayatollah_script	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_script = 'code-ayatollah.rkt'$/;"	v
g:syntastic_racket_code_ayatollah_sort	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_sort = 1$/;"	v
g:syntastic_ruby_flog_sort	plugged/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_sort = 1$/;"	v
g:syntastic_ruby_flog_threshold_error	plugged/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_threshold_error = 90$/;"	v
g:syntastic_ruby_flog_threshold_warning	plugged/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_threshold_warning = 45$/;"	v
g:syntastic_sass_check_partials	plugged/syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_scalastyle_config_file	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_config_file = 'scalastyle_config.xml'$/;"	v
g:syntastic_scala_scalastyle_jar	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_jar = 'scalastyle-batch_2.10.jar'$/;"	v
g:syntastic_shell	plugged/syntastic/plugin/syntastic.vim	/^    let g:syntastic_shell = &shell$/;"	v
g:syntastic_sparse_config_file	plugged/syntastic/syntax_checkers/c/sparse.vim	/^    let g:syntastic_sparse_config_file = '.syntastic_sparse_config'$/;"	v
g:syntastic_splint_config_file	plugged/syntastic/syntax_checkers/c/splint.vim	/^    let g:syntastic_splint_config_file = '.syntastic_splint_config'$/;"	v
g:syntastic_tex_chktex_showmsgs	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_tex_chktex_sort	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_sort = 1$/;"	v
g:syntastic_text_atdtool_sort	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^    let g:syntastic_text_atdtool_sort = 1$/;"	v
g:syntastic_typescript_tsc_sort	plugged/syntastic/syntax_checkers/typescript/tsc.vim	/^    let g:syntastic_typescript_tsc_sort = 1$/;"	v
g:syntastic_typescript_tslint_sort	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^    let g:syntastic_typescript_tslint_sort = 1$/;"	v
g:syntastic_verapp_config_file	plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^    let g:syntastic_verapp_config_file = '.syntastic_verapp_config'$/;"	v
g:syntastic_verilog_compiler_options	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler_options = '-Wall'$/;"	v
g:syntastic_vim_vint_sort	plugged/syntastic/syntax_checkers/vim/vint.vim	/^    let g:syntastic_vim_vint_sort = 1$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:tagbar_iconchars	plugged/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:winManagerWidth	plugged/winmanager_23/plugin/winmanager.vim	/^	let g:winManagerWidth = 25$/;"	v
g:winManagerWindowLayout	plugged/winmanager_23/plugin/winmanager.vim	/^	let g:winManagerWindowLayout = "FileExplorer,TagsExplorer|BufExplorer"$/;"	v
gather_poses	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:gather_poses(pattern) abort$/;"	f
gather_visible_matched_poses	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:gather_visible_matched_poses(pattern, direction, allow_cursor_pos_match) abort$/;"	f
get	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:get(name, ...) "{{{$/;"	f
get	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:get(...) " {{{$/;"	f
get	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:get(name)$/;"	f
get	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:get(name, ...)$/;"	f
getPromptMessage	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:getPromptMessage(num_strokes) "{{{$/;"	f
getSelectedDirectory	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^function! s:getSelectedDirectory()$/;"	f
get_candidate_dict	plugged/vim-expand-region/autoload/expand_region.vim	/^function! s:get_candidate_dict(text_object)$/;"	f
get_candidate_list	plugged/vim-expand-region/autoload/expand_region.vim	/^function! s:get_candidate_list()$/;"	f
get_char	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:get_char(...) "{{{$/;"	f
get_cmdline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:get_cmdline()$/;"	f
get_cmdline_cword	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:get_cmdline_cword(backward, cword)$/;"	f
get_configuration	plugged/vim-expand-region/autoload/expand_region.vim	/^function! s:get_configuration()$/;"	f
get_escaped_group_char	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:get_escaped_group_char(dict, char) "{{{$/;"	f
get_hit_enter_max_length	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
get_last_selected	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
get_map_str	plugged/tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["test" | Tail], _Path) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_selected_text	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
get_syn_name	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:get_syn_name() "{{{$/;"	f
get_visual_selection	plugged/vim-expand-region/autoload/expand_region.vim	/^function! s:get_visual_selection()$/;"	f
getbookmarks	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f
getchar	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^function! s:getchar(...)$/;"	f
getchar	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	plugged/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar_safe	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getenv	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getenv()$/;"	f
getextvar	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getextvar(key)$/;"	f
gethistdata	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistdata()$/;"	f
gethistloc	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistloc()$/;"	f
getinput	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getinput(...)$/;"	f
getinput	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f
getnewmix	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f
getparent	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getparent(item)$/;"	f
getregs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getregs()$/;"	f
gettime	plugged/tagbar/autoload/tagbar.vim	/^    function! s:gettime() abort$/;"	f
getundo	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:getundo()$/;"	f
gg	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! gg$/;"	m
gg0	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! gg0$/;"	m
git_validate	autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
git_version_requirement	autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
given	plugged/PIV/bin/phpdoc	/^    if($search == '') throw new Exception('No function given.');$/;"	f
glbpath	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:glbpath(...)$/;"	f
glob	autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
glob	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob_dir	autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
globdirs	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f
globpath	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
goto	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! s:goto(line)$/;"	f
goto_markedwin	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
goto_tagbar	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
goto_win	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
group_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:group_list()$/;"	f
guard.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:guard.restore() abort$/;"	f
h	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! h$/;"	m
handleAutochdir	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^function! s:handleAutochdir(switch)$/;"	f
handleEmpty	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:handleEmpty(input, visualmode) "{{{$/;"	f
handleLeftClick	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f
handleSwitchbuf	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^function! s:handleSwitchbuf(switch)$/;"	f
has	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has_common_items	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_patch	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:has_patch(major, minor, patch) abort$/;"	f
has_vimproc	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:has_vimproc() "{{{$/;"	f
hash_match	autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
header	plugged/delimitMate/test/expand_cr.vim	/^    let header = empty(header) ? item[1:] : 'Lines should match.'$/;"	v
header	plugged/delimitMate/test/expand_cr.vim	/^  let header = ''$/;"	v
header	plugged/delimitMate/test/expand_cr.vim	/^let header = ''$/;"	v
headntail	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:headntail(str)$/;"	f
highlight	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f
hs_highlight_boolean	plugged/vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	plugged/vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
i(	plugged/delimitMate/test/eol_marker.vim	/^normal i($/;"	m
iabbrev_map	plugged/supertab/plugin/supertab.vim	/^    let iabbrev_map = iabbrevs =~? '\\<cr>'$/;"	v
ifilter	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ifilter(list, str)$/;"	f
ignore	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ignore()$/;"	f
import	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:import(name, ...) abort$/;"	f
in	plugged/python-syntax/test.py	/^for while if elif else import from as try except finally and in is not or$/;"	i
inc_highlight	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:inc_highlight(re) "{{{$/;"	f
indent	plugged/vim-python-pep8-indent/spec/indent/indent_spec.rb	/^  def indent$/;"	f
indent_like_block	plugged/vim-python-pep8-indent/indent/python.vim	/^function! s:indent_like_block(lnum)$/;"	f
indent_like_opening_paren	plugged/vim-python-pep8-indent/indent/python.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
indent_like_previous_line	plugged/vim-python-pep8-indent/indent/python.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
index	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:index(haystack, needle, ...)$/;"	f
infer_properties	autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
init	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:init() "{{{$/;"	f
init	plugged/vim-ctrlspace/autoload/ctrlspace/context.vim	/^function! s:init()$/;"	f
init	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^function! s:init()$/;"	f
init	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^function! s:init()$/;"	f
initCustomMappings	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! s:initCustomMappings()$/;"	f
initKeyMap	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! s:initKeyMap()$/;"	f
initKeyNames	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^function! s:initKeyNames()$/;"	f
initProjectRootsAndBookmarks	plugged/vim-ctrlspace/autoload/ctrlspace/init.vim	/^function! s:initProjectRootsAndBookmarks()$/;"	f
initVariable	plugged/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_var	plugged/tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
input	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:input(cmdline)$/;"	f
input2	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let input2 = substitute(input, '(', s:l, 'g')$/;"	v
input2	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let input2 = substitute(input2, ')', s:r, 'g')$/;"	v
input_helper	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_q	plugged/delimitMate/test/autoclose_quotes.vim	/^    let input_q = substitute(input,"'" , escape(escape(quote, '"'), '\\'), 'g')$/;"	v
input_safe	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
inputreplacement	plugged/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	plugged/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	plugged/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insertcache	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertcache(str)$/;"	f
insertstr	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertstr()$/;"	f
install	autoload/plug.vim	/^function! s:install(force, names)$/;"	f
internalFilePath	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^function! s:internalFilePath(name)$/;"	f
intersect	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
is	plugged/python-syntax/test.py	/^for while if elif else import from as try except finally and in is not or$/;"	i
is_cmdwin	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:is_cmdwin() "{{{$/;"	f
is_cmdwin	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
is_concealed	plugged/vim-python-pep8-indent/indent/python.vim	/^function! s:is_concealed(line, col)$/;"	f
is_cr_expansion	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_cr_expansion(...) " {{{$/;"	f
is_cursor_inside	plugged/vim-expand-region/autoload/expand_region.vim	/^function! s:is_cursor_inside(pos, region)$/;"	f
is_cygwin	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_dict	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_empty_matchpair	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_empty_matchpair() "{{{$/;"	f
is_empty_quotes	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_empty_quotes() "{{{$/;"	f
is_excluded_ft	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_excluded_ft(ft) "{{{$/;"	f
is_float	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_forbidden	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_forbidden(char) "{{{$/;"	f
is_funcref	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_in_fold	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:is_in_fold(lnum) abort$/;"	f
is_input_waiting	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:is_input_waiting(keymapping, input)$/;"	f
is_jump	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_jump(...) "{{{$/;"	f
is_list	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
is_mac	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_managed	autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
is_number	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_numeric	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_preview_window_open	autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
is_python_string	plugged/vim-python-pep8-indent/indent/python.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
is_smart_quote	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_smart_quote(char) "{{{$/;"	f
is_space_expansion	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_space_expansion() " {{{$/;"	f
is_string	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_unix	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_windows	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_windows() abort$/;"	f
iscmdwin	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:iscmdwin()$/;"	f
ispathitem	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ispathitem()$/;"	f
itemSpace	plugged/vim-ctrlspace/go/file_engine.go	/^const ($/;"	c
items	plugged/vim-ctrlspace/go/file_engine.go	/^	context Context$/;"	v
itemsnumber	plugged/delimitMate/test/autoclose_matchpairs.vim	/^let itemsnumber = len(split(g:delimitMate_matchpairs, '.:.\\zs,\\ze.:.'))$/;"	v
itemsnumber	plugged/delimitMate/test/autoclose_quotes.vim	/^let itemsnumber = len(split(g:delimitMate_quotes, ' '))$/;"	v
job_abort	autoload/plug.vim	/^function! s:job_abort()$/;"	f
job_handler	autoload/plug.vim	/^function! s:job_handler(job_id, data, event) abort$/;"	f
joinUndo	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:joinUndo() "{{{$/;"	f
jumpToChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(currentNode, direction)$/;"	f
jumpToFirstChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(currentNode, forward)$/;"	f
keepBuffersForKeys	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! s:keepBuffersForKeys(dict)$/;"	f
keyHelp	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^function! s:keyHelp(key, description)$/;"	f
known_files.get	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
known_files.getCurrent	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.getCurrent(forcecurrent) abort dict$/;"	f
known_files.has	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
known_files.put	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
known_files.rm	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
known_files.setCurrent	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.setCurrent(fileinfo) abort dict$/;"	f
known_files.setPaused	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.setPaused() abort dict$/;"	f
l	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let l = line('.')$/;"	v
l	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        let l = line('.')$/;"	v
l	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let l = line('.')$/;"	v
lash	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lash(...)$/;"	f
lash	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! s:lash(...)$/;"	f
lastline	autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
lastvisual	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lastvisual()$/;"	f
leavepre	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:leavepre()$/;"	f
length	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:length(str)$/;"	f
lhs_key_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:lhs_key_list(...)$/;"	f
line	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let line = getline('.')$/;"	v
linenr	plugged/delimitMate/test/autoclose_quotes.vim	/^  let linenr += 1$/;"	v
linenr	plugged/delimitMate/test/autoclose_quotes.vim	/^let linenr = 0$/;"	v
lineout	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:lineout(dict)$/;"	f
lines	autoload/plug.vim	/^function! s:lines(msg)$/;"	f
lines	plugged/delimitMate/test/autoclose_matchpairs.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	plugged/delimitMate/test/autoclose_quotes.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	plugged/delimitMate/test/expand_cr.vim	/^  let lines = getline(1, line('$'))$/;"	v
lines	plugged/delimitMate/test/expand_cr.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	plugged/delimitMate/test/expand_space.vim	/^  let lines = getline(1, line('$'))$/;"	v
lines	plugged/delimitMate/test/expand_space.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
links_to	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:links_to(highlight)$/;"	f
lnif	install.sh	/^lnif() {$/;"	f
load	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:load(...) dict abort$/;"	f
loadBufferIntoWindow	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^function! s:loadBufferIntoWindow(winnr)$/;"	f
loadFileOrBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! s:loadFileOrBuffer(file)$/;"	f
loadFilesFromCache	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! s:loadFilesFromCache()$/;"	f
loadWorkspace	plugged/vim-ctrlspace/autoload/ctrlspace/keys/workspace.vim	/^function! s:loadWorkspace(bang, name)$/;"	f
load_smart_dict	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:load_smart_dict() "{{{$/;"	f
loaded_alternateFile	plugged/hc/plugin/a.vim	/^let loaded_alternateFile = 1$/;"	v
loaded_explorer	plugged/winmanager_23/plugin/winfileexplorer.vim	/^	let loaded_explorer = 1$/;"	v
loaded_explorer	plugged/winmanager_23/plugin/winmanager.vim	/^	let loaded_explorer = 1$/;"	v
loaded_minibufexplorer	plugged/minibuffer_632/plugin/minibufexpl.vim	/^let loaded_minibufexplorer = 1$/;"	v
loaded_names	autoload/plug.vim	/^function! s:loaded_names()$/;"	f
loaded_nerd_comments	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_nerd_tree	plugged/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_phpfolding	plugged/PIV/plugin/phpfolding.vim	/^let loaded_phpfolding = 1$/;"	v
loaded_piv	plugged/PIV/ftplugin/php.vim	/^let loaded_piv = 1$/;"	v
loaded_supertab	plugged/supertab/plugin/supertab.vim	/^let loaded_supertab = 1$/;"	v
loaded_taglist	plugged/taglist.vim/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	plugged/taglist.vim/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	plugged/taglist.vim/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	plugged/taglist.vim/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_trailing_whitespace_plugin	plugged/vim-trailing-whitespace/plugin/trailing-whitespace.vim	/^let loaded_trailing_whitespace_plugin = 1$/;"	v
loaded_winfileexplorer	plugged/winmanager_23/plugin/winfileexplorer.vim	/^let loaded_winfileexplorer=1$/;"	v
loaded_winmanager	plugged/winmanager_23/plugin/winmanager.vim	/^let loaded_winmanager = 1$/;"	v
lod	autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
lod_cmd	autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
lod_ft	autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
lod_map	autoload/plug.vim	/^function! s:lod_map(map, names, prefix)$/;"	f
log	autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
log	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:log(m)$/;"	f
logpos	autoload/plug.vim	/^function! s:logpos(name)$/;"	f
lpad	autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
lquote	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:lquote(char) "{{{$/;"	f
lsCmd	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lsCmd()$/;"	f
main	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([File]) ->$/;"	f
main	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main(_) ->$/;"	f
main	plugged/vim-ctrlspace/go/file_engine.go	/^func main() {$/;"	f
main	plugged/vim-ctrlspace/go/file_engine.go	/^package main$/;"	p
main_syntax	plugged/PIV/syntax/htmljinja.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	plugged/PIV/syntax/php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	plugged/Vim-Jinja2-Syntax/syntax/jinja.vim	/^  let main_syntax = 'jinja'$/;"	v
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:make(...)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:make(name, ...)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:make(prefix)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:make(...)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:make(...)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:make(...)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make(chars)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:make(...)$/;"	f
make_emacs	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_emacs()$/;"	f
make_plain	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:make_plain()$/;"	f
make_special_chars	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make_special_chars()$/;"	f
make_vim_cmdline_mapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_vim_cmdline_mapping()$/;"	f
map	plugged/supertab/plugin/supertab.vim	/^      let map = maparg('<cr>', 'i')$/;"	v
map	plugged/supertab/plugin/supertab.vim	/^      let map = s:ExpandMap(map)$/;"	v
map	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! s:map(func, ...)$/;"	f
map	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^function! s:map(fn, ...)$/;"	f
map_accum	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_dict	plugged/supertab/plugin/supertab.vim	/^      let map_dict = maparg('<cr>', 'i', 0, 1)$/;"	v
mark_window	plugged/tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
match	plugged/syntastic/syntax_checkers/python/codec.py	/^        match = re.match(r"#\\s*coding\\s*:\\s*(?P<coding>\\w+)", text[0])$/;"	v
match_expr_on_line	plugged/vim-python-pep8-indent/indent/python.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
match_key	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:match_key(keymapping, key)$/;"	f
match_window_opts	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:match_window_opts()$/;"	f
matches	plugged/PIV/bin/phpdoc	/^    $matches = array();$/;"	v
matchfname	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f
matchlens	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f
matchtabe	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f
matchtabs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f
max	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:max(len, max)$/;"	f
maxDisplayedItems	plugged/vim-ctrlspace/go/file_engine.go	/^	maxSearchedItems  = 200$/;"	c
maxSearchedItems	plugged/vim-ctrlspace/go/file_engine.go	/^	itemSpace         = 5$/;"	c
max_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
maxf	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:maxf(len)$/;"	f
mergelists	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:mergelists()$/;"	f
mfunc	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mfunc()$/;"	f
migemo	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:migemo(str)$/;"	f
min_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
mixedsort	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f
mmode	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mmode()$/;"	f
mode.Disable	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^function! s:mode.Disable() dict$/;"	f
mode.Enable	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^function! s:mode.Enable() dict$/;"	f
mode.HasData	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^function! s:mode.HasData(key) dict$/;"	f
mode.RemoveData	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^function! s:mode.RemoveData(key) dict$/;"	f
mode.SetData	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^function! s:mode.SetData(key, value) dict$/;"	f
mode.new	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^function! s:mode.new(name, listView, data) dict$/;"	f
modeInfo	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^function! s:modeInfo()$/;"	f
modevar	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:modevar()$/;"	f
modify	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f
module.complete	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.complete(cmdline)$/;"	f
module.get_complete_words	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.get_complete_words()$/;"	f
module.histories	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.histories()$/;"	f
module.is_no_insert	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.is_no_insert(char)$/;"	f
module.message	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.message(...)$/;"	f
module.on_char	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_draw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw(cmdline)$/;"	f
module.on_draw_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_draw_pre(...)$/;"	f
module.on_draw_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
module.on_draw_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
module.on_enter	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_enter	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_enter	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_exception	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:module.on_exception(cmdline)$/;"	f
module.on_exception	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_exception(cmdline)$/;"	f
module.on_execute	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute(...)$/;"	f
module.on_execute_failed	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_failed(...)$/;"	f
module.on_execute_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_execute_pre(...)$/;"	f
module.on_execute_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_pre(cmdline)$/;"	f
module.on_leave	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.on_leave	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_leave(...)$/;"	f
module.on_leave	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.on_leave	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.redraw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.redraw(cmdline)$/;"	f
module.reset	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.reset()$/;"	f
motion_map_helper	plugged/vim-easymotion/plugin/EasyMotion.vim	/^function! s:motion_map_helper(motions) "{{{$/;"	f
move	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move(pattern, ...) abort$/;"	f
move_f	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_f(...) abort$/;"	f
move_f2	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_f2() abort$/;"	f
move_to_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_to_win(winnr) abort$/;"	f
move_to_winpos	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_to_winpos(winpos) abort$/;"	f
msg	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f
mtype	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mtype()$/;"	f
multipliers	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:multipliers(...)$/;"	f
names	autoload/plug.vim	/^function! s:names(...)$/;"	f
narrowable	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:narrowable()$/;"	f
natures	plugged/supertab/ftplugin/html.vim	/^        let natures = eclim#project#util#GetProjectNatureAliases(project)$/;"	v
nerdtree#checkForBrowse	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#compareBookmarks	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#compareNodesBySortKey	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f
nerdtree#completeBookmarks	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#deprecated	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#echo	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#exec	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#has_opt	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#loadClassFiles	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#postSourceActions	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#renderView	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#runningWindows	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#ui_glue#bookmarkNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f
nerdtree#ui_glue#chRootCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f
nerdtree#ui_glue#clearBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f
nerdtree#ui_glue#createDefaultBindings	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f
nerdtree#ui_glue#invokeKeyMap	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f
nerdtree#ui_glue#openBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f
nerdtree#ui_glue#revealBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f
nerdtree#ui_glue#setupCommands	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f
nerdtree#ui_glue#upDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(keepState)$/;"	f
nerdtree#version	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
nested_app_ebins	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^nested_app_ebins() ->$/;"	f
new_overwin	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:new_overwin(...) abort$/;"	f
new_window	autoload/plug.vim	/^function! s:new_window()$/;"	f
newcache	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:newcache(cwd)$/;"	f
nocache	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nocache(...)$/;"	f
nocache	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:nocache()$/;"	f
nocache	plugged/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! s:nocache()$/;"	f
nonamecond	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nonamecond(str, filpath)$/;"	f
nosort	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosort()$/;"	f
nosplit	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosplit()$/;"	f
not	plugged/python-syntax/test.py	/^for while if elif else import from as try except finally and in is not or$/;"	i
off_screen_search	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:off_screen_search(re) "{{{$/;"	f
offset	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:offset(lines, height)$/;"	f
omni#common#debug#End	plugged/omnicppcomplete-041/autoload/omni/common/debug.vim	/^function! omni#common#debug#End()$/;"	f
omni#common#debug#Start	plugged/omnicppcomplete-041/autoload/omni/common/debug.vim	/^function! omni#common#debug#Start()$/;"	f
omni#common#debug#Trace	plugged/omnicppcomplete-041/autoload/omni/common/debug.vim	/^function! omni#common#debug#Trace(szFuncName, ...)$/;"	f
omni#common#utils#CompareNumber	plugged/omnicppcomplete-041/autoload/omni/common/utils.vim	/^function! omni#common#utils#CompareNumber(i1, i2)$/;"	f
omni#common#utils#GetWordUnderCursor	plugged/omnicppcomplete-041/autoload/omni/common/utils.vim	/^function! omni#common#utils#GetWordUnderCursor()$/;"	f
omni#common#utils#TagList	plugged/omnicppcomplete-041/autoload/omni/common/utils.vim	/^function! omni#common#utils#TagList(szTagQuery)$/;"	f
omni#common#utils#TagListNoThrow	plugged/omnicppcomplete-041/autoload/omni/common/utils.vim	/^function! omni#common#utils#TagListNoThrow(szTagQuery)$/;"	f
omni#cpp#complete#Init	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Init()$/;"	f
omni#cpp#complete#Main	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Main(findstart, base)$/;"	f
omni#cpp#includes#Display	plugged/omnicppcomplete-041/autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#Display()$/;"	f
omni#cpp#includes#GetList	plugged/omnicppcomplete-041/autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#GetList(...)$/;"	f
omni#cpp#items#Get	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! omni#cpp#items#Get(tokens, ...)$/;"	f
omni#cpp#items#ResolveItemsTypeInfo	plugged/omnicppcomplete-041/autoload/omni/cpp/items.vim	/^function! omni#cpp#items#ResolveItemsTypeInfo(contextStack, items)$/;"	f
omni#cpp#maycomplete#Arrow	plugged/omnicppcomplete-041/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Arrow()$/;"	f
omni#cpp#maycomplete#Complete	plugged/omnicppcomplete-041/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Complete()$/;"	f
omni#cpp#maycomplete#Dot	plugged/omnicppcomplete-041/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Dot()$/;"	f
omni#cpp#maycomplete#Scope	plugged/omnicppcomplete-041/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Scope()$/;"	f
omni#cpp#namespaces#GetContexts	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetContexts()$/;"	f
omni#cpp#namespaces#GetListFromCurrentBuffer	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetListFromCurrentBuffer(...)$/;"	f
omni#cpp#namespaces#GetMapFromBuffer	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromBuffer(szFilePath, ...)$/;"	f
omni#cpp#namespaces#GetMapFromCurrentBuffer	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromCurrentBuffer()$/;"	f
omni#cpp#namespaces#GetUsingNamespaces	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetUsingNamespaces()$/;"	f
omni#cpp#namespaces#ResolveAlias	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAlias(mapNamespaceAlias, szNamespace)$/;"	f
omni#cpp#namespaces#ResolveAll	plugged/omnicppcomplete-041/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAll(namespacesUsed)$/;"	f
omni#cpp#settings#Init	plugged/omnicppcomplete-041/autoload/omni/cpp/settings.vim	/^function! omni#cpp#settings#Init()$/;"	f
omni#cpp#tokenizer#Tokenize	plugged/omnicppcomplete-041/autoload/omni/cpp/tokenizer.vim	/^function! omni#cpp#tokenizer#Tokenize(szCode)$/;"	f
omni#cpp#utils#BuildParenthesisGroups	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#BuildParenthesisGroups(tokens)$/;"	f
omni#cpp#utils#CreateTypeInfo	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#CreateTypeInfo(param)$/;"	f
omni#cpp#utils#ExtractCmdFromTagItem	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractCmdFromTagItem(tagItem)$/;"	f
omni#cpp#utils#ExtractScope	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractScope(tagItem)$/;"	f
omni#cpp#utils#ExtractTypeInfoFromTag	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTag(tagItem)$/;"	f
omni#cpp#utils#ExtractTypeInfoFromTokens	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTokens(tokens)$/;"	f
omni#cpp#utils#GetCastType	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCastType(tokens)$/;"	f
omni#cpp#utils#GetClassInheritanceList	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetClassInheritanceList(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetCode	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCode(posStart, posEnd)$/;"	f
omni#cpp#utils#GetCodeFromLine	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCodeFromLine(szSingleLine)$/;"	f
omni#cpp#utils#GetPreviewWindowStringFromTagItem	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetPreviewWindowStringFromTagItem(tagItem)$/;"	f
omni#cpp#utils#GetResolvedTagItem	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTagItem(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetResolvedTags	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTags(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetTypeInfoString	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetTypeInfoString(typeInfo)$/;"	f
omni#cpp#utils#IsCursorInCommentOrString	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsCursorInCommentOrString()$/;"	f
omni#cpp#utils#IsTypeInfoValid	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsTypeInfoValid(typeInfo)$/;"	f
omni#cpp#utils#ResolveFilePath	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ResolveFilePath(szFile)$/;"	f
omni#cpp#utils#SimplifyParenthesis	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyParenthesis(tokens)$/;"	f
omni#cpp#utils#SimplifyScope	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyScope(szScope)$/;"	f
omni#cpp#utils#TokenizeCurrentInstruction	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstruction(...)$/;"	f
omni#cpp#utils#TokenizeCurrentInstructionUntilWord	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstructionUntilWord()$/;"	f
omni#cpp#utils#expIgnoreComments	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#expIgnoreComments = 'getline(".") =~ g:omni#cpp#utils#reIgnoreComment'$/;"	v
omni#cpp#utils#reIgnoreComment	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#reIgnoreComment = escape('\\\/\\\/\\|\\\/\\*\\|\\*\\\/', '*\/\\')$/;"	v
omni#cpp#utils#szEscapedCharacters	plugged/omnicppcomplete-041/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#szEscapedCharacters = ' %#'$/;"	v
open	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:open(buffer, opener) abort$/;"	f
openExplorer	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target)$/;"	f
openfile	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f
opfunc	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
option.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:option.restore() abort$/;"	f
option_init	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:option_init(name, default) "{{{$/;"	f
opts	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:opts(...)$/;"	f
or	plugged/python-syntax/test.py	/^for while if elif else import from as try except finally and in is not or$/;"	i
or	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:or(xs) abort$/;"	f
origin	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let origin = CursorPos()$/;"	v
os	plugged/syntastic/syntax_checkers/python/codec.py	/^import os$/;"	i
output2	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let output2 = substitute(output, '(', s:l, 'g')$/;"	v
output2	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let output2 = substitute(output2, ')', s:r, 'g')$/;"	v
output_q	plugged/delimitMate/test/autoclose_quotes.vim	/^    let output_q = substitute(output,"'" , escape(escape(quote, '"'), '\\'), 'g')$/;"	v
overwin.choose_prompt	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.choose_prompt(hint_dict) abort$/;"	f
overwin.gather_poses_overwin	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.gather_poses_overwin(pattern) abort$/;"	f
overwin.pattern	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.pattern(pattern) abort$/;"	f
overwin.restore_options	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.restore_options() abort$/;"	f
overwin.select_winpos	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.select_winpos(winnr2poses, keys) abort$/;"	f
overwin.set_options	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.set_options() abort$/;"	f
pair_sort	plugged/vim-python-pep8-indent/indent/python.vim	/^function! s:pair_sort(x, y)$/;"	f
parse	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:parse(highlight)$/;"	f
parse_lhs	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:parse_lhs(text, ...)$/;"	f
parse_lhs_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:parse_lhs_list(...)$/;"	f
parse_options	autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
parse_to_name	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:parse_to_name(highlight)$/;"	f
parseline	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:parseline(line)$/;"	f
partition	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
parts	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:parts(str)$/;"	f
passed	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let passed = line == eval(output2)$/;"	v
passed	plugged/delimitMate/test/expand_cr.vim	/^  let passed = lines == expected$/;"	v
passed	plugged/delimitMate/test/expand_space.vim	/^  let passed = lines == expected$/;"	v
path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
path2directory	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2project_directory	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
pathshorten	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f
permutations	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
php_folding	plugged/PIV/ftplugin/php.vim	/^   let php_folding = 1  "to enable folding for classes and functions$/;"	v
php_html_in_strings	plugged/PIV/ftplugin/php.vim	/^    let php_html_in_strings=1 " to highlight HTML in string$/;"	v
php_noShortTags	plugged/PIV/ftplugin/php.vim	/^    let php_noShortTags = 1 " to disable short tags$/;"	v
php_search	plugged/PIV/bin/phpdoc	/^function php_search($search)$/;"	f
php_sql_query	plugged/PIV/ftplugin/php.vim	/^    let php_sql_query=1 " to highlight SQL syntax in strings$/;"	v
php_sync_method	plugged/PIV/ftplugin/php.vim	/^    let php_sync_method = -1$/;"	v
php_sync_method	plugged/PIV/indent/php.vim	/^let php_sync_method = 0$/;"	v
php_sync_method	plugged/PIV/syntax/php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	plugged/PIV/syntax/php.vim	/^    let php_sync_method=php_minlines$/;"	v
phpcomplete#CompletePHP	plugged/PIV/autoload/phpcomplete.vim	/^function! phpcomplete#CompletePHP(findstart, base)$/;"	f
phpcomplete#GetClassContents	plugged/PIV/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassContents(file, name) " {{{$/;"	f
phpcomplete#GetClassLocation	plugged/PIV/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassLocation(classname) " {{{$/;"	f
phpcomplete#GetClassName	plugged/PIV/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassName(scontext) " {{{$/;"	f
phpcomplete#LoadData	plugged/PIV/autoload/phpcomplete.vim	/^function! phpcomplete#LoadData() " {{{$/;"	f
plug#begin	autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug_window_exists	autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
plugin_name	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:plugin_name() abort$/;"	f
pop	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:pop(list) abort$/;"	f
pos2hint_to_line2col2hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:pos2hint_to_line2col2hint(pos2hint) abort$/;"	f
pos2poskey	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:pos2poskey(pos) abort$/;"	f
poskey2pos	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:poskey2pos(poskey) abort$/;"	f
prepare	autoload/plug.vim	/^function! s:prepare(...)$/;"	f
prepareContent	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! s:prepareContent(items)$/;"	f
previewNodeCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f
preview_commit	autoload/plug.vim	/^function! s:preview_commit()$/;"	f
previous_indent	plugged/vim-python-pep8-indent/spec/indent/indent_spec.rb	/^  def previous_indent$/;"	f
print_function	plugged/syntastic/syntax_checkers/python/codec.py	/^from __future__ import print_function$/;"	i
print_function	plugged/syntastic/syntax_checkers/python/compile.py	/^from __future__ import print_function$/;"	i
process	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f
process	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f
process	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:process(clines, ...)$/;"	f
process	plugged/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
product	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:product(lists) abort$/;"	f
progress_bar	autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
progress_opt	autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
project	plugged/supertab/ftplugin/html.vim	/^      let project = eclim#project#util#GetCurrentProjectName()$/;"	v
promptToDelBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
proposed_indent	plugged/vim-python-pep8-indent/spec/indent/indent_spec.rb	/^  def proposed_indent$/;"	f
push	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
puts	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^function! s:puts(str)$/;"	f
quotes	plugged/delimitMate/test/autoclose_quotes.vim	/^  let quotes = split(g:delimitMate_quotes, '\\s')$/;"	v
rainbow_parentheses#activate	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#activate()$/;"	f
rainbow_parentheses#clear	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#clear()$/;"	f
rainbow_parentheses#load	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#load(...)$/;"	f
rainbow_parentheses#toggle	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#toggle()$/;"	f
rainbow_parentheses#toggleall	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#toggleall()$/;"	f
re	plugged/syntastic/syntax_checkers/python/codec.py	/^import re$/;"	i
read_content	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:read_content(content, ...) abort$/;"	f
reap	autoload/plug.vim	/^function! s:reap(name)$/;"	f
rebar_file	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_file(Dir) ->$/;"	f
rebar_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_opts(RebarFile) ->$/;"	f
record	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:record(bufnr)$/;"	f
redraw	plugged/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
reformat	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f
refreshCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot()$/;"	f
regexfilter	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f
regisfilter	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f
reindent	plugged/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
reload	autoload/plug.vim	/^function! s:reload()$/;"	f
reload	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let reload = 0$/;"	v
reload	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let reload = 1$/;"	v
reload	plugged/delimitMate/test/autoclose_matchpairs.vim	/^let reload = 1$/;"	v
reload	plugged/delimitMate/test/autoclose_quotes.vim	/^    let reload = 0$/;"	v
reload	plugged/delimitMate/test/autoclose_quotes.vim	/^    let reload = 1$/;"	v
reload	plugged/delimitMate/test/autoclose_quotes.vim	/^let reload = 1$/;"	v
remarksigns	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:remarksigns()$/;"	f
removeProjectRoot	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^function! s:removeProjectRoot(directory)$/;"	f
remove_duplicate	plugged/vim-expand-region/autoload/expand_region.vim	/^function! s:remove_duplicate(input)$/;"	f
remove_rtp	autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
remove_triggers	autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
reorg_rtp	autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
resetWindow	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! s:resetWindow()$/;"	f
response	plugged/PIV/bin/phpdoc	/^    $response = php_search($search);$/;"	v
response	plugged/PIV/bin/phpdoc	/^$response = false;$/;"	v
restore_cursor_state	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:restore_cursor_state(visualmode) "{{{$/;"	f
retry	autoload/plug.vim	/^function! s:retry()$/;"	f
revert	autoload/plug.vim	/^function! s:revert()$/;"	f
rhs_key_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:rhs_key_list(...)$/;"	f
rm_rf	autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
rquote	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:rquote(char) "{{{$/;"	f
rtp	autoload/plug.vim	/^  function! s:rtp(spec)$/;"	f
runVimTests	plugged/delimitMate/test/_setup.vim	/^let runVimTests = expand('<sfile>:p:h').'\/build\/runVimTests'$/;"	v
s	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-sn)$/;"	m
s	plugged/vim-easymotion/t/smartsign_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	plugged/vim-easymotion/t/smartsign_spec.vim	/^        map s <Plug>(easymotion-s2)$/;"	m
s!1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s!1$/;"	m
s"1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s"1$/;"	m
s#1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s#1$/;"	m
s$1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s$1$/;"	m
s%1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s%1$/;"	m
s&1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s&1$/;"	m
s'1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s'1$/;"	m
s'2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s'2$/;"	m
s'3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s'3$/;"	m
s(1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s(1$/;"	m
s)1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s)1$/;"	m
s**1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s**1$/;"	m
s*1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s*1$/;"	m
s*81	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s*81$/;"	m
s+1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s+1$/;"	m
s,	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s, 1$/;"	m
s,,1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s,,1$/;"	m
s,,3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s,,3$/;"	m
s,1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s,1$/;"	m
s,2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s,2$/;"	m
s,3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s,3$/;"	m
s,<1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s,<1$/;"	m
s-1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s-1$/;"	m
s-2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s-2$/;"	m
s-3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s-3$/;"	m
s.1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s.1$/;"	m
s.2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s.2$/;"	m
s.3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s.3$/;"	m
s/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map s\/ <Plug>(easymotion-sn)$/;"	m
s/1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s\/1$/;"	m
s/2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s\/2$/;"	m
s/3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s\/3$/;"	m
s01	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s01$/;"	m
s02	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s02$/;"	m
s03	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s03$/;"	m
s1*22	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s1*22$/;"	m
s11	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s11$/;"	m
s12	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s12$/;"	m
s13	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s13$/;"	m
s21	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s21$/;"	m
s22	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s22$/;"	m
s23	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s23$/;"	m
s31	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s31$/;"	m
s32	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s32$/;"	m
s33	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s33$/;"	m
s41	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s41$/;"	m
s42	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s42$/;"	m
s43	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s43$/;"	m
s51	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s51$/;"	m
s52	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s52$/;"	m
s53	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s53$/;"	m
s61	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s61$/;"	m
s62	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s62$/;"	m
s63	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s63$/;"	m
s71	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s71$/;"	m
s72	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s72$/;"	m
s73	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s73$/;"	m
s8*1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s8*1$/;"	m
s81	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s81$/;"	m
s82	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s82$/;"	m
s83	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s83$/;"	m
s881	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s881$/;"	m
s91	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s91$/;"	m
s92	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s92$/;"	m
s93	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s93$/;"	m
s:1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s:1$/;"	m
s:BLOCKLEVEL_TAGS	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:BLOCKLEVEL_TAGS = [$/;"	v
s:BaseTag	plugged/tagbar/autoload/tagbar.vim	/^let s:BaseTag = {}$/;"	v
s:Bookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:CACHE_DEBUG_TRACE	plugged/omnicppcomplete-041/autoload/omni/common/debug.vim	/^let s:CACHE_DEBUG_TRACE = []$/;"	v
s:CACHE_OVERLOADED_FUNCTIONS	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^let s:CACHE_OVERLOADED_FUNCTIONS = {}$/;"	v
s:CACHE_TAG_ENV	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_ENV = ''$/;"	v
s:CACHE_TAG_FILES	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_FILES = {}$/;"	v
s:CACHE_TAG_POPUP_ITEMS	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_POPUP_ITEMS = {}$/;"	v
s:Creator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:DIRECTION	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:DIRECTION = { 'forward': 0, 'backward': 1, 'bidirection': 2}$/;"	v
s:DIRECTION	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:DIRECTION = {'forward': 0, 'backward': 1}$/;"	v
s:EMPTY_TAGS	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:EMPTY_TAGS = [$/;"	v
s:Event	plugged/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:FALSE	plugged/PIV/plugin/phpfolding.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:FALSE = 0$/;"	v
s:FOLD_WITHOUT_PHPDOC	plugged/PIV/plugin/phpfolding.vim	/^let s:FOLD_WITHOUT_PHPDOC = 2$/;"	v
s:FOLD_WITH_PHPDOC	plugged/PIV/plugin/phpfolding.vim	/^let s:FOLD_WITH_PHPDOC = 1$/;"	v
s:FileInfo	plugged/tagbar/autoload/tagbar.vim	/^let s:FileInfo = {}$/;"	v
s:FlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:Highlight	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	let s:Highlight = s:V.import("Palette.Highlight")$/;"	v
s:Hinter	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:Hinter = {$/;"	v
s:HitAHintMotion	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^let s:HitAHintMotion = s:V.import('HitAHint.Motion')$/;"	v
s:IGNORE_ERRORS	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:IGNORE_ERRORS = [$/;"	v
s:INLINE_TAGS	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:INLINE_TAGS = [$/;"	v
s:KeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KindheaderTag	plugged/tagbar/autoload/tagbar.vim	/^let s:KindheaderTag = copy(s:BaseTag)$/;"	v
s:MODE_CREATE_FOLDS	plugged/PIV/plugin/phpfolding.vim	/^let s:MODE_CREATE_FOLDS = 1$/;"	v
s:MODE_REMEMBER_FOLD_SETTINGS	plugged/PIV/plugin/phpfolding.vim	/^let s:MODE_REMEMBER_FOLD_SETTINGS = 2$/;"	v
s:MenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDFileNameEscape	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTreeSortStarIndex	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NewTabCreated	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^let s:NewTabCreated = 0$/;"	v
s:NormalTag	plugged/tagbar/autoload/tagbar.vim	/^let s:NormalTag = copy(s:BaseTag)$/;"	v
s:Notifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:OmniCpp_ShowAccess	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowAccess = g:OmniCpp_ShowAccess$/;"	v
s:OmniCpp_ShowPrototypeInAbbr	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowPrototypeInAbbr = g:OmniCpp_ShowPrototypeInAbbr$/;"	v
s:OmniCpp_ShowScopeInAbbr	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowScopeInAbbr = g:OmniCpp_ShowScopeInAbbr$/;"	v
s:Opener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:PHP_startindenttag	plugged/PIV/indent/php.vim	/^let s:PHP_startindenttag = '<?\\%(.*?>\\)\\@!\\|<script[^>]*>\\%(.*<\\\/script>\\)\\@!'$/;"	v
s:Path	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:PseudoTag	plugged/tagbar/autoload/tagbar.vim	/^let s:PseudoTag = copy(s:BaseTag)$/;"	v
s:SEARCH_PAIR_IMMEDIATELY	plugged/PIV/plugin/phpfolding.vim	/^let s:SEARCH_PAIR_IMMEDIATELY = 2$/;"	v
s:SEARCH_PAIR_START_FIRST	plugged/PIV/plugin/phpfolding.vim	/^let s:SEARCH_PAIR_START_FIRST = 1$/;"	v
s:ShiftTab	plugged/supertab/plugin/supertab.vim	/^        let s:ShiftTab = function(stab)$/;"	v
s:ShiftTab	plugged/supertab/plugin/supertab.vim	/^      let s:ShiftTab = stab$/;"	v
s:TRUE	plugged/PIV/plugin/phpfolding.vim	/^let s:TRUE = 1$/;"	v
s:TRUE	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:TRUE = !0$/;"	v
s:TYPE	autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:Tab	plugged/supertab/plugin/supertab.vim	/^      let s:Tab = function(substitute(existing_tab, '()$', '', ''))$/;"	v
s:Tlist_Skip_Refresh	plugged/taglist.vim/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TypeInfo	plugged/tagbar/autoload/tagbar.vim	/^let s:TypeInfo = {}$/;"	v
s:UI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:UNDEFINED	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:UNDEFINED = function('s:undefined')$/;"	v
s:V	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:V = vital#of('easymotion')$/;"	v
s:V	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^let s:V = vital#of('easymotion')$/;"	v
s:_DEBUG_DUMP_OPTIONS	plugged/syntastic/plugin/syntastic.vim	/^let s:_DEBUG_DUMP_OPTIONS = [$/;"	v
s:_DEFAULT_CHECKERS	plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_CHECKERS = {$/;"	v
s:_DEFAULT_FILETYPE_MAP	plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_FILETYPE_MAP = {$/;"	v
s:_ECLIM_TYPES	plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_ECLIM_TYPES = [$/;"	v
s:_FILE_SHORTCUTS	plugged/syntastic/syntax_checkers/java/javac.vim	/^let s:_FILE_SHORTCUTS = {$/;"	v
s:_NOTIFIER_TYPES	plugged/syntastic/plugin/syntastic/notifiers.vim	/^let s:_NOTIFIER_TYPES = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:_PERSISTENT_NOTIFIERS	plugged/syntastic/plugin/syntastic/notifiers.vim	/^let s:_PERSISTENT_NOTIFIERS = ['signs', 'balloons']$/;"	v
s:_YCM_TYPES	plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_YCM_TYPES = [$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set = {$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.and = s:_base_set.intersection$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.ge = s:_base_set.issuperset$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.le = s:_base_set.issubset$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.or = s:_base_set.union$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.sub = s:_base_set.difference$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.xor = s:_base_set.symmetric_difference$/;"	v
s:_delete	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_delete = function(v:version > 704 || (v:version == 704 && has('patch1128')) ? 'delete' : 's:_delete_dumb')$/;"	v
s:_engine	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:_engine = exists("+regexpengine") ? '\\%#=2' : ''$/;"	v
s:_float2str	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_float2str = function(has('float') ? 's:_float2str_smart' : 's:_float2str_dumb')$/;"	v
s:_function	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  let s:_function = function('function')$/;"	v
s:_isDebugEnabled	plugged/syntastic/autoload/syntastic/log.vim	/^let s:_isDebugEnabled = function(exists('*and') ? 's:_isDebugEnabled_smart' : 's:_isDebugEnabled_dumb')$/;"	v
s:_log_timestamp	plugged/syntastic/autoload/syntastic/log.vim	/^let s:_log_timestamp = function(has('float') && exists('*reltimefloat') ? 's:_log_timestamp_smart' : 's:_log_timestamp_dumb')$/;"	v
s:_quit_pre	plugged/syntastic/plugin/syntastic.vim	/^let s:_quit_pre = []$/;"	v
s:_regex	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:_regex = exists("+regexpengine")$/;"	v
s:_running_windows	plugged/syntastic/plugin/syntastic.vim	/^let s:_running_windows = syntastic#util#isRunningWindows()$/;"	v
s:_s	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_str2float	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_str2float = function(exists('*str2float') ? 'str2float' : 'str2nr')$/;"	v
s:_unify_path_cache	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^let s:_unify_path_cache = {}$/;"	v
s:_wid_base	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_wid_base = 'syntastic_' . getpid() . '_' . reltimestr(g:_SYNTASTIC_START) . '_'$/;"	v
s:_wid_pool	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_wid_pool = 0$/;"	v
s:_width	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_width = function(exists('*strwidth') ? 'strwidth' : 'strlen')$/;"	v
s:allBuffers	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^let s:allBuffers = {}$/;"	v
s:args_after	plugged/syntastic/syntax_checkers/css/stylelint.vim	/^let s:args_after = {$/;"	v
s:ars	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:autocommands_done	plugged/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:autoresetoptions	plugged/PIV/indent/php.vim	/^    let s:autoresetoptions = 1$/;"	v
s:autoresetoptions	plugged/PIV/indent/php.vim	/^let s:autoresetoptions = 0$/;"	v
s:b	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:bMayComplete	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^let s:bMayComplete = 0$/;"	v
s:back	plugged/vim-colors-solarized/colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:base	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	let s:base.variables.modules = s:Signals.make()$/;"	v
s:base	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^let s:base = {$/;"	v
s:base	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^let s:base = {$/;"	v
s:base	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:base = {}$/;"	v
s:base0	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:base_dir	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^let s:base_dir = expand('<sfile>:h')$/;"	v
s:base_path	plugged/syntastic/syntax_checkers/python/python.vim	/^let s:base_path = expand('<sfile>:p:h', 1) . syntastic#util#Slash()$/;"	v
s:base_spec	autoload/plug.vim	/^let s:base_spec = { 'branch': 'master', 'frozen': 0 }$/;"	v
s:bb	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:bins	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:bins = [$/;"	v
s:block_rules	plugged/vim-python-pep8-indent/indent/python.vim	/^let s:block_rules = {$/;"	v
s:blockstart	plugged/PIV/indent/php.vim	/^let s:blockstart = '\\%(\\%(\\%(}\\s*\\)\\=else\\%(\\s\\+\\)\\=\\)\\=if\\>\\|else\\>\\|while\\>\\|switch\\>\\|case\\>\\|default\\>\\|for\\%(each\\)\\=\\>\\|declare\\>\\|class\\>\\|interface\\>\\|abstract\\>\\|try\\>\\|catch\\>\\)'$/;"	v
s:blue	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:bookmarks	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^let s:bookmarks = []$/;"	v
s:bright	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:c	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:cache_command	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:cache_command = {}$/;"	v
s:cache_module_path	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^let s:cache_module_path = {}$/;"	v
s:cache_sid	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^let s:cache_sid = {}$/;"	v
s:can_preserve_syntax	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:can_preserve_syntax = s:has_patch(7, 4, 792)$/;"	v
s:candidates	plugged/vim-expand-region/autoload/expand_region.vim	/^let s:candidates = []$/;"	v
s:ccex	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:characters	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^let s:characters     = {}$/;"	v
s:check_file	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^let s:check_file = syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'erlang_check_file.erl')$/;"	v
s:checked_ctags	plugged/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	plugged/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:clickmap	plugged/minibuffer_632/plugin/minibufexpl.vim	/^  let s:clickmap = ':if bufname("%") == "-MiniBufExplorer-" <bar> call <SID>MBEClick() <bar> endif <CR>'$/;"	v
s:cmdheight	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:cmdheight = {}$/;"	v
s:cmdline	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:cmdline = s:V.import('Over.Commandline.Base')$/;"	v
s:collection	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^let s:collection      = {}$/;"	v
s:colorscheme_list	plugged/vim-colors-solarized/colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:commonMap	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^let s:commonMap    = {}$/;"	v
s:compare_lim	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:compare_lim = 3000$/;"	v
s:compare_typeinfo	plugged/tagbar/autoload/tagbar.vim	/^let s:compare_typeinfo = {}$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^let s:config    = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^let s:config     = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^let s:config     = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^let s:config        = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/init.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/jumps.vim	/^let s:config      = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^let s:config         = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/keys/bookmark.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^let s:config       = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/keys/nop.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/keys/search.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/keys/workspace.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^let s:config              = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/tabs.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/ui.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^let s:config = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^let s:config     = ctrlspace#context#Configuration()$/;"	v
s:config	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:config = {$/;"	v
s:configuration	plugged/vim-ctrlspace/autoload/ctrlspace/context.vim	/^let s:configuration = {$/;"	v
s:control_statement	plugged/vim-python-pep8-indent/indent/python.vim	/^let s:control_statement = '^\\s*\\(class\\|def\\|if\\|while\\|with\\|for\\|except\\)\\>'$/;"	v
s:cpo_save	autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/taglist.vim/plugin/taglist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/winmanager_23/plugin/winfileexplorer.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/winmanager_23/plugin/winmanager.vim	/^let s:cpo_save = &cpo$/;"	v
s:cppKeyword	plugged/omnicppcomplete-041/autoload/omni/cpp/tokenizer.vim	/^let s:cppKeyword = ['asm', 'auto', 'bool', 'break', 'case', 'catch', 'char', 'class', 'const', 'const_cast', 'continue', 'default', 'delete', 'do', 'double', 'dynamic_cast', 'else', 'enum', 'explicit', 'export', 'extern', 'false', 'float', 'for', 'friend', 'goto', 'if', 'inline', 'int', 'long', 'mutable', 'namespace', 'new', 'operator', 'private', 'protected', 'public', 'register', 'reinterpret_cast', 'return', 'short', 'signed', 'sizeof', 'static', 'static_cast', 'struct', 'switch', 'template', 'this', 'throw', 'true', 'try', 'typedef', 'typeid', 'typename', 'union', 'unsigned', 'using', 'virtual', 'void', 'volatile', 'wchar_t', 'while', 'and', 'and_eq', 'bitand', 'bitor', 'compl', 'not', 'not_eq', 'or', 'or_eq', 'xor', 'xor_eq']$/;"	v
s:cppOperatorPunctuator	plugged/omnicppcomplete-041/autoload/omni/cpp/tokenizer.vim	/^let s:cppOperatorPunctuator = ['->*', '->', '--', '-=', '-', '!=', '!', '##', '#', '%:%:', '%=', '%>', '%:', '%', '&&', '&=', '&', '(', ')', '*=', '*', ',', '...', '.*', '.', '\/=', '\/', '::', ':>', ':', ';', '?', '[', ']', '^=', '^', '{', '||', '|=', '|', '}', '~', '++', '+=', '+', '<<=', '<%', '<:', '<<', '<=', '<', '==', '=', '>>=', '>>', '>=', '>']$/;"	v
s:ctags_types	plugged/tagbar/autoload/tagbar.vim	/^let s:ctags_types         = {}$/;"	v
s:cur_index	plugged/vim-expand-region/autoload/expand_region.vim	/^let s:cur_index = -1$/;"	v
s:currentListView	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^let s:currentListView = {}$/;"	v
s:currentProjectRoot	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^let s:currentProjectRoot = ""$/;"	v
s:cyan	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:debug	plugged/tagbar/autoload/tagbar.vim	/^let s:debug = 0$/;"	v
s:debugIndex	plugged/minibuffer_632/plugin/minibufexpl.vim	/^let s:debugIndex = 0 $/;"	v
s:debug_file	plugged/tagbar/autoload/tagbar.vim	/^let s:debug_file = ''$/;"	v
s:defaultORcase	plugged/PIV/indent/php.vim	/^let s:defaultORcase = '^\\s*\\%(default\\|case\\).*:'$/;"	v
s:default_includes	plugged/syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [$/;"	v
s:defaults_list	plugged/vim-colors-solarized/colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:delimiterMap	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let s:delimiterMap = {$/;"	v
s:descriptions	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^let s:descriptions = {$/;"	v
s:dirArrows	plugged/nerdtree/syntax/nerdtree.vim	/^let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~').escape(g:NERDTreeDirArrowExpandable, '~')$/;"	v
s:dircounts	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:dircounts = {}$/;"	v
s:emacs	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:emacs = {$/;"	v
s:endline	plugged/PIV/indent/php.vim	/^let s:endline= '\\s*\\%(\/\/.*\\|#.*\\|\/\\*.*\\*\/\\s*\\)\\=$'$/;"	v
s:errors	plugged/vim-ctrlspace/plugin/ctrlspace.vim	/^let s:errors = []$/;"	v
s:escfilename	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let s:escfilename = ' %#'$/;"	v
s:escfilename	plugged/winmanager_23/plugin/winfileexplorer.vim	/^  let s:escfilename = ' \\%#'$/;"	v
s:escfilename	plugged/winmanager_23/plugin/winmanager.vim	/^	let s:escfilename = ' %#'$/;"	v
s:escfilename	plugged/winmanager_23/plugin/winmanager.vim	/^	let s:escfilename = ' \\%#'$/;"	v
s:escregexp	plugged/winmanager_23/plugin/winfileexplorer.vim	/^let s:escregexp = '\/*^$.~\\'$/;"	v
s:expand_bufnr	plugged/tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:externalBufnr	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^let s:externalBufnr = -1$/;"	v
s:favDirs	plugged/winmanager_23/plugin/winfileexplorer.vim	/^		let s:favDirs = expand('$HOME').'\/'$/;"	v
s:favDirs	plugged/winmanager_23/plugin/winfileexplorer.vim	/^		let s:favDirs = g:favDirs."\\\/\\n".expand('$HOME')$/;"	v
s:favDirs	plugged/winmanager_23/plugin/winfileexplorer.vim	/^let s:favDirs = substitute(s:favDirs, '\\', '\/', 'g')$/;"	v
s:favDirs	plugged/winmanager_23/plugin/winfileexplorer.vim	/^let s:favDirs = substitute(s:favDirs, '\\\/\\\/', '\\\/', 'g')$/;"	v
s:fg_pdef	plugged/vim-colors-solarized/colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	plugged/vim-colors-solarized/colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	plugged/vim-colors-solarized/colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:ficounts	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:filecounts	plugged/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:filecounts = {}$/;"	v
s:files	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^let s:files  = []$/;"	v
s:first_rtp	autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:first_sign_id	plugged/syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:fpats	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:fpats = {$/;"	v
s:frozenset	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:frozenset = deepcopy(s:_base_set)$/;"	v
s:gdb_k	plugged/vimgdb_runtime/macros/gdb_mappings.vim	/^let s:gdb_k = 1$/;"	v
s:ghc_mod_new	plugged/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:ghc_mod_new = -1$/;"	v
s:glbs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:glsl_extensions	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:glsl_extensions = {$/;"	v
s:green	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:grouping_algorithms	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:grouping_algorithms = {$/;"	v
s:guard	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:guard = {}$/;"	v
s:h	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^    let s:h.ids[s:group] = []$/;"	v
s:h	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:h = {}$/;"	v
s:h	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:h.ids = {}$/;"	v
s:hasPreviewWindow	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindow = match(&completeopt, 'preview')>=0$/;"	v
s:hasPreviewWindowOld	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindowOld = s:hasPreviewWindow$/;"	v
s:has_dict_maparg	plugged/supertab/plugin/supertab.vim	/^  let s:has_dict_maparg = v:version > 703 || (v:version == 703 && has('patch32'))$/;"	v
s:has_highlighting	plugged/syntastic/plugin/syntastic/highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:has_maven	plugged/syntastic/syntax_checkers/java/javac.vim	/^let s:has_maven = 0$/;"	v
s:helpMap	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^let s:helpMap = {$/;"	v
s:helpMap	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^let s:helpMap      = {}$/;"	v
s:hlgrps	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:hooks	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks = [$/;"	v
s:hooks_camel	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks_camel = [$/;"	v
s:i	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:icon_closed	plugged/tagbar/autoload/tagbar.vim	/^let s:icon_closed = g:tagbar_iconchars[0]$/;"	v
s:icon_open	plugged/tagbar/autoload/tagbar.vim	/^let s:icon_open   = g:tagbar_iconchars[1]$/;"	v
s:ics	plugged/tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:imports	plugged/syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = '--compass'$/;"	v
s:imports	plugged/syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ''$/;"	v
s:is_cygwin	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_mac	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_maximized	plugged/tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_unix	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_win	autoload/plug.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_windows	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:items	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^let s:items  = []$/;"	v
s:jumpCounter	plugged/vim-ctrlspace/autoload/ctrlspace/jumps.vim	/^let s:jumpCounter = 0$/;"	v
s:keyEscSequence	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^let s:keyEscSequence = 0$/;"	v
s:keyMap	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^let s:keyMap         = {}$/;"	v
s:keyNames	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^let s:keyNames       = []$/;"	v
s:known_files	plugged/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:kprange	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:kprange = {$/;"	v
s:lastListView	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^let s:lastListView = "Buffer"$/;"	v
s:lastProjectRoot	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^let s:lastProjectRoot    = ""$/;"	v
s:last_highlight_tline	plugged/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:last_rtp	autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:lazycat_list	plugged/vim-colors-solarized/colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:lenSpaceStr	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:lists	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^let s:lists           = []$/;"	v
s:loaded	autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:loaded = s:FALSE$/;"	v
s:loaded	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^let s:loaded = {}$/;"	v
s:loaded_delimitMate	plugged/delimitMate/plugin/delimitMate.vim	/^let s:loaded_delimitMate = 1$/;"	v
s:loadtgl	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^let s:loadtgl = exists('g:rbpt_loadcmd_toggle') ? g:rbpt_loadcmd_toggle : 0$/;"	v
s:m	plugged/minibuffer_632/plugin/minibufexpl.vim	/^    let  s:m = ':nnoremap <silent> <LEFTMOUSE> <LEFTMOUSE>'$/;"	v
s:m	plugged/minibuffer_632/plugin/minibufexpl.vim	/^    let  s:m = s:m . s:clickmap$/;"	v
s:m	plugged/minibuffer_632/plugin/minibufexpl.vim	/^    let  s:m = s:m . substitute(substitute(maparg('<LEFTMOUSE>', 'n'), '|', '<bar>', 'g'), '\\c^<LEFTMOUSE>', '', '')$/;"	v
s:mac_gui	autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:magenta	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:max	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^let s:max = exists('g:rbpt_max') ? g:rbpt_max : max([len(s:pairs), 16])$/;"	v
s:maxDotsInExtension	plugged/hc/plugin/a.vim	/^let s:maxDotsInExtension = 1$/;"	v
s:maxTabWidth	plugged/minibuffer_632/plugin/minibufexpl.vim	/^let s:maxTabWidth = 0 $/;"	v
s:maximal_number_of_compared_movments	plugged/vim-easymotion/t/compare_movements_spec.vim	/^let s:maximal_number_of_compared_movments = 10000$/;"	v
s:maxoff	plugged/vim-python-pep8-indent/indent/python.vim	/^let s:maxoff = 50$/;"	v
s:me	autoload/plug.vim	/^let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:menu_char_prefix	plugged/taglist.vim/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:mode	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^let s:mode = {$/;"	v
s:modemap	plugged/syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:modep	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^let s:modep = "[nvoicsxl]"$/;"	v
s:modes	plugged/supertab/plugin/supertab.vim	/^  let s:modes = '\/^E\/^Y\/^L\/^N\/^K\/^T\/^I\/^]\/^F\/^D\/^V\/^P\/^U\/^O\/s'$/;"	v
s:modes	plugged/supertab/plugin/supertab.vim	/^  let s:modes = s:modes . '\/n\/p'$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/api.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/bookmarks.vim	/^let s:modes     = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/buffers.vim	/^let s:modes      = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^let s:modes      = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^let s:modes         = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/init.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/jumps.vim	/^let s:modes       = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/keys.vim	/^let s:modes          = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/keys/bookmark.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^let s:modes        = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/keys/file.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/keys/help.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/keys/nop.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/keys/search.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/keys/tab.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/keys/workspace.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^let s:modes               = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/tabs.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/ui.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/util.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^let s:modes  = ctrlspace#modes#Modes()$/;"	v
s:modes	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^let s:modes      = ctrlspace#modes#Modes()$/;"	v
s:module	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^let s:module = {$/;"	v
s:modules	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:modules = s:V.import("Over.Commandline.Modules")$/;"	v
s:molokai_original	plugged/molokai/colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	plugged/molokai/colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:n	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:nearby_disabled	plugged/tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:new_window	plugged/tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:next_sign_id	plugged/syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:noLists	plugged/vim-ctrlspace/autoload/ctrlspace/modes.vim	/^let s:noLists         = []$/;"	v
s:node_file	plugged/syntastic/syntax_checkers/less/lessc.vim	/^let s:node_file = 'node ' . syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'less-lint.js')$/;"	v
s:none	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:notPhpHereDoc	plugged/PIV/indent/php.vim	/^let s:notPhpHereDoc = '\\%(break\\|return\\|continue\\|exit\\|die\\|else\\)'$/;"	v
s:notifiers	plugged/syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:numExplorerGroups	plugged/winmanager_23/plugin/winmanager.vim	/^let s:numExplorerGroups = 0$/;"	v
s:numExplorers	plugged/winmanager_23/plugin/winmanager.vim	/^let s:numExplorers = 0$/;"	v
s:nvim	autoload/plug.vim	/^let s:nvim = has('nvim') && exists('*jobwait') && !s:is_win$/;"	v
s:ob	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:ocamlpp	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp='camlp4o'$/;"	v
s:ocamlpp	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp='camlp4r'$/;"	v
s:old_cpo	plugged/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_width	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:old_width = 0$/;"	v
s:one_time_notices_issued	plugged/syntastic/autoload/syntastic/log.vim	/^let s:one_time_notices_issued = []$/;"	v
s:option	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:option = {}$/;"	v
s:options	plugged/delimitMate/autoload/delimitMate.vim	/^  let s:options = {}$/;"	v
s:options_list	plugged/vim-colors-solarized/colors/solarized.vim	/^let s:options_list=[$/;"	v
s:orange	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:ou	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:overwin	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:overwin = {$/;"	v
s:pairs	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^let s:pairs = [$/;"	v
s:pairs	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^let s:pairs = exists('g:rbpt_colorpairs') ? g:rbpt_colorpairs : s:pairs$/;"	v
s:paren_pairs	plugged/vim-python-pep8-indent/indent/python.vim	/^let s:paren_pairs = ['()', '{}', '[]']$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:paused	plugged/tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:plug_buf	autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_src	autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:pluginBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/context.vim	/^let s:pluginBuffer = -1$/;"	v
s:pluginFolder	plugged/vim-ctrlspace/autoload/ctrlspace/context.vim	/^let s:pluginFolder = fnamemodify(resolve(expand('<sfile>:p')), ':h:h:h')$/;"	v
s:popupItemResultList	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^let s:popupItemResultList = []$/;"	v
s:prefix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:prefix = printf("vital-over(%s) Exception", s:vname)$/;"	v
s:priorities	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:priorities = {$/;"	v
s:projectRoots	plugged/vim-ctrlspace/autoload/ctrlspace/roots.vim	/^let s:projectRoots       = {}$/;"	v
s:pwin_by_tagbar	plugged/tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:pylint_new	plugged/syntastic/syntax_checkers/python/pylint.vim	/^let s:pylint_new = -1$/;"	v
s:quiet_warnings	plugged/syntastic/plugin/syntastic.vim	/^            let s:quiet_warnings = [s:quiet_warnings]$/;"	v
s:quiet_warnings	plugged/syntastic/plugin/syntastic.vim	/^        let s:quiet_warnings = get(g:syntastic_quiet_messages, 'type', [])$/;"	v
s:r	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:reCComment	plugged/omnicppcomplete-041/autoload/omni/cpp/tokenizer.vim	/^let s:reCComment = '\\\/\\*\\|\\*\\\/'$/;"	v
s:reComment	plugged/omnicppcomplete-041/autoload/omni/cpp/tokenizer.vim	/^let s:reComment = s:reCComment.'\\|'.s:reCppComment$/;"	v
s:reCppComment	plugged/omnicppcomplete-041/autoload/omni/cpp/tokenizer.vim	/^let s:reCppComment = '\\\/\\\/'$/;"	v
s:reCppKeyword	plugged/omnicppcomplete-041/autoload/omni/cpp/tokenizer.vim	/^let s:reCppKeyword = '\\C\\<'.join(s:cppKeyword, '\\>\\|\\<').'\\>'$/;"	v
s:reCppOperatorOrPunctuator	plugged/omnicppcomplete-041/autoload/omni/cpp/tokenizer.vim	/^let s:reCppOperatorOrPunctuator = escape(join(s:cppOperatorPunctuator, '\\|'), '*.\/^~[]')$/;"	v
s:reIncludeFilePart	plugged/omnicppcomplete-041/autoload/omni/cpp/includes.vim	/^let s:reIncludeFilePart = '\\(<\\|"\\)\\(\\f\\|\\s\\)\\+\\(>\\|"\\)'$/;"	v
s:rePreprocIncludeFile	plugged/omnicppcomplete-041/autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludeFile = s:rePreprocIncludePart . s:reIncludeFilePart$/;"	v
s:rePreprocIncludePart	plugged/omnicppcomplete-041/autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludePart = '\\C#\\s*include\\s*'$/;"	v
s:red	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:registry	plugged/syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:resonators	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^let s:resonators = ['.', '\/', '_', '-', ' ']$/;"	v
s:root_dir	plugged/vim-easymotion/t/compare_movements_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	plugged/vim-easymotion/t/easymotion_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	plugged/vim-easymotion/t/operator_pending_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	plugged/vim-easymotion/t/smartsign_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:rst2pseudoxml	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:rst2pseudoxml = (executable('rst2pseudoxml.py') && !syntastic#util#isRunningWindows()) ? 'rst2pseudoxml.py' : 'rst2pseudoxml'$/;"	v
s:s	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:sass_cache_location	plugged/syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = syntastic#util#tmpdir()$/;"	v
s:save_cpo	plugged/supertab/plugin/supertab.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/preprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/applescript/osacompile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/bro/bro.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/oclint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/sparse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/splint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/chef/foodcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/co/coco.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/coq/coqtop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cs/mcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/css/csslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/css/stylelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cuda/nvcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/docbk/igor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/gofmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/golint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/gometalinter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/gotype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/govet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haml/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haml/haml_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haskell/scan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haxe/haxe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/hss/hss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/validator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/w3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/java/javac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/gjslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/json/jsonlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/json/jsonval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/less/lessc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/less/recess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/lex/flex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/limbo/limbo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/lisp/clisp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/llvm/llvm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/lua/luac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/matlab/mlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/mercury/mmc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/nasm/nasm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/nix/nix.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/nroff/mandoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/perl/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/phpcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/phplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/phpmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/pod/podchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/pug/pug_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/puppet/puppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/frosted.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/mypy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pep8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/prospector.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/py3kwarn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pydocstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pylama.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/qml/qmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/r/lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/r/lintr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/r/svtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/racket/racket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/rnc/rnv.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/rst/rstcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/flog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/jruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/macruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/reek.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/rubylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sass/sass.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sass/sassc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/scala/fsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/scala/scalac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/bashate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/slim/slim_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/slim/slimrb.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sml/smlnj.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/spec/rpmlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/stylus/stylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/tex/lacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/text/language_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/twig/twiglint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/typescript/tsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vala/valac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/verilog/iverilog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vhdl/vcom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vim/vint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/xml/plutil.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/xml/xmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/xquery/basex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yacc/bison.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yaml/yamllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/zpt/zptlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/zsh/zsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-expand-region/autoload/expand_region.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-expand-region/plugin/expand_region.vim	/^let s:save_cpo = &cpo$/;"	v
s:savedCursorCol	plugged/winmanager_23/plugin/wintagexplorer.vim	/^let s:savedCursorCol = 1$/;"	v
s:savedCursorRow	plugged/winmanager_23/plugin/wintagexplorer.vim	/^let s:savedCursorRow = 1$/;"	v
s:saved_pos	plugged/vim-expand-region/autoload/expand_region.vim	/^let s:saved_pos = []$/;"	v
s:saved_selectmode	plugged/vim-expand-region/autoload/expand_region.vim	/^let s:saved_selectmode = &selectmode$/;"	v
s:search	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:search = s:cmdline.make()$/;"	v
s:search	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:search.highlights.prompt = 'Question'$/;"	v
s:searchpairflags	plugged/PIV/indent/php.vim	/^let s:searchpairflags = 'bWr'$/;"	v
s:self_file	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_version	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:separator	plugged/winmanager_23/plugin/winfileexplorer.vim	/^let s:separator='"---------------------------------------------------'$/;"	v
s:set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:set = deepcopy(s:_base_set)$/;"	v
s:setup_done	plugged/syntastic/plugin/syntastic/highlighting.vim	/^let s:setup_done = 0$/;"	v
s:setup_done	plugged/syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:shade_hl_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:shade_hl_defaults = {$/;"	v
s:shade_hl_line_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:shade_hl_line_defaults = {$/;"	v
s:short_help	plugged/tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:sizes	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^let s:sizes         = ctrlspace#context#SymbolSizes()$/;"	v
s:skip_after_opening_paren	plugged/vim-python-pep8-indent/indent/python.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_search	plugged/vim-python-pep8-indent/indent/python.vim	/^let s:skip_search = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_special_chars	plugged/vim-python-pep8-indent/indent/python.vim	/^    let s:skip_special_chars .= '|| s:is_concealed(line("."), col("."))'$/;"	v
s:skip_special_chars	plugged/vim-python-pep8-indent/indent/python.vim	/^let s:skip_special_chars = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:solarized_termtrans_default	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sortKeyFormat	plugged/nerdtree/lib/nerdtree/path.vim	/^    let s:sortKeyFormat = "%0" . float2nr(ceil(log10(len(g:NERDTreeSortOrder)))) . "d"$/;"	v
s:sortKeyFormat	plugged/nerdtree/lib/nerdtree/path.vim	/^    let s:sortKeyFormat = "%04d"$/;"	v
s:sp_back	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:spaceStr	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let s:spaceStr = ' '$/;"	v
s:sphinx_cache_location	plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^let s:sphinx_cache_location = syntastic#util#tmpdir()$/;"	v
s:statusline_in_use	plugged/tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:stop_statement	plugged/vim-python-pep8-indent/indent/python.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:synIDattr_exists	plugged/PIV/plugin/phpfolding.vim	/^let s:synIDattr_exists = exists('*synIDattr')$/;"	v
s:szCurrentWorkingDir	plugged/omnicppcomplete-041/autoload/omni/cpp/complete.vim	/^let s:szCurrentWorkingDir = getcwd()$/;"	v
s:t_none	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tabHelp	plugged/supertab/plugin/supertab.vim	/^  let s:tabHelp =$/;"	v
s:target_hl2_first_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl2_first_defaults = {$/;"	v
s:target_hl2_second_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl2_second_defaults = {$/;"	v
s:target_hl_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_defaults = {$/;"	v
s:target_hl_inc	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_inc = {$/;"	v
s:target_hl_inc_cursor	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_inc_cursor = {$/;"	v
s:target_hl_move	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_move = {$/;"	v
s:temp00	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:terminal_italic	plugged/vim-colors-solarized/colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms_italic	plugged/vim-colors-solarized/colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	plugged/vim-colors-solarized/colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:text	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:textBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/help.vim	/^let s:textBuffer    = []$/;"	v
s:tlist_app_name	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_asm_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_aspvbs_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_awk_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_beta_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_eiffel_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_fortran_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_html_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
s:tlist_def_java_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
s:tlist_def_lisp_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_pascal_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;d:constant;v:variable;f:function'$/;"	v
s:tlist_def_python_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
s:tlist_def_tcl_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_vera_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vim_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
s:tlist_def_yacc_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	plugged/taglist.vim/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	plugged/taglist.vim/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:to_cursor	plugged/vim-easymotion/t/compare_movements_spec.vim	/^let s:to_cursor = {}$/;"	v
s:tree_up_dir_line	plugged/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:triggers	autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:type_init_done	plugged/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:type_map	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:type_map = {}$/;"	v
s:types	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:types = {$/;"	v
s:types	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^let s:types = [['(',')'],['\\[','\\]'],['{','}'],['<','>']]$/;"	v
s:types	plugged/supertab/plugin/supertab.vim	/^  let s:types = s:types . "np"$/;"	v
s:types	plugged/supertab/plugin/supertab.vim	/^  let s:types =$/;"	v
s:u	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:undo_lock	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:undo_lock = {}$/;"	v
s:updateSearchResults	plugged/vim-ctrlspace/autoload/ctrlspace/search.vim	/^let s:updateSearchResults = 0$/;"	v
s:variable	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:variable = {}$/;"	v
s:verbosefiles	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^let s:verbosefiles = []$/;"	v
s:vim_cmdline_mapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:vim_cmdline_mapping = {$/;"	v
s:violet	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:visibility_symbols	plugged/tagbar/autoload/tagbar.vim	/^let s:visibility_symbols = {$/;"	v
s:vmode	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:vname	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:vname = expand("<sfile>:h:h:h:h:t")$/;"	v
s:vname	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:vname = expand("<sfile>:h:h:t")$/;"	v
s:warnings	plugged/tagbar/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:wig_cond	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:window_expanded	plugged/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	plugged/tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:winrestcmd	plugged/tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:workspaces	plugged/vim-ctrlspace/autoload/ctrlspace/workspaces.vim	/^let s:workspaces = []$/;"	v
s:yellow	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	plugged/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s;1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s;1$/;"	m
s;2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s;2$/;"	m
s;3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s;3$/;"	m
s<,1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s<,1$/;"	m
s<1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s<1$/;"	m
s<<1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s<<1$/;"	m
s=1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s=1$/;"	m
s=2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s=2$/;"	m
s=3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s=3$/;"	m
s>1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s>1$/;"	m
s?1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s?1$/;"	m
s@1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s@1$/;"	m
s[1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s[1$/;"	m
s[2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s[2$/;"	m
s[3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s[3$/;"	m
s\1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s\\1$/;"	m
s\2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s\\2$/;"	m
s\3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s\\3$/;"	m
s]1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s]1$/;"	m
s]2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s]2$/;"	m
s]3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s]3$/;"	m
s^1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s^1$/;"	m
s_	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal s_$/;"	m
s_1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s_1$/;"	m
s`1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s`1$/;"	m
s`2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s`2$/;"	m
s`3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s`3$/;"	m
sa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal sa$/;"	m
saa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal saa$/;"	m
samerootsyml	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f
sanstail	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sanstail(str)$/;"	f
saveFilesInCache	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! s:saveFilesInCache()$/;"	f
saveFirstWorkspace	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! s:saveFirstWorkspace()$/;"	f
saveWorkspace	plugged/vim-ctrlspace/autoload/ctrlspace/keys/workspace.vim	/^function! s:saveWorkspace(name)$/;"	f
save_cpo	plugged/delimitMate/plugin/delimitMate.vim	/^let save_cpo = &cpo$/;"	v
savebookmark	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f
savetofile	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f
scroll	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:scroll(direction) "{{{$/;"	f
search	plugged/PIV/bin/phpdoc	/^    $search = trim($search);$/;"	v
search	plugged/PIV/bin/phpdoc	/^$search = isset($argv[1]) ? preg_replace('\/[^\\w ]\/', '', $argv[1]) : false;$/;"	v
search	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:search(pattern) abort$/;"	f
search.keymapping	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.keymapping() "{{{$/;"	f
search.on_char	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_char(cmdline) "{{{$/;"	f
search.on_enter	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_enter(cmdline) "{{{$/;"	f
search.on_leave	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_leave(cmdline) "{{{$/;"	f
section	autoload/plug.vim	/^function! s:section(flags)$/;"	f
select_region	plugged/vim-expand-region/autoload/expand_region.vim	/^function! s:select_region()$/;"	f
set	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:set(name, value, ...) "{{{$/;"	f
set	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:set(...) " {{{$/;"	f
set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set(...) abort$/;"	f
set	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:set(name, config)$/;"	f
set.add	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.add(x) abort$/;"	f
set.clear	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.clear() abort$/;"	f
set.difference_update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.difference_update(t) abort$/;"	f
set.discard	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.discard(e) abort$/;"	f
set.iand	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.iand(t) abort$/;"	f
set.intersection_update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.intersection_update(t) abort$/;"	f
set.ior	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.ior(t) abort$/;"	f
set.isub	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.isub(t) abort$/;"	f
set.ixor	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.ixor(t) abort$/;"	f
set.pop	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.pop() abort$/;"	f
set.remove	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.remove(e) abort$/;"	f
set.symmetric_difference_update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.symmetric_difference_update(t) abort$/;"	f
set.update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.update(iterable) abort$/;"	f
setActiveLine	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! s:setActiveLine()$/;"	f
setUpBuffer	plugged/vim-ctrlspace/autoload/ctrlspace/window.vim	/^function! s:setUpBuffer()$/;"	f
set_default	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_precedence	plugged/supertab/ftplugin/html.vim	/^        let set_precedence = !eclim#util#ListContains(natures, 'php')$/;"	v
set_precedence	plugged/supertab/ftplugin/html.vim	/^  let set_precedence = 1$/;"	v
set_prefix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:set_prefix(prefix)$/;"	f
setentries	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:setentries()$/;"	f
setline	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:setline(lnum, text) abort$/;"	f
settype	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:settype(type)$/;"	f
setup	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:setup(...) "{{{$/;"	f
setup_keymaps	plugged/tagbar/plugin/tagbar.vim	/^function! s:setup_keymaps() abort$/;"	f
setup_options	plugged/tagbar/plugin/tagbar.vim	/^function! s:setup_options() abort$/;"	f
setupblank	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setupblank()$/;"	f
sh	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal sh$/;"	m
sha	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal sha$/;"	m
shb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal shb$/;"	m
shellesc	autoload/plug.vim	/^function! s:shellesc(arg)$/;"	f
shift	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shiftwidth	plugged/vim-python-pep8-indent/spec/indent/indent_spec.rb	/^  def shiftwidth$/;"	f
shortest	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:shortest(lens)$/;"	f
should_compute_candidates	plugged/vim-expand-region/autoload/expand_region.vim	/^function! s:should_compute_candidates(mode)$/;"	f
should_use_migemo	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_migemo(char) "{{{$/;"	f
should_use_regexp	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_regexp() "{{{$/;"	f
should_use_smartsign	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_smartsign(char) "{{{$/;"	f
should_use_wundo	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_wundo() "{{{$/;"	f
showMenu	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node)$/;"	f
smart_execute_command	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smartdict_jp	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let smartdict_jp = g:EasyMotion#sticky_table#jp$/;"	v
smartdict_us	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let smartdict_us = g:EasyMotion#sticky_table#us$/;"	v
snapshot	autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
sob	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal sob$/;"	m
sort	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_text_object	plugged/vim-expand-region/autoload/expand_region.vim	/^function! s:sort_text_object(l, r)$/;"	f
source	autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
spa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal spa$/;"	m
space	plugged/delimitMate/Makefile	/^space    := $(empty) $(empty)$/;"	m
span	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
spawn	autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
spb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal spb$/;"	m
spc	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal spc$/;"	m
split_by_keys	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:split_by_keys(str)$/;"	f
split_rtp	autoload/plug.vim	/^function! s:split_rtp()$/;"	f
stab	plugged/supertab/plugin/supertab.vim	/^        let stab = ''$/;"	v
stab	plugged/supertab/plugin/supertab.vim	/^        let stab = substitute(stab, '()$', '', '')$/;"	v
stab	plugged/supertab/plugin/supertab.vim	/^        let stab = substitute(stab, '<SID>\\c', '<SNR>' . existing_stab.sid . '_', '')$/;"	v
stab	plugged/supertab/plugin/supertab.vim	/^      let stab = substitute(stab, '\\(<[-a-zA-Z0-9]\\+>\\)', '\\\\\\1', 'g')$/;"	v
stab	plugged/supertab/plugin/supertab.vim	/^    let stab = maparg('<s-tab>', 'i')$/;"	v
status	autoload/plug.vim	/^function! s:status()$/;"	f
status_load	autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
status_update	autoload/plug.vim	/^function! s:status_update() range$/;"	f
store	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:store(...) abort$/;"	f
strwidth	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:strwidth(str)$/;"	f
strwidthpart	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
sublist	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f
sublist7071	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f
substitute_path_separator	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
suffix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:suffix(left, suffix)$/;"	f
supertab_close_preview	plugged/supertab/plugin/supertab.vim	/^    augroup supertab_close_preview$/;"	a
sw	plugged/vim-python-pep8-indent/indent/python.vim	/^    function! s:sw()$/;"	f
switch_in	autoload/plug.vim	/^function! s:switch_in()$/;"	f
switch_out	autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
syntastic	plugged/syntastic/plugin/syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	plugged/syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic	plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^augroup syntastic$/;"	a
syntastic	plugged/syntastic/syntax_checkers/sass/sass.vim	/^augroup syntastic$/;"	a
syntastic#c#GetLocList	plugged/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetLocList(filetype, subchecker, options) abort " {{{2$/;"	f
syntastic#c#NullOutput	plugged/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#NullOutput() abort " {{{2$/;"	f
syntastic#c#ReadConfig	plugged/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file) abort " {{{2$/;"	f
syntastic#log#debug	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debug(level, msg, ...) abort " {{{2$/;"	f
syntastic#log#debugDump	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugDump(level) abort " {{{2$/;"	f
syntastic#log#debugShowOptions	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowOptions(level, names) abort " {{{2$/;"	f
syntastic#log#debugShowVariables	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowVariables(level, names) abort " {{{2$/;"	f
syntastic#log#deprecationWarn	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#deprecationWarn(old, new, ...) abort " {{{2$/;"	f
syntastic#log#error	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#error(msg) abort " {{{2$/;"	f
syntastic#log#info	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#info(msg) abort " {{{2$/;"	f
syntastic#log#ndebug	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#ndebug(level, title, messages) abort " {{{2$/;"	f
syntastic#log#oneTimeWarn	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#oneTimeWarn(msg) abort " {{{2$/;"	f
syntastic#log#warn	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#warn(msg) abort " {{{2$/;"	f
syntastic#postprocess#compressWhitespace	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#compressWhitespace(errors) abort " {{{2$/;"	f
syntastic#postprocess#cygwinRemoveCR	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors) abort " {{{2$/;"	f
syntastic#postprocess#decodeXMLEntities	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#decodeXMLEntities(errors) abort " {{{2$/;"	f
syntastic#postprocess#filterForeignErrors	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#filterForeignErrors(errors) abort " {{{2$/;"	f
syntastic#postprocess#guards	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#guards(errors) abort " {{{2$/;"	f
syntastic#preprocess#basex	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#basex(errors) abort " {{{2$/;"	f
syntastic#preprocess#bro	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#bro(errors) abort " {{{2$/;"	f
syntastic#preprocess#cabal	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cabal(errors) abort " {{{2$/;"	f
syntastic#preprocess#checkstyle	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#checkstyle(errors) abort " {{{2$/;"	f
syntastic#preprocess#coffeelint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#coffeelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#cppcheck	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cppcheck(errors) abort " {{{2$/;"	f
syntastic#preprocess#dockerfile_lint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#dockerfile_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#flow	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#flow(errors) abort " {{{2$/;"	f
syntastic#preprocess#iconv	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#iconv(errors) abort " {{{2$/;"	f
syntastic#preprocess#jscs	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#jscs(errors) abort " {{{2$/;"	f
syntastic#preprocess#killEmpty	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#killEmpty(errors) abort " {{{2$/;"	f
syntastic#preprocess#mypy	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#mypy(errors) abort " {{{2$/;"	f
syntastic#preprocess#nix	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#nix(errors) abort " {{{2$/;"	f
syntastic#preprocess#perl	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#perl(errors) abort " {{{2$/;"	f
syntastic#preprocess#prospector	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#prospector(errors) abort " {{{2$/;"	f
syntastic#preprocess#rparse	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#rparse(errors) abort " {{{2$/;"	f
syntastic#preprocess#scss_lint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#scss_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#stylelint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#stylelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#tslint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#tslint(errors) abort " {{{2$/;"	f
syntastic#preprocess#validator	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#validator(errors) abort " {{{2$/;"	f
syntastic#preprocess#vint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#vint(errors) abort " {{{2$/;"	f
syntastic#util#CygwinPath	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#CygwinPath(path) abort " {{{2$/;"	f
syntastic#util#DevNull	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull() abort " {{{2$/;"	f
syntastic#util#Slash	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#Slash() abort " {{{2$/;"	f
syntastic#util#argsescape	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#argsescape(opt) abort " {{{2$/;"	f
syntastic#util#bufIsActive	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer) abort " {{{2$/;"	f
syntastic#util#compareLexi	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#compareLexi(a, b) abort " {{{2$/;"	f
syntastic#util#decodeXMLEntities	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#decodeXMLEntities(string) abort " {{{2$/;"	f
syntastic#util#dictFilter	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#dictFilter(errors, filter) abort " {{{2$/;"	f
syntastic#util#findFileInParent	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findFileInParent(what, where) abort " {{{2$/;"	f
syntastic#util#findGlobInParent	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findGlobInParent(what, where) abort " {{{2$/;"	f
syntastic#util#float2str	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#float2str(val) abort " {{{2$/;"	f
syntastic#util#isRunningWindows	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#isRunningWindows() abort " {{{2$/;"	f
syntastic#util#parseShebang	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang() abort " {{{2$/;"	f
syntastic#util#parseVersion	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseVersion(version, ...) abort " {{{2$/;"	f
syntastic#util#redraw	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#redraw(full) abort " {{{2$/;"	f
syntastic#util#rmrf	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#rmrf(what) abort " {{{2$/;"	f
syntastic#util#screenWidth	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#screenWidth(str, tabstop) abort " {{{2$/;"	f
syntastic#util#setWids	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#setWids() abort " {{{2$/;"	f
syntastic#util#shescape	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shescape(string) abort " {{{2$/;"	f
syntastic#util#shexpand	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shexpand(string, ...) abort " {{{2$/;"	f
syntastic#util#stamp	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#stamp() abort " {{{2$/;"	f
syntastic#util#str2float	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#str2float(val) abort " {{{2$/;"	f
syntastic#util#system	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#system(command) abort " {{{2$/;"	f
syntastic#util#tmpdir	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#tmpdir() abort " {{{2$/;"	f
syntastic#util#unique	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list) abort " {{{2$/;"	f
syntastic#util#var	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#var(name, ...) abort " {{{2$/;"	f
syntastic#util#versionIsAtLeast	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required) abort " {{{2$/;"	f
syntastic#util#wformat	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wformat(format, str) abort " {{{2$/;"	f
syntastic#util#wideMsg	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg) abort " {{{2$/;"	f
syntax	autoload/plug.vim	/^function! s:syntax()$/;"	f
syntax	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:syntax()$/;"	f
syntax	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:syntax()$/;"	f
syntax	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:syntax()$/;"	f
syntax	plugged/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! s:syntax()$/;"	f
syntax	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:syntax()$/;"	f
syntax	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:syntax()$/;"	f
syntax	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:syntax()$/;"	f
system	autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
system_chomp	autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s{1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s{1$/;"	m
s|1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s|1$/;"	m
s}1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s}1$/;"	m
s~1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s~1$/;"	m
t	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-bd-t)$/;"	m
t	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-t)$/;"	m
t/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map t\/ <Plug>(easymotion-tn)$/;"	m
t;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal t;$/;"	m
t;a	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal t;a$/;"	m
tH	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal tH$/;"	m
tab2spacelen	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:tab2spacelen(line, col_num) abort$/;"	f
tabContent	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! s:tabContent(clv)$/;"	f
tabstop	plugged/vim-python-pep8-indent/spec/indent/indent_spec.rb	/^  def tabstop$/;"	f
tagbar#CloseWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#OpenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#StartDebug	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#StartDebug(...) abort$/;"	f
tagbar#StopDebug	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#StopDebug() abort$/;"	f
tagbar#ToggleWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow() abort$/;"	f
tagbar#autoopen	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currentfile	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#gettypeconfig	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#toggle_pause	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
tail	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:tail()$/;"	f
take_while	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
tb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal tb$/;"	m
tba	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal tba$/;"	m
tcount	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let tcount += 1$/;"	v
tcount	plugged/delimitMate/test/autoclose_matchpairs.vim	/^let tcount = 1$/;"	v
tcount	plugged/delimitMate/test/autoclose_quotes.vim	/^      let tcount += 1$/;"	v
tcount	plugged/delimitMate/test/autoclose_quotes.vim	/^    let tcount += 1$/;"	v
tcount	plugged/delimitMate/test/autoclose_quotes.vim	/^let tcount = 1$/;"	v
tcount	plugged/delimitMate/test/expand_cr.vim	/^  let tcount += 1$/;"	v
tcount	plugged/delimitMate/test/expand_cr.vim	/^let tcount = 1$/;"	v
tcount	plugged/delimitMate/test/expand_space.vim	/^  let tcount += 1$/;"	v
tcount	plugged/delimitMate/test/expand_space.vim	/^let tcount = 1$/;"	v
test	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:test() "{{{$/;"	f
test_mappings	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:test_mappings(list, is_matchpair) "{{{$/;"	f
testsnumber	plugged/delimitMate/test/autoclose_matchpairs.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^"'''))$/;"	v
testsnumber	plugged/delimitMate/test/autoclose_quotes.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^"'''))$/;"	v
testsnumber	plugged/delimitMate/test/expand_cr.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^=\\{80}$'''))$/;"	v
testsnumber	plugged/delimitMate/test/expand_space.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^=\\{80}$'''))$/;"	v
text	plugged/syntastic/syntax_checkers/python/codec.py	/^            text = codecs.lookup(match.groupdict()["coding"]).incrementaldecoder().decode($/;"	v
text	plugged/syntastic/syntax_checkers/python/codec.py	/^        text = ''.join(text).encode('utf-8')$/;"	v
text	plugged/syntastic/syntax_checkers/python/codec.py	/^        text = fle.readlines()$/;"	v
textdialog	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:textdialog(str)$/;"	f
tha	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal tha$/;"	m
thb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal thb$/;"	m
thc	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal thc$/;"	m
throw	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:throw(message) abort$/;"	f
throw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:throw(exp, where)$/;"	f
throw_cmd	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:throw_cmd(exp, where)$/;"	f
tick	autoload/plug.vim	/^function! s:tick()$/;"	f
to_a	autoload/plug.vim	/^function! s:to_a(v)$/;"	f
to_cursor.failure_message_for_should	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! s:to_cursor.failure_message_for_should(actual, expected)$/;"	f
to_cursor.match	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! s:to_cursor.match(actual, expected)$/;"	f
to_s	autoload/plug.vim	/^function! s:to_s(v)$/;"	f
to_string	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:to_string(expr)$/;"	f
toggleAllMode	plugged/vim-ctrlspace/autoload/ctrlspace/keys/buffer.vim	/^function! s:toggleAllMode()$/;"	f
toggleIgnoreFilter	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleListView	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! s:toggleListView(k, mode)$/;"	f
toggleListViewAndSearch	plugged/vim-ctrlspace/autoload/ctrlspace/keys/common.vim	/^function! s:toggleListViewAndSearch(k, mode)$/;"	f
toggleShowBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom()$/;"	f
togglebg#map	plugged/vim-colors-solarized/autoload/togglebg.vim	/^function! togglebg#map(mapActivation)$/;"	f
translate_path	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_path(Dir, {i, Path}) ->$/;"	f
translate_path	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_path(_, Other) -> Other.$/;"	f
translate_paths	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_paths(Dir, RebarOpts) ->$/;"	f
trim	autoload/plug.vim	/^function! s:trim(str)$/;"	f
truncate	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
try	plugged/python-syntax/test.py	/^for while if elif else import from as try except finally and in is not or$/;"	i
turn_off_hl_error	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:turn_off_hl_error() "{{{$/;"	f
turn_on_hl_error	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:turn_on_hl_error() "{{{$/;"	f
u	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal! u$/;"	m
undefined	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:undefined() abort$/;"	f
undo_lock._save	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock._save() abort$/;"	f
undo_lock.restore	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.restore() abort$/;"	f
undo_lock.save	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.save() abort$/;"	f
undo_lock.undobreak	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.undobreak() abort$/;"	f
uniq	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
unload	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:unload() abort$/;"	f
unmapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:unmapping(keymapping, key, ...)$/;"	f
unmarksigns	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:unmarksigns()$/;"	f
unshift	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
upDirCurrentRootClosed	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
update	autoload/plug.vim	/^function! s:update(force, names)$/;"	f
updateFileList	plugged/vim-ctrlspace/autoload/ctrlspace/files.vim	/^function! s:updateFileList(path, newPath)$/;"	f
update_finish	autoload/plug.vim	/^function! s:update_finish()$/;"	f
update_impl	autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
update_python	autoload/plug.vim	/^function! s:update_python()$/;"	f
update_ruby	autoload/plug.vim	/^function! s:update_ruby()$/;"	f
update_vim	autoload/plug.vim	/^function! s:update_vim()$/;"	f
upgrade	autoload/plug.vim	/^function! s:upgrade()$/;"	f
upgrade_specs	autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
usrign	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f
vacantdict	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f
validfile	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f
variable.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:variable.restore() abort$/;"	f
version_requirement	autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
vfha	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal vfha$/;"	m
vimTAP	plugged/delimitMate/test/_setup.vim	/^let vimTAP = expand('<sfile>:p:h').'\/build\/VimTAP'$/;"	v
vim_cmdline_mapping.keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.keymapping(cmdline)$/;"	f
vim_cmdline_mapping.on_enter	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.on_enter(cmdline)$/;"	f
vimlintOutput	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! s:vimlintOutput(filename, pos, ev, eid, mes, obj) " {{{2$/;"	f
vital	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^augroup vital-hit-a-hint-motion-default-highlight$/;"	a
vital#	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#of	plugged/vim-easymotion/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital_files	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:vital_files() abort$/;"	f
w	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map w <Plug>(easymotion-w)$/;"	m
w	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        omap w <Plug>(easymotion-w)$/;"	m
walker	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f
warn	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
warning	plugged/tagbar/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
wc	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal wc$/;"	m
wcswidth	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
web	plugged/PIV/bin/phpdoc	/^    $web = file_get_contents('http:\/\/php.net\/' . $search);$/;"	v
wh	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal wh$/;"	m
win2pos2hint_to_w2l2c2h	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:win2pos2hint_to_w2l2c2h(win2pos2hint) abort$/;"	f
wincall	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:wincall(func, arglist, ...) abort$/;"	f
winnr2poses_to_list	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:winnr2poses_to_list(winnr2poses, ...) abort$/;"	f
with_cd	autoload/plug.vim	/^function! s:with_cd(cmd, dir)$/;"	f
with_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
workspaceListContent	plugged/vim-ctrlspace/autoload/ctrlspace/engine.vim	/^function! s:workspaceListContent(clv)$/;"	f
wrap	plugged/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
wrapreg	plugged/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
writecache	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f
writecache	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f
yS	plugged/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	plugged/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	plugged/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ys	plugged/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	plugged/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
zip	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip_fill	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
{	plugged/PIV/ftplugin/php.vim	/^        inoremap  { {<CR>}<C-O>O$/;"	m
{	plugged/PIV/ftplugin/php.vim	/^        inoremap <buffer>  { {<CR>}<C-O>O$/;"	m
{	plugged/PIV/ftplugin/php.vim	/^vnoremap <buffer> { "zdi{<C-R>z}<ESC>$/;"	m
