"=========================================================
" bundle
"=========================================================
set nocompatible
filetype off " required! turn off

if !exists('g:bundle_groups')
    let g:bundle_groups=['python', 'javascript', 'markdown', 'html', 'css', 'tmux', 'beta', 'json', 'nginx', 'golang', 'ruby', 'less', 'php', 'coffeescript']
endif

call plug#begin('~/.vim/plugged')
" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
" Plug 'junegunn/vim-easy-align'
Plug 'helloqingbing/molokai'
Plug 'majutsushi/tagbar'
"Plug 'WolfgangMehner/vim-plugins'

" Parentheses auto highlight match
Plug 'kien/rainbow_parentheses.vim'
"  Plug 'bronson/vim-trailing-whitespace'
Plug 'altercation/vim-colors-solarized'

"Commnet batch"
Plug 'scrooloose/nerdcommenter'

"autoadd symbols"
Plug 'tpope/vim-surround'

"auto Completion brackets
Plug 'Raimondi/delimitMate'
Plug 'scrooloose/syntastic'
Plug 'ervandew/supertab'
Plug 'terryma/vim-expand-region'
Plug 'scrooloose/syntastic'
"Make status bar more beautiful
Plug 'Lokaltog/vim-powerline'
Plug 'szw/vim-ctrlspace'
"move quickly"
Plug 'Lokaltog/vim-easymotion'

"auto complete
"Plug 'Valloric/YouCompleteMe'

"powful file search
Plug 'kien/ctrlp.vim'

" Status Bar
"Plug 'vim-airline/vim-airline'
"Plug 'vim-airline/vim-airline-themes'
"
" " Any valid git URL is allowed
" Plug 'https://github.com/junegunn/vim-github-dashboard.git'

"  Replaced by Tagbar
"  Plug 'https://github.com/vim-scripts/taglist.vim.git'
"
" " Group dependencies, vim-snippets depends on ultisnips
" Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
"
" " On-demand loading
" Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'scrooloose/nerdtree' | Plug 'jistr/vim-nerdtree-tabs'
" Plug 'tpope/vim-fireplace', { 'for': 'clojure' }
"
" " Using a non-master branch
" Plug 'rdnetto/YCM-Generator', { 'branch': 'stable' }
"
" " Plugin options
" Plug 'nsf/gocode', { 'tag': 'v.20150303', 'rtp': 'vim' }
"
" " Plugin outside ~/.vim/plugged with post-update hook
" Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
"
" " Unmanaged plugin (manually installed and updated)
Plug '~/.vim/plugged/winmanager_23'
Plug '~/.vim/plugged/minibuffer_632'
Plug '~/.vim/plugged/omnicppcomplete-041'
Plug '~/.vim/plugged/hc'
Plug '~/.vim/plugged/vimgdb_runtime'
"
" Add plugins to &runtimepath
call plug#end()

" molokai {{{
let g:molokai_original = 1
let g:rehash256 = 1
" }}}

" TagList {{{
nmap <F8> :Tlist<CR>
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
" }}}

"
" tagbar {{{
nmap <F9> :TagbarToggle<CR>
let g:tagbar_autofocus = 1
" let g:tagbar_autoshowtag = 1
" let g:tagbar_show_visibility = 1
" for ruby
let g:tagbar_type_ruby = {
            \ 'kinds' : [
            \ 'm:modules',
            \ 'c:classes',
            \ 'd:describes',
            \ 'C:contexts',
            \ 'f:methods',
            \ 'F:singleton methods'
            \ ]
            \ }
" }}}

" winmanager {{{
let g:winManagerWindowLayout='NERDTree|Tagbar'
map wm :WMToggle<cr>

"let g:winManagerWidth=30
"let g:AutoOpenWinManager = 1

"let g:NERDTree_title = "[NERDTree]"
"function! NERDTree_Start()
"exec 'q'
"exec 'NERDTree'
"endfunction

"function! NERDTree_IsValid()
"return 1
"endfunction

"let g:Tagbar_title = "[Tagbar]"
"function! Tagbar_Start()
"exe 'q' 
"exe 'TagbarOpen'
"endfunction

"function! Tagbar_IsValid()
"return 1
"endfunction
"let g:tagbar_vertical = 30
" }}}

" miniBuffer {{{    
let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1
let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplModSelTarget = 1
let g:miniBufExplMapCTabSwitchBufs = 1

let g:bufExplorerMaxHeight=30

map <tab> :bn<CR>
map <tab> :bp<CR>
map <leader>c :CMiniBufExplorer<cr>
map <leader>u :UMiniBufExplorer<cr>
map <leader>t :TMiniBufExplorer<cr>
" }}}
"
"
" nerdtree nerdtreetabs {{{
nmap wm :NERDTreeToggle<CR>
let NERDTreeHighlightCursorline=1
let NERDTreeIgnore=[ '\.pyc$', '\.pyo$', '\.obj$', '\.o$', '\.so$', '\.egg$', '^\.git$', '^\.svn$', '^\.hg$' ]
"close vim if the only window left open is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | end
" s/v split screen to open the file
let g:NERDTreeMapOpenSplit = 's'
let g:NERDTreeMapOpenVSplit = 'v'

" nerdtreetabs
map <Leader>n <plug>NERDTreeTabsToggle<CR>
let g:nerdtree_tabs_synchronize_view=0
let g:nerdtree_tabs_synchronize_focus=0
let g:nerdtree_tabs_open_on_console_startup=0
let g:nerdtree_tabs_open_on_gui_startup=0
" autocmd VimEnter * NERDTree
" }
"  
"  Rainbow_parentheses {{{
let g:rbpt_colorpairs = [
            \  ['brown',       'RoyalBlue3'],
            \  ['Darkblue',    'SeaGreen3'],
            \  ['darkgray',    'DarkOrchid3'],
            \  ['darkgreen',   'firebrick3'],
            \  ['darkcyan',    'RoyalBlue3'],
            \  ['darkred',     'SeaGreen3'],
            \  ['darkmagenta', 'DarkOrchid3'],
            \  ['brown',       'firebrick3'],
            \  ['gray',        'RoyalBlue3'],
            \  ['black',       'SeaGreen3'],
            \  ['darkmagenta', 'DarkOrchid3'],
            \  ['Darkblue',    'firebrick3'],
            \  ['darkgreen',   'RoyalBlue3'],
            \  ['darkcyan',    'SeaGreen3'],
            \  ['darkred',     'DarkOrchid3'],
            \  ['red',         'firebrick3'],
            \   ]
let g:rbpt_max = 40
let g:rbpt_loadcmd_toggle = 0
" }

if count(g:bundle_groups, 'php')
    Plug 'spf13/PIV'
endif

if count(g:bundle_groups, 'python')
    " for python.vim syntax highlight
    " pythonsyntax
    Plug 'hdima/python-syntax'
    Plug 'hynek/vim-python-pep8-indent'
    Plug 'Glench/Vim-Jinja2-Syntax'
endif
